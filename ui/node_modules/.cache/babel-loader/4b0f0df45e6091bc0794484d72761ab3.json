{"ast":null,"code":"'use strict';\n\nconst getDiscriminatorByValue = require('./getDiscriminatorByValue');\n/*!\n * Find the correct constructor, taking into account discriminators\n */\n\n\nmodule.exports = function getConstructor(Constructor, value) {\n  const discriminatorKey = Constructor.schema.options.discriminatorKey;\n\n  if (value != null && Constructor.discriminators && value[discriminatorKey] != null) {\n    if (Constructor.discriminators[value[discriminatorKey]]) {\n      Constructor = Constructor.discriminators[value[discriminatorKey]];\n    } else {\n      const constructorByValue = getDiscriminatorByValue(Constructor.discriminators, value[discriminatorKey]);\n\n      if (constructorByValue) {\n        Constructor = constructorByValue;\n      }\n    }\n  }\n\n  return Constructor;\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/helpers/discriminator/getConstructor.js"],"names":["getDiscriminatorByValue","require","module","exports","getConstructor","Constructor","value","discriminatorKey","schema","options","discriminators","constructorByValue"],"mappings":"AAAA;;AAEA,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAAvC;AAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,WAAxB,EAAqCC,KAArC,EAA4C;AAC3D,QAAMC,gBAAgB,GAAGF,WAAW,CAACG,MAAZ,CAAmBC,OAAnB,CAA2BF,gBAApD;;AACA,MAAID,KAAK,IAAI,IAAT,IACAD,WAAW,CAACK,cADZ,IAEAJ,KAAK,CAACC,gBAAD,CAAL,IAA2B,IAF/B,EAEqC;AACnC,QAAIF,WAAW,CAACK,cAAZ,CAA2BJ,KAAK,CAACC,gBAAD,CAAhC,CAAJ,EAAyD;AACvDF,MAAAA,WAAW,GAAGA,WAAW,CAACK,cAAZ,CAA2BJ,KAAK,CAACC,gBAAD,CAAhC,CAAd;AACD,KAFD,MAEO;AACL,YAAMI,kBAAkB,GAAGX,uBAAuB,CAACK,WAAW,CAACK,cAAb,EAA6BJ,KAAK,CAACC,gBAAD,CAAlC,CAAlD;;AACA,UAAII,kBAAJ,EAAwB;AACtBN,QAAAA,WAAW,GAAGM,kBAAd;AACD;AACF;AACF;;AAED,SAAON,WAAP;AACD,CAhBD","sourcesContent":["'use strict';\n\nconst getDiscriminatorByValue = require('./getDiscriminatorByValue');\n\n/*!\n * Find the correct constructor, taking into account discriminators\n */\n\nmodule.exports = function getConstructor(Constructor, value) {\n  const discriminatorKey = Constructor.schema.options.discriminatorKey;\n  if (value != null &&\n      Constructor.discriminators &&\n      value[discriminatorKey] != null) {\n    if (Constructor.discriminators[value[discriminatorKey]]) {\n      Constructor = Constructor.discriminators[value[discriminatorKey]];\n    } else {\n      const constructorByValue = getDiscriminatorByValue(Constructor.discriminators, value[discriminatorKey]);\n      if (constructorByValue) {\n        Constructor = constructorByValue;\n      }\n    }\n  }\n\n  return Constructor;\n};"]},"metadata":{},"sourceType":"script"}