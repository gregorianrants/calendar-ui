{"ast":null,"code":"/**\n * ObjectId type constructor\n *\n * ####Example\n *\n *     const id = new mongoose.Types.ObjectId;\n *\n * @constructor ObjectId\n */\n'use strict';\n\nconst ObjectId = require('../driver').get().ObjectId;\n\nconst objectIdSymbol = require('../helpers/symbols').objectIdSymbol;\n/*!\n * Getter for convenience with populate, see gh-6115\n */\n\n\nObject.defineProperty(ObjectId.prototype, '_id', {\n  enumerable: false,\n  configurable: true,\n  get: function () {\n    return this;\n  }\n});\n/*!\n * Convenience `valueOf()` to allow comparing ObjectIds using double equals re: gh-7299\n */\n\nif (ObjectId.prototype.valueOf === void 0) {\n  ObjectId.prototype.valueOf = function objectIdValueOf() {\n    return this.toString();\n  };\n}\n\nObjectId.prototype[objectIdSymbol] = true;\nmodule.exports = ObjectId;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/types/objectid.js"],"names":["ObjectId","require","get","objectIdSymbol","Object","defineProperty","prototype","enumerable","configurable","valueOf","objectIdValueOf","toString","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,GAArB,GAA2BF,QAA5C;;AACA,MAAMG,cAAc,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BE,cAArD;AAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,cAAP,CAAsBL,QAAQ,CAACM,SAA/B,EAA0C,KAA1C,EAAiD;AAC/CC,EAAAA,UAAU,EAAE,KADmC;AAE/CC,EAAAA,YAAY,EAAE,IAFiC;AAG/CN,EAAAA,GAAG,EAAE,YAAW;AACd,WAAO,IAAP;AACD;AAL8C,CAAjD;AAQA;AACA;AACA;;AAEA,IAAIF,QAAQ,CAACM,SAAT,CAAmBG,OAAnB,KAA+B,KAAK,CAAxC,EAA2C;AACzCT,EAAAA,QAAQ,CAACM,SAAT,CAAmBG,OAAnB,GAA6B,SAASC,eAAT,GAA2B;AACtD,WAAO,KAAKC,QAAL,EAAP;AACD,GAFD;AAGD;;AAEDX,QAAQ,CAACM,SAAT,CAAmBH,cAAnB,IAAqC,IAArC;AAEAS,MAAM,CAACC,OAAP,GAAiBb,QAAjB","sourcesContent":["/**\n * ObjectId type constructor\n *\n * ####Example\n *\n *     const id = new mongoose.Types.ObjectId;\n *\n * @constructor ObjectId\n */\n\n'use strict';\n\nconst ObjectId = require('../driver').get().ObjectId;\nconst objectIdSymbol = require('../helpers/symbols').objectIdSymbol;\n\n/*!\n * Getter for convenience with populate, see gh-6115\n */\n\nObject.defineProperty(ObjectId.prototype, '_id', {\n  enumerable: false,\n  configurable: true,\n  get: function() {\n    return this;\n  }\n});\n\n/*!\n * Convenience `valueOf()` to allow comparing ObjectIds using double equals re: gh-7299\n */\n\nif (ObjectId.prototype.valueOf === void 0) {\n  ObjectId.prototype.valueOf = function objectIdValueOf() {\n    return this.toString();\n  };\n}\n\nObjectId.prototype[objectIdSymbol] = true;\n\nmodule.exports = ObjectId;\n"]},"metadata":{},"sourceType":"script"}