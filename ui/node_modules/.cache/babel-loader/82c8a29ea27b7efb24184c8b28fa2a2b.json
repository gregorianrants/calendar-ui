{"ast":null,"code":"'use strict';\n\nconst ObjectId = require('../driver').get().ObjectId;\n\nconst assert = require('assert');\n\nmodule.exports = function castObjectId(value) {\n  if (value == null) {\n    return value;\n  }\n\n  if (value instanceof ObjectId) {\n    return value;\n  }\n\n  if (value._id) {\n    if (value._id instanceof ObjectId) {\n      return value._id;\n    }\n\n    if (value._id.toString instanceof Function) {\n      return new ObjectId(value._id.toString());\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    return new ObjectId(value.toString());\n  }\n\n  assert.ok(false);\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/cast/objectid.js"],"names":["ObjectId","require","get","assert","module","exports","castObjectId","value","_id","toString","Function","ok"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,GAArB,GAA2BF,QAA5C;;AACA,MAAMG,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5C,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAOA,KAAP;AACD;;AAED,MAAIA,KAAK,YAAYP,QAArB,EAA+B;AAC7B,WAAOO,KAAP;AACD;;AAED,MAAIA,KAAK,CAACC,GAAV,EAAe;AACb,QAAID,KAAK,CAACC,GAAN,YAAqBR,QAAzB,EAAmC;AACjC,aAAOO,KAAK,CAACC,GAAb;AACD;;AACD,QAAID,KAAK,CAACC,GAAN,CAAUC,QAAV,YAA8BC,QAAlC,EAA4C;AAC1C,aAAO,IAAIV,QAAJ,CAAaO,KAAK,CAACC,GAAN,CAAUC,QAAV,EAAb,CAAP;AACD;AACF;;AAED,MAAIF,KAAK,CAACE,QAAN,YAA0BC,QAA9B,EAAwC;AACtC,WAAO,IAAIV,QAAJ,CAAaO,KAAK,CAACE,QAAN,EAAb,CAAP;AACD;;AAEDN,EAAAA,MAAM,CAACQ,EAAP,CAAU,KAAV;AACD,CAvBD","sourcesContent":["'use strict';\n\nconst ObjectId = require('../driver').get().ObjectId;\nconst assert = require('assert');\n\nmodule.exports = function castObjectId(value) {\n  if (value == null) {\n    return value;\n  }\n\n  if (value instanceof ObjectId) {\n    return value;\n  }\n\n  if (value._id) {\n    if (value._id instanceof ObjectId) {\n      return value._id;\n    }\n    if (value._id.toString instanceof Function) {\n      return new ObjectId(value._id.toString());\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    return new ObjectId(value.toString());\n  }\n\n  assert.ok(false);\n};"]},"metadata":{},"sourceType":"script"}