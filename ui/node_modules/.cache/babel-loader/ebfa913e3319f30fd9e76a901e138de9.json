{"ast":null,"code":"import _slicedToArray from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{weekContaining,setTimeDayStart,setTimeDayEnd}from\"../../utilities/dateUtilities\";import{addDays}from\"date-fns\";import React from\"react\";export function getDay(date){var increment=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var currentDate=addDays(date,increment*1);var days=[new Date(currentDate)];var firstDay=setTimeDayStart(new Date(days[0]));var lastDay=setTimeDayEnd(new Date(days[days.length-1]));return{currentDate:currentDate,days:days,firstDay:firstDay,lastDay:lastDay};}export function dayReducer(state,action){var type=action.type;if(type==='INCREMENT'){console.log('type');return getDay(state.currentDate,1);}else if(type==='DECREMENT'){return getDay(state.currentDate,-1);}}export function useDay(){var _React$useReducer=React.useReducer(dayReducer,new Date(),getDay),_React$useReducer2=_slicedToArray(_React$useReducer,2),days=_React$useReducer2[0],dispatch=_React$useReducer2[1];return[days,dispatch];}export function getWeek(date){var increment=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var currentDate=addDays(date,increment*7);var days=weekContaining(currentDate);var firstDay=setTimeDayStart(new Date(days[0]));//TODO\nvar lastDay=setTimeDayEnd(new Date(days[days.length-1]));//TODO\nreturn{currentDate:currentDate,days:days,firstDay:firstDay,lastDay:lastDay};}export function weekReducer(state,action){var type=action.type;if(type==='INCREMENT'){console.log('type');return getWeek(state.currentDate,1);}else if(type==='DECREMENT'){return getWeek(state.currentDate,-1);}}export function useWeek(){var _React$useReducer3=React.useReducer(weekReducer,new Date(),getWeek),_React$useReducer4=_slicedToArray(_React$useReducer3,2),days=_React$useReducer4[0],dispatch=_React$useReducer4[1];return[days,dispatch];}","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Calendar/reducer.js"],"names":["weekContaining","setTimeDayStart","setTimeDayEnd","addDays","React","getDay","date","increment","currentDate","days","Date","firstDay","lastDay","length","dayReducer","state","action","type","console","log","useDay","useReducer","dispatch","getWeek","weekReducer","useWeek"],"mappings":"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","sourcesContent":["import {weekContaining,setTimeDayStart,setTimeDayEnd} from \"../../utilities/dateUtilities\";\nimport {addDays} from \"date-fns\";\nimport React from \"react\";\n\n\nexport function getDay(date,increment=0){\n    const currentDate = addDays(date,increment*1)\n    const days = [new Date(currentDate)]\n    const firstDay = setTimeDayStart(new Date(days[0]))\n    const lastDay = setTimeDayEnd(new Date(days[days.length-1]))\n    return {\n        currentDate,days,firstDay,lastDay\n    }\n}\nexport function dayReducer(state,action){\n    const {type} = action\n    if(type==='INCREMENT'){\n        console.log('type')\n        return getDay(state.currentDate,1)\n    }\n    else if(type==='DECREMENT'){\n        return getDay(state.currentDate,-1)\n    }\n}\nexport function useDay(){\n    const [days,dispatch] = React.useReducer(dayReducer,\n        new Date(),\n        getDay)\n\n    return [days,dispatch]\n}\n\nexport function getWeek(date, increment=0){\n    const currentDate = addDays(date,increment*7)\n    const days = weekContaining(currentDate)\n    const firstDay = setTimeDayStart(new Date(days[0]))//TODO\n    const lastDay = setTimeDayEnd(new Date(days[days.length-1]))//TODO\n    return {\n        currentDate,days,firstDay,lastDay\n    }\n}\n\nexport function weekReducer(state,action){\n    const {type} = action\n    if(type==='INCREMENT'){\n        console.log('type')\n        return getWeek(state.currentDate,1)\n    }\n    else if(type==='DECREMENT'){\n        return getWeek(state.currentDate,-1)\n    }\n}\n\nexport function useWeek(){\n    const [days,dispatch] = React.useReducer(weekReducer,\n        new Date(),\n        getWeek)\n\n    return [days,dispatch]\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}