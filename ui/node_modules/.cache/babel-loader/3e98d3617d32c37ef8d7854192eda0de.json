{"ast":null,"code":"const {\n  cloneDeep\n} = require(\"lodash\");\n\nconst {\n  pipe,\n  partialRight,\n  curry,\n  flip\n} = require(\"ramda\");\n\nfunction removeDotPaths(obj) {\n  return Object.keys(obj).reduce((a, b) => {\n    if (b.includes(\".\")) {\n      return a;\n    } else {\n      return { ...a,\n        [b]: cloneDeep(obj[b])\n      };\n    }\n  }, {});\n}\n\nfunction isValidatiorError(obj) {\n  if (!typeof obj === \"object\") return false;\n\n  if (obj.hasOwnProperty(\"name\") && obj[\"name\"] === \"ValdidatiorError\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction handleValidatiorError(obj) {\n  return obj.message;\n}\n\nfunction isCastError(obj) {\n  if (!typeof obj === \"object\") return false;\n\n  if (obj.hasOwnProperty(\"name\") && obj[\"name\"] === \"CastError\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction handleCastError(obj) {\n  return `${obj.path} should be a ${obj.Kind}`;\n} //TO UNDERSTAND LOOK AT THIS FIRST THE FURHTER CHANGES ARE JUST TO MAKE IMMUTABLE AND FUNCTIONAL - this is a recursive function\n// i realise this is pretty confusing but so are mongoose error objects\n//\n// function process(errorsObj, result) {\n//   if (errorsObj.hasOwnProperty(\"errors\"))\n//     return process(errorsObj[\"errors\"], result);\n//   if (errorsObj.hasOwnProperty(\"properties\"))\n//     return errorsObj[\"properties\"][\"message\"];\n//   let builder = {};\n//   for (const [key, value] of Object.entries(errorsObj)) {\n//     builder[key] = process(value, {});\n//   }\n//   return builder;\n// }\n//we wrap the function purely to clone the errors obj passed to it,\n//because passing oject by reference can cause bugs, this could happen if we modified the object,\n//we dont modify it but i have cloned it anyway so that the object passed is forever protected from modification by this function.\n\n\nfunction processMongooseError(errorsObj) {\n  if (!errorsObj) return null;\n  const pretty = JSON.stringify(errorsObj || {}, null, 2);\n  console.log(pretty);\n\n  function inner(errorsObj, result) {\n    if (errorsObj.hasOwnProperty(\"errors\")) return inner(errorsObj[\"errors\"]);\n    if (isCastError(errorsObj)) return handleCastError(errorsObj);\n    if (isValidatiorError(errorsObj)) return handleValidatiorError(errorsObj);\n    let builder = {};\n    const withoutDuplicates = removeDotPaths(errorsObj); //todo proccess the object outside of function to remove all dot paths first\n\n    for (const [key, value] of Object.entries(withoutDuplicates)) {\n      builder[key] = inner(value);\n    }\n\n    return builder;\n  }\n\n  return inner(cloneDeep(errorsObj));\n}\n\nmodule.exports = processMongooseError;\nconst CastError = {\n  errors: {\n    \"charges.hourlyRate\": {\n      stringValue: '\"b\"',\n      valueType: \"string\",\n      kind: \"Number\",\n      value: \"b\",\n      path: \"hourlyRate\",\n      reason: {\n        name: \"AssertionError\",\n        actual: false,\n        expected: true,\n        operator: \"==\",\n        message: \"false == true\",\n        generatedMessage: true\n      },\n      name: \"CastError\",\n      message: 'Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"'\n    },\n    charges: {\n      errors: {\n        hourlyRate: {\n          stringValue: '\"b\"',\n          valueType: \"string\",\n          kind: \"Number\",\n          value: \"b\",\n          path: \"hourlyRate\",\n          reason: {\n            name: \"AssertionError\",\n            actual: false,\n            expected: true,\n            operator: \"==\",\n            message: \"false == true\",\n            generatedMessage: true\n          },\n          name: \"CastError\",\n          message: 'Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"'\n        }\n      },\n      _message: \"Validation failed\",\n      name: \"ValidationError\",\n      message: 'Validation failed: hourlyRate: Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"'\n    }\n  },\n  _message: \"Validation failed\",\n  name: \"ValidationError\",\n  message: 'Validation failed: charges.hourlyRate: Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\", charges: Validation failed: hourlyRate: Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"'\n}; // const errorsObj = {\n//   errors: {\n//     customer: {\n//       errors: {\n//         name: {\n//           name: \"ValidatorError\",\n//           message: \"name must have more than 4 characters\",\n//           properties: {\n//             message: \"name must have more than 4 characters\",\n//             type: \"user defined\",\n//             path: \"name\",\n//             value: \"Al\",\n//           },\n//           kind: \"user defined\",\n//           path: \"name\",\n//           value: \"Al\",\n//         },\n//       },\n//       _message: \"Validation failed\",\n//       name: \"ValidationError\",\n//       message: \"Validation failed: name: name must have more than 4 characters\",\n//     },\n//     operatives: {\n//       errors: {\n//         value: {\n//           name: \"ValidatorError\",\n//           message: \"name must have more than 4 characters\",\n//           properties: {\n//             message: \"name must have more than 4 characters\",\n//             type: \"user defined\",\n//             path: \"value\",\n//             value: \"dave\",\n//           },\n//           kind: \"user defined\",\n//           path: \"value\",\n//           value: \"dave\",\n//         },\n//       },\n//       _message: \"Validation failed\",\n//       name: \"ValidationError\",\n//       message:\n//         \"Validation failed: value: name must have more than 4 characters\",\n//     },\n//   },\n//   _message: \"Validation failed\",\n//   name: \"ValidationError\",\n//   message:\n//     \"Validation failed: customer.name: name must have more than 4 characters, customer: Validation failed: name: name must have more than 4 characters, operatives: Validation failed: value: name must have more than 4 characters\",\n// };\n\nconst errorsObj = {\n  errors: {\n    \"customer.name\": {\n      name: \"ValidatorError\",\n      message: \"name must have more than 4 characters\",\n      properties: {\n        message: \"name must have more than 4 characters\",\n        type: \"user defined\",\n        path: \"name\",\n        value: \"Ald\"\n      },\n      kind: \"user defined\",\n      path: \"name\",\n      value: \"Ald\"\n    },\n    customer: {\n      errors: {\n        name: {\n          name: \"ValidatorError\",\n          message: \"name must have more than 4 characters\",\n          properties: {\n            message: \"name must have more than 4 characters\",\n            type: \"user defined\",\n            path: \"name\",\n            value: \"Ald\"\n          },\n          kind: \"user defined\",\n          path: \"name\",\n          value: \"Ald\"\n        }\n      },\n      _message: \"Validation failed\",\n      name: \"ValidationError\",\n      message: \"Validation failed: name: name must have more than 4 characters\"\n    }\n  },\n  _message: \"Validation failed\",\n  name: \"ValidationError\",\n  message: \"Validation failed: customer.name: name must have more than 4 characters, customer: Validation failed: name: name must have more than 4 characters\"\n};\nlet res = processMongooseError(errorsObj);\nconsole.log(res);","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/utilities/processMongooseError.js"],"names":["cloneDeep","require","pipe","partialRight","curry","flip","removeDotPaths","obj","Object","keys","reduce","a","b","includes","isValidatiorError","hasOwnProperty","handleValidatiorError","message","isCastError","handleCastError","path","Kind","processMongooseError","errorsObj","pretty","JSON","stringify","console","log","inner","result","builder","withoutDuplicates","key","value","entries","module","exports","CastError","errors","stringValue","valueType","kind","reason","name","actual","expected","operator","generatedMessage","charges","hourlyRate","_message","properties","type","customer","res"],"mappings":"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","sourcesContent":["const { cloneDeep } = require(\"lodash\");\nconst { pipe, partialRight, curry, flip } = require(\"ramda\");\n\nfunction removeDotPaths(obj) {\n  return Object.keys(obj).reduce((a, b) => {\n    if (b.includes(\".\")) {\n      return a;\n    } else {\n      return { ...a, [b]: cloneDeep(obj[b]) };\n    }\n  }, {});\n}\n\nfunction isValidatiorError(obj) {\n  if (!typeof obj === \"object\") return false;\n\n  if (obj.hasOwnProperty(\"name\") && obj[\"name\"] === \"ValdidatiorError\") {\n    return true;\n  }\n  return false;\n}\n\nfunction handleValidatiorError(obj) {\n  return obj.message;\n}\n\nfunction isCastError(obj) {\n  if (!typeof obj === \"object\") return false;\n\n  if (obj.hasOwnProperty(\"name\") && obj[\"name\"] === \"CastError\") {\n    return true;\n  }\n  return false;\n}\n\nfunction handleCastError(obj) {\n  return `${obj.path} should be a ${obj.Kind}`;\n}\n\n//TO UNDERSTAND LOOK AT THIS FIRST THE FURHTER CHANGES ARE JUST TO MAKE IMMUTABLE AND FUNCTIONAL - this is a recursive function\n// i realise this is pretty confusing but so are mongoose error objects\n//\n// function process(errorsObj, result) {\n//   if (errorsObj.hasOwnProperty(\"errors\"))\n//     return process(errorsObj[\"errors\"], result);\n\n//   if (errorsObj.hasOwnProperty(\"properties\"))\n//     return errorsObj[\"properties\"][\"message\"];\n\n//   let builder = {};\n//   for (const [key, value] of Object.entries(errorsObj)) {\n//     builder[key] = process(value, {});\n//   }\n//   return builder;\n// }\n\n//we wrap the function purely to clone the errors obj passed to it,\n//because passing oject by reference can cause bugs, this could happen if we modified the object,\n//we dont modify it but i have cloned it anyway so that the object passed is forever protected from modification by this function.\n\nfunction processMongooseError(errorsObj) {\n  if (!errorsObj) return null;\n  const pretty = JSON.stringify(errorsObj || {}, null, 2);\n  console.log(pretty);\n  function inner(errorsObj, result) {\n    if (errorsObj.hasOwnProperty(\"errors\")) return inner(errorsObj[\"errors\"]);\n\n    if (isCastError(errorsObj)) return handleCastError(errorsObj);\n    if (isValidatiorError(errorsObj)) return handleValidatiorError(errorsObj);\n\n    let builder = {};\n    const withoutDuplicates = removeDotPaths(errorsObj); //todo proccess the object outside of function to remove all dot paths first\n    for (const [key, value] of Object.entries(withoutDuplicates)) {\n      builder[key] = inner(value);\n    }\n\n    return builder;\n  }\n  return inner(cloneDeep(errorsObj));\n}\n\nmodule.exports = processMongooseError;\n\nconst CastError = {\n  errors: {\n    \"charges.hourlyRate\": {\n      stringValue: '\"b\"',\n      valueType: \"string\",\n      kind: \"Number\",\n      value: \"b\",\n      path: \"hourlyRate\",\n      reason: {\n        name: \"AssertionError\",\n        actual: false,\n        expected: true,\n        operator: \"==\",\n        message: \"false == true\",\n        generatedMessage: true,\n      },\n      name: \"CastError\",\n      message:\n        'Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"',\n    },\n    charges: {\n      errors: {\n        hourlyRate: {\n          stringValue: '\"b\"',\n          valueType: \"string\",\n          kind: \"Number\",\n          value: \"b\",\n          path: \"hourlyRate\",\n          reason: {\n            name: \"AssertionError\",\n            actual: false,\n            expected: true,\n            operator: \"==\",\n            message: \"false == true\",\n            generatedMessage: true,\n          },\n          name: \"CastError\",\n          message:\n            'Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"',\n        },\n      },\n      _message: \"Validation failed\",\n      name: \"ValidationError\",\n      message:\n        'Validation failed: hourlyRate: Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"',\n    },\n  },\n  _message: \"Validation failed\",\n  name: \"ValidationError\",\n  message:\n    'Validation failed: charges.hourlyRate: Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\", charges: Validation failed: hourlyRate: Cast to Number failed for value \"b\" (type string) at path \"hourlyRate\"',\n};\n\n// const errorsObj = {\n//   errors: {\n//     customer: {\n//       errors: {\n//         name: {\n//           name: \"ValidatorError\",\n//           message: \"name must have more than 4 characters\",\n//           properties: {\n//             message: \"name must have more than 4 characters\",\n//             type: \"user defined\",\n//             path: \"name\",\n//             value: \"Al\",\n//           },\n//           kind: \"user defined\",\n//           path: \"name\",\n//           value: \"Al\",\n//         },\n//       },\n//       _message: \"Validation failed\",\n//       name: \"ValidationError\",\n//       message: \"Validation failed: name: name must have more than 4 characters\",\n//     },\n//     operatives: {\n//       errors: {\n//         value: {\n//           name: \"ValidatorError\",\n//           message: \"name must have more than 4 characters\",\n//           properties: {\n//             message: \"name must have more than 4 characters\",\n//             type: \"user defined\",\n//             path: \"value\",\n//             value: \"dave\",\n//           },\n//           kind: \"user defined\",\n//           path: \"value\",\n//           value: \"dave\",\n//         },\n//       },\n//       _message: \"Validation failed\",\n//       name: \"ValidationError\",\n//       message:\n//         \"Validation failed: value: name must have more than 4 characters\",\n//     },\n//   },\n//   _message: \"Validation failed\",\n//   name: \"ValidationError\",\n//   message:\n//     \"Validation failed: customer.name: name must have more than 4 characters, customer: Validation failed: name: name must have more than 4 characters, operatives: Validation failed: value: name must have more than 4 characters\",\n// };\n\nconst errorsObj = {\n  errors: {\n    \"customer.name\": {\n      name: \"ValidatorError\",\n      message: \"name must have more than 4 characters\",\n      properties: {\n        message: \"name must have more than 4 characters\",\n        type: \"user defined\",\n        path: \"name\",\n        value: \"Ald\",\n      },\n      kind: \"user defined\",\n      path: \"name\",\n      value: \"Ald\",\n    },\n    customer: {\n      errors: {\n        name: {\n          name: \"ValidatorError\",\n          message: \"name must have more than 4 characters\",\n          properties: {\n            message: \"name must have more than 4 characters\",\n            type: \"user defined\",\n            path: \"name\",\n            value: \"Ald\",\n          },\n          kind: \"user defined\",\n          path: \"name\",\n          value: \"Ald\",\n        },\n      },\n      _message: \"Validation failed\",\n      name: \"ValidationError\",\n      message: \"Validation failed: name: name must have more than 4 characters\",\n    },\n  },\n  _message: \"Validation failed\",\n  name: \"ValidationError\",\n  message:\n    \"Validation failed: customer.name: name must have more than 4 characters, customer: Validation failed: name: name must have more than 4 characters\",\n};\nlet res = processMongooseError(errorsObj);\n\nconsole.log(res);\n"]},"metadata":{},"sourceType":"module"}