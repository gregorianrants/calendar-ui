{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/features/auth/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  children,\n  ...rest\n}) {\n  _s();\n\n  let auth = useSelector(state => state.auth.authed);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => auth.user ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateRoute, \"SvwR9yfdOSlAizXx+1ujAxpoAFQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/features/auth/PrivateRoute.js"],"names":["useSelector","BrowserRouter","Router","Switch","Route","Link","Redirect","PrivateRoute","children","rest","auth","state","authed","location","user","pathname","from"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SACQC,aAAa,IAAIC,MADzB,EAEQC,MAFR,EAGQC,KAHR,EAIQC,IAJR,EAKQC,QALR,QAMa,kBANb;;AAQA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAAA;;AAC1D,MAAIC,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWE,MAAvB,CAAtB;AACA,sBACE,QAAC,KAAD,OACMH,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEI,MAAAA;AAAF,KAAD,KACNH,IAAI,CAACI,IAAL,GACEN,QADF,gBAGE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFO,QAAAA,QAAQ,EAAE,QADR;AAEFJ,QAAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAEH;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAnBuBN,Y;UACXP,W;;;KADWO,Y","sourcesContent":["import { useSelector } from \"react-redux\";\nimport {\n        BrowserRouter as Router,\n        Switch,\n        Route,\n        Link,\n        Redirect,\n      } from \"react-router-dom\";\n\nexport default function PrivateRoute({ children, ...rest }) {\n  let auth = useSelector((state) => state.auth.authed);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}