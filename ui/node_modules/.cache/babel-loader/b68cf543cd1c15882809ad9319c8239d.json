{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { Grid, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography } from \"@material-ui/core\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport cuid from 'cuid';\nimport produce from 'immer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  inline: {\n    display: 'flex'\n  }\n}));\nexport function ListBuilder({\n  name,\n  value,\n  onChange,\n  label,\n  errors\n}) {\n  _s();\n\n  //TODO should maybe be thinking about a shared constructor for this\n  //we are making an object like this on api as well\n  function wrap(value) {\n    return {\n      _id: cuid(),\n      value\n    };\n  }\n\n  const addAddress = (value, address) => {\n    const updatedValue = produce(value, draft => {\n      console.log(draft);\n      draft.push(wrap(address));\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name\n      }\n    };\n    onChange(e);\n  };\n\n  const removeAddress = (value, id) => {\n    const updatedValue = produce(value, draft => {\n      return draft.filter(el => el._id !== id);\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name\n      }\n    };\n    onChange(e);\n  };\n\n  const [input, setInput] = React.useState('');\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      children: value.map((a, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(HouseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          className: classes.inline,\n          primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [a.value, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: [\" - address\", i + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true),\n          secondary: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            color: \"primary\",\n            onClick: e => {\n              e.preventDefault();\n              removeAddress(value, a._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, a._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: label,\n        value: input,\n        fullWidth: true,\n        onChange: e => {\n          setInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          addAddress(value, input);\n          setInput('');\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListBuilder, \"5OBOl2Aa6Iqh4YOk7Yfratc3Wzg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBuilder\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js"],"names":["React","List","ListItem","Grid","ListItemAvatar","ListItemSecondaryAction","ListItemText","TextField","Typography","HouseIcon","CloseIcon","createStyles","makeStyles","cuid","produce","useStyles","inline","display","ListBuilder","name","value","onChange","label","errors","wrap","_id","addAddress","address","updatedValue","draft","console","log","push","e","target","removeAddress","id","filter","el","input","setInput","useState","classes","map","a","i","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react'\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n    Grid,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText, TextField,\n    Typography\n} from \"@material-ui/core\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\n\nimport cuid from 'cuid'\nimport produce from 'immer'\n\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        inline: {\n            display: 'flex',\n        },\n    }),\n);\n\n\nexport function ListBuilder({name, value, onChange,label,errors}) {\n    //TODO should maybe be thinking about a shared constructor for this\n    //we are making an object like this on api as well\n    function wrap(value) {\n        return {\n            _id: cuid(),\n            value,\n        }\n    }\n\n    const addAddress = (value, address) => {\n        const updatedValue = produce(value, draft => {\n            console.log(draft)\n            draft.push(wrap(address))\n        })\n        const e = {\n            target: {\n                value: updatedValue,\n                name: name\n            }\n        }\n        onChange(e)\n    }\n\n    const removeAddress = (value, id) => {\n        const updatedValue = produce(value, draft => {\n            return draft.filter(el => el._id !== id)\n        })\n        const e = {\n            target: {\n                value: updatedValue,\n                name: name\n            }\n        }\n        onChange(e)\n    }\n\n    const [input, setInput] = React.useState('')\n\n    const classes = useStyles();\n\n\n    return (<>\n            <List dense>\n                {value.map((a, i) => (\n                    <ListItem key={a._id}>\n                        <ListItemAvatar>\n                            <HouseIcon></HouseIcon>\n                        </ListItemAvatar>\n                        <ListItemText className={classes.inline}\n                                      primary={\n                                          <>\n                                              {a.value}\n                                              <Typography variant='caption'> -\n                                                  address{i + 1}</Typography>\n                                          </>\n                                      }\n                                      secondary\n                                      \n                        />\n                        <ListItemSecondaryAction>\n                            <CloseIcon color='primary' onClick={(e) => {\n                                e.preventDefault()\n                                removeAddress(value, a._id)\n                            }}/>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))}\n            </List>\n            <Grid item>\n                <TextField label={label} value={input} fullWidth\n                           onChange={(e) => {\n                               setInput(e.target.value)\n                           }}\n                />\n                <button\n                    onClick={(e) => {\n                        e.preventDefault()\n                        addAddress(value, input)\n                        setInput('')\n                    }}\n\n                >+\n                </button>\n            </Grid>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}