{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { weekContaining, setTimeDayStart, setTimeDayEnd } from \"../../utilities/dateUtilities\";\nimport { addDays } from \"date-fns\";\nimport { fetchDays } from \"../../Model/Jobs\";\nexport function getWeek(date, increment = 0) {\n  const currentDate = addDays(date, increment * 7);\n  const days = weekContaining(currentDate);\n  const firstDay = setTimeDayStart(new Date(days[0])); //TODO\n\n  const lastDay = setTimeDayEnd(new Date(days[days.length - 1])); //TODO\n\n  return {\n    currentDate,\n    days,\n    firstDay,\n    lastDay\n  };\n}\nconst initialState = { ...getWeek(new Date()),\n  events: []\n};\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      state;\n    }\n\n  }\n});\n\nconst fetchData = (state, dispatch) => {\n  fetchDays(state.firstDay, state.lastDay).then(data => {\n    setEvents([...data]); //TODO have a look at what we are doing here what if there is no data\n  }).catch(console.error);\n};\n\nexport default calendarSlice.reducer;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Calendar/calendarSlice.js"],"names":["createSlice","weekContaining","setTimeDayStart","setTimeDayEnd","addDays","fetchDays","getWeek","date","increment","currentDate","days","firstDay","Date","lastDay","length","initialState","events","calendarSlice","name","reducers","dataLoaded","state","action","fetchData","dispatch","then","data","setEvents","catch","console","error","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,cAAR,EAAuBC,eAAvB,EAAuCC,aAAvC,QAA2D,+BAA3D;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,SAAS,GAAC,CAAjC,EAAmC;AAClC,QAAMC,WAAW,GAAGL,OAAO,CAACG,IAAD,EAAMC,SAAS,GAAC,CAAhB,CAA3B;AACA,QAAME,IAAI,GAAGT,cAAc,CAACQ,WAAD,CAA3B;AACA,QAAME,QAAQ,GAAGT,eAAe,CAAC,IAAIU,IAAJ,CAASF,IAAI,CAAC,CAAD,CAAb,CAAD,CAAhC,CAHkC,CAGiB;;AACnD,QAAMG,OAAO,GAAGV,aAAa,CAAC,IAAIS,IAAJ,CAASF,IAAI,CAACA,IAAI,CAACI,MAAL,GAAY,CAAb,CAAb,CAAD,CAA7B,CAJkC,CAI0B;;AAC5D,SAAO;AACHL,IAAAA,WADG;AACSC,IAAAA,IADT;AACcC,IAAAA,QADd;AACuBE,IAAAA;AADvB,GAAP;AAGH;AAEL,MAAME,YAAY,GAAG,EACnB,GAAGT,OAAO,CAAC,IAAIM,IAAJ,EAAD,CADS;AAEnBI,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,MAAMC,aAAa,GAAGjB,WAAW,CAAC;AAChCkB,EAAAA,IAAI,EAAE,UAD0B;AAEhCH,EAAAA,YAFgC;AAGhCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK;AACN;;AAHO;AAHsB,CAAD,CAAjC;;AAUA,MAAME,SAAS,GAAG,CAACF,KAAD,EAAOG,QAAP,KAAkB;AAC5BnB,EAAAA,SAAS,CAACgB,KAAK,CAACV,QAAP,EAAiBU,KAAK,CAACR,OAAvB,CAAT,CACCY,IADD,CACOC,IAAD,IAAU;AACdC,IAAAA,SAAS,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAT,CADc,CACQ;AACvB,GAHD,EAICE,KAJD,CAIOC,OAAO,CAACC,KAJf;AAKP,CAND;;AAQA,eAAeb,aAAa,CAACc,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {weekContaining,setTimeDayStart,setTimeDayEnd} from \"../../utilities/dateUtilities\";\nimport {addDays} from \"date-fns\";\nimport { fetchDays } from \"../../Model/Jobs\";\n\nexport function getWeek(date, increment=0){\n        const currentDate = addDays(date,increment*7)\n        const days = weekContaining(currentDate)\n        const firstDay = setTimeDayStart(new Date(days[0]))//TODO\n        const lastDay = setTimeDayEnd(new Date(days[days.length-1]))//TODO\n        return {\n            currentDate,days,firstDay,lastDay\n        }\n    }\n\nconst initialState = {\n  ...getWeek(new Date()),\n  events: [],\n};\n\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      state\n    },\n  },\n});\n\nconst fetchData = (state,dispatch)=>{\n        fetchDays(state.firstDay, state.lastDay)\n        .then((data) => {\n          setEvents([...data]); //TODO have a look at what we are doing here what if there is no data\n        })\n        .catch(console.error);\n}\n\nexport default calendarSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}