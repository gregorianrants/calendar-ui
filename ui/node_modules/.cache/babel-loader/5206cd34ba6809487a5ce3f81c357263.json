{"ast":null,"code":"import _regeneratorRuntime from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export function fetchDays(_x,_x2){return _fetchDays.apply(this,arguments);}function _fetchDays(){_fetchDays=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(from,to){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",fetch(\"http://localhost:8000/api/v1/jobs?from=\".concat(from,\"&to=\").concat(to)).then(function(res){return res.json();}).then(function(res){return res.data;}).then(function(data){return data.map(function(job){return _objectSpread(_objectSpread({},job),{},{start:new Date(job.start),end:new Date(job.end)//TODO create a function that does this\n});});}).catch(function(err){return console.error(err);}));case 1:case\"end\":return _context.stop();}}},_callee);}));return _fetchDays.apply(this,arguments);}export function createJob(job){return fetch(\"http://localhost:8000/api/v1/jobs\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(job)}).then(function(res){return res.json();}).then(function(res){return res.data;}).then(function(data){console.log(data);return _objectSpread(_objectSpread({},data),{},{start:new Date(data.start),end:new Date(data.end)//TODO create a function that does this\n});}).catch(function(err){return console.error(err);});}function processData(data){return _objectSpread(_objectSpread({},data),{},{start:new Date(data.start),end:new Date(data.end)});}function processResponse(res){if(res.status==='success'){return _objectSpread(_objectSpread({},res),{},{data:processData(res.data)});}else{return res;}}export function editJob(_ref){var _id=_ref._id,data=_ref.data;return fetch(\"http://localhost:8000/api/v1/jobs/\".concat(_id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(res){return res.json();}).then(function(res){return processResponse(res);}).catch(function(err){return console.error(err);});}","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/Model/Jobs.js"],"names":["fetchDays","from","to","fetch","then","res","json","data","map","job","start","Date","end","catch","err","console","error","createJob","method","headers","body","JSON","stringify","log","processData","processResponse","status","editJob","_id"],"mappings":"kbAAA,eAAsBA,CAAAA,SAAtB,kD,yFAAO,iBAAyBC,IAAzB,CAA+BC,EAA/B,kJACEC,KAAK,kDAA2CF,IAA3C,gBAAsDC,EAAtD,EAAL,CACJE,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADD,EAEJF,IAFI,CAEC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACE,IAAb,EAFD,EAGJH,IAHI,CAGC,SAACG,IAAD,QACJA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAACC,GAAD,wCACJA,GADI,MAEPC,KAAK,CAAE,GAAIC,CAAAA,IAAJ,CAASF,GAAG,CAACC,KAAb,CAFA,CAGPE,GAAG,CAAE,GAAID,CAAAA,IAAJ,CAASF,GAAG,CAACG,GAAb,CAAmB;AAHjB,IAAT,CADI,EAHD,EAUJC,KAVI,CAUE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAT,EAVF,CADF,wD,4CAcP,MAAO,SAASG,CAAAA,SAAT,CAAmBR,GAAnB,CAAwB,CAC7B,MAAON,CAAAA,KAAK,qCAAsC,CAChDe,MAAM,CAAE,MADwC,CAEhDC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFuC,CAKhDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeb,GAAf,CAL0C,CAAtC,CAAL,CAOJL,IAPI,CAOC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAPD,EAQJF,IARI,CAQC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACE,IAAb,EARD,EASJH,IATI,CASC,SAACG,IAAD,CAAU,CACdQ,OAAO,CAACQ,GAAR,CAAYhB,IAAZ,EACA,sCACKA,IADL,MAEEG,KAAK,CAAE,GAAIC,CAAAA,IAAJ,CAASJ,IAAI,CAACG,KAAd,CAFT,CAGEE,GAAG,CAAE,GAAID,CAAAA,IAAJ,CAASJ,IAAI,CAACK,GAAd,CAAoB;AAH3B,GAKD,CAhBI,EAiBJC,KAjBI,CAiBE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAT,EAjBF,CAAP,CAkBD,CAED,QAASU,CAAAA,WAAT,CAAqBjB,IAArB,CAA0B,CACtB,sCACOA,IADP,MAEIG,KAAK,CAAE,GAAIC,CAAAA,IAAJ,CAASJ,IAAI,CAACG,KAAd,CAFX,CAGIE,GAAG,CAAE,GAAID,CAAAA,IAAJ,CAASJ,IAAI,CAACK,GAAd,CAHT,GAKH,CAED,QAASa,CAAAA,eAAT,CAAyBpB,GAAzB,CAA6B,CACzB,GAAIA,GAAG,CAACqB,MAAJ,GAAe,SAAnB,CAA6B,CACzB,sCACOrB,GADP,MAEIE,IAAI,CAAEiB,WAAW,CAACnB,GAAG,CAACE,IAAL,CAFrB,GAIH,CALD,IAMI,CACA,MAAOF,CAAAA,GAAP,CACH,CACJ,CAED,MAAO,SAASsB,CAAAA,OAAT,MAAgC,IAAbC,CAAAA,GAAa,MAAbA,GAAa,CAARrB,IAAQ,MAARA,IAAQ,CAGrC,MAAOJ,CAAAA,KAAK,6CAAsCyB,GAAtC,EAA6C,CACvDV,MAAM,CAAE,KAD+C,CAEvDC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF8C,CAKvDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAef,IAAf,CALiD,CAA7C,CAAL,CAOJH,IAPI,CAOC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAPD,EAQJF,IARI,CAQC,SAACC,GAAD,QAASoB,CAAAA,eAAe,CAACpB,GAAD,CAAxB,EARD,EASJQ,KATI,CASE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAT,EATF,CAAP,CAUD","sourcesContent":["export async function fetchDays(from, to) {\n  return fetch(`http://localhost:8000/api/v1/jobs?from=${from}&to=${to}`)\n    .then((res) => res.json())\n    .then((res) => res.data)\n    .then((data) =>\n      data.map((job) => ({\n        ...job,\n        start: new Date(job.start),\n        end: new Date(job.end), //TODO create a function that does this\n      }))\n    )\n    .catch((err) => console.error(err));\n}\n\nexport function createJob(job) {\n  return fetch(`http://localhost:8000/api/v1/jobs`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(job),\n  })\n    .then((res) => res.json())\n    .then((res) => res.data)\n    .then((data) => {\n      console.log(data);\n      return {\n        ...data,\n        start: new Date(data.start),\n        end: new Date(data.end), //TODO create a function that does this\n      };\n    })\n    .catch((err) => console.error(err));\n}\n\nfunction processData(data){\n    return{\n        ...data,\n        start: new Date(data.start),\n        end: new Date(data.end),\n    }\n}\n\nfunction processResponse(res){\n    if (res.status === 'success'){\n        return {\n            ...res,\n            data: processData(res.data)\n        }\n    }\n    else{\n        return res\n    }\n}\n\nexport function editJob({ _id, data }) {\n\n\n  return fetch(`http://localhost:8000/api/v1/jobs/${_id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((res) => res.json())\n    .then((res) => processResponse(res))\n    .catch((err) => console.error(err));\n}\n"]},"metadata":{},"sourceType":"module"}