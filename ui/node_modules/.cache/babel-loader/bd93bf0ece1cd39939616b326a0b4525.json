{"ast":null,"code":"export async function fetchDays(from, to) {\n  return fetch(`http://localhost:8000/api/v1/jobs?from=${from}&to=${to}`).then(res => res.json()).then(res => res.data).then(data => data.map(job => ({ ...job,\n    start: new Date(job.start),\n    end: new Date(job.end) //TODO create a function that does this\n\n  }))).catch(err => console.error(err));\n}\nexport function createJob(job) {\n  return fetch(`http://localhost:8000/api/v1/jobs`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(job)\n  }).then(res => res.json()).then(res => res.data).then(data => {\n    console.log(data);\n    return { ...data,\n      start: new Date(data.start),\n      end: new Date(data.end) //TODO create a function that does this\n\n    };\n  }).catch(err => console.error(err));\n}\n\nfunction processData(data) {\n  return { ...data,\n    start: new Date(data.start),\n    end: new Date(data.end)\n  };\n}\n\nfunction processResponse(res) {\n  if (res.status === 'success') {\n    return { ...res,\n      data: processData(res.data)\n    };\n  } else {\n    return res;\n  }\n}\n\nexport function editJob({\n  _id,\n  data\n}) {\n  return fetch(`http://localhost:8000/api/v1/jobs/${_id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(res => res.json()).then(res => processResponse(res)).catch(err => console.error(err));\n}\nexport default {\n  editJob\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/Model/Jobs.js"],"names":["fetchDays","from","to","fetch","then","res","json","data","map","job","start","Date","end","catch","err","console","error","createJob","method","headers","body","JSON","stringify","log","processData","processResponse","status","editJob","_id"],"mappings":"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","sourcesContent":["export async function fetchDays(from, to) {\n  return fetch(`http://localhost:8000/api/v1/jobs?from=${from}&to=${to}`)\n    .then((res) => res.json())\n    .then((res) => res.data)\n    .then((data) =>\n      data.map((job) => ({\n        ...job,\n        start: new Date(job.start),\n        end: new Date(job.end), //TODO create a function that does this\n      }))\n    )\n    .catch((err) => console.error(err));\n}\n\nexport function createJob(job) {\n  return fetch(`http://localhost:8000/api/v1/jobs`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(job),\n  })\n    .then((res) => res.json())\n    .then((res) => res.data)\n    .then((data) => {\n      console.log(data);\n      return {\n        ...data,\n        start: new Date(data.start),\n        end: new Date(data.end), //TODO create a function that does this\n      };\n    })\n    .catch((err) => console.error(err));\n}\n\nfunction processData(data){\n    return{\n        ...data,\n        start: new Date(data.start),\n        end: new Date(data.end),\n    }\n}\n\nfunction processResponse(res){\n    if (res.status === 'success'){\n        return {\n            ...res,\n            data: processData(res.data)\n        }\n    }\n    else{\n        return res\n    }\n}\n\nexport function editJob({ _id, data }) {\n\n\n  return fetch(`http://localhost:8000/api/v1/jobs/${_id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((res) => res.json())\n    .then((res) => processResponse(res))\n    .catch((err) => console.error(err));\n}\n\n\nexport default {\n  editJob\n}"]},"metadata":{},"sourceType":"module"}