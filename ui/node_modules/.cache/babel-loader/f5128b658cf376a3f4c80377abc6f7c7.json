{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport mongoose from \"mongoose\";\nimport styled from \"styled-components\";\nimport { Formik, Field } from \"formik\";\nimport { cloneDeep } from \"lodash\";\nimport { ListBuilder } from \"./AddressInput\";\nimport { TextField, Grid, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\n\nimport { editJobThunk } from \"../Calendar/calendarSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory, useLocation } from \"react-router\";\nimport Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\nimport { parseISO, setHours } from \"date-fns\";\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Typography } from \"@material-ui/core\";\nimport { jobSchema } from \"api/model/job\"; //TODO change name of buildSchema\n\nimport { processMongooseError } from \"./../../utilities/processMongooseError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  const {\n    search\n  } = useLocation();\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\n_s(useQuery, \"I+9F+Vhfmc3otMLqUKFlYflxhf8=\", false, function () {\n  return [useLocation];\n});\n\nfunction dateTimeFromInput(date, time) {\n  const hours = time.getHours();\n  const minutes = time.getMinutes();\n  let res = new Date(date);\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  return res;\n}\n\nconst FlexRow = styled.div`\n  display: flex;\n`;\n_c = FlexRow;\nconst useStyles = makeStyles({\n  flexItem: {\n    flex: \"1 1 0\",\n    \"&:not(:last-child)\": {\n      marginRight: \"10px\"\n    }\n  },\n  inputRow: {\n    marginBottom: \"10px\"\n  },\n  textField: {\n    \"& textarea\": {\n      whiteSpace: \"pre-line\"\n    }\n  }\n});\nexport default function JobForm({\n  close,\n  toggleModal\n}) {\n  _s2();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const query = useQuery();\n  const {\n    id\n  } = useParams();\n  let job = useSelector(state => state.calendar.events.find(event => event._id == id));\n\n  function isEditForm() {\n    if (id) {\n      return true;\n    } else {}\n  }\n\n  function getInitialValuesFromQuery() {\n    const date = parseISO(query.get(\"iso-date\"));\n    const start = setHours(date, query.get(\"hours\") * 1);\n    const end = setHours(date, query.get(\"hours\") + 1);\n    return {\n      start,\n      end\n    };\n  }\n\n  const initialValues = isEditForm ? job : getInitialValuesFromQuery();\n\n  const handleSubmit = data => {\n    dispatch(editJobThunk(data));\n    history.goBack();\n  };\n\n  const validator = async values => {\n    const doc = new mongoose.Document(values, jobSchema);\n    const validationResult = await doc.validateSync();\n    console.log(validationResult);\n    const processed = processMongooseError(validationResult);\n    console.log(processed);\n    return processed;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: isEditForm ? \"Edit Job\" : \"Create Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: cloneDeep(initialValues || {}),\n          onSubmit: handleSubmit,\n          validate: validator,\n          children: props => {\n            var _props$errors, _props$errors$custome, _props$errors2, _props$errors2$custom, _props$errors3, _props$errors3$custom, _props$errors4, _props$errors4$custom, _props$errors5, _props$errors5$custom, _props$errors6, _props$errors6$custom, _props$errors7, _props$errors7$charge, _props$errors8, _props$errors8$charge, _props$errors9, _props$errors9$charge, _props$errors10, _props$errors10$charg, _props$errors11, _props$errors11$charg, _props$errors12, _props$errors12$charg, _props$errors13, _props$errors14, _props$errors15, _props$errors16;\n\n            return (\n              /*#__PURE__*/\n              //<Typography variant=\"h4\">Create Job</Typography>\n              _jsxDEV(\"form\", {\n                onSubmit: props.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  as: TextField,\n                  className: classes.inputRow,\n                  name: \"customer.name\",\n                  label: \"name\",\n                  error: (_props$errors = props.errors) === null || _props$errors === void 0 ? void 0 : (_props$errors$custome = _props$errors.customer) === null || _props$errors$custome === void 0 ? void 0 : _props$errors$custome.name,\n                  helperText: (_props$errors2 = props.errors) === null || _props$errors2 === void 0 ? void 0 : (_props$errors2$custom = _props$errors2.customer) === null || _props$errors2$custom === void 0 ? void 0 : _props$errors2$custom.name,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: TextField,\n                  className: classes.inputRow,\n                  error: (_props$errors3 = props.errors) === null || _props$errors3 === void 0 ? void 0 : (_props$errors3$custom = _props$errors3.customer) === null || _props$errors3$custom === void 0 ? void 0 : _props$errors3$custom.mobile,\n                  helperText: (_props$errors4 = props.errors) === null || _props$errors4 === void 0 ? void 0 : (_props$errors4$custom = _props$errors4.customer) === null || _props$errors4$custom === void 0 ? void 0 : _props$errors4$custom.mobile,\n                  name: \"customer.mobile\",\n                  label: \"mobile\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: TextField,\n                  className: classes.inputRow,\n                  name: \"customer.email\",\n                  label: \"email\",\n                  error: (_props$errors5 = props.errors) === null || _props$errors5 === void 0 ? void 0 : (_props$errors5$custom = _props$errors5.customer) === null || _props$errors5$custom === void 0 ? void 0 : _props$errors5$custom.email,\n                  helperText: (_props$errors6 = props.errors) === null || _props$errors6 === void 0 ? void 0 : (_props$errors6$custom = _props$errors6.customer) === null || _props$errors6$custom === void 0 ? void 0 : _props$errors6$custom.email,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FlexRow, {\n                  className: classes.inputRow,\n                  children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                    utils: DateFnsUtils,\n                    children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                      className: classes.flexItem,\n                      value: new Date(props.values.start),\n                      onChange: date => {\n                        props.setFieldValue(\"start\", date, true);\n                      },\n                      label: \"start time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                    utils: DateFnsUtils,\n                    children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                      className: classes.flexItem,\n                      value: props.values.end,\n                      onChange: date => {\n                        props.setFieldValue(\"end\", date, true);\n                      },\n                      label: \"end time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                    utils: DateFnsUtils,\n                    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                      className: classes.flexItem,\n                      value: props.values.start,\n                      onChange: date => {\n                        props.setFieldValue(\"start\", dateTimeFromInput(date, props.values.start), true);\n                        props.setFieldValue(\"end\", dateTimeFromInput(date, props.values.end), true);\n                        console.log(\"hello\");\n                      },\n                      label: \"date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FlexRow, {\n                  className: classes.inputRow,\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    className: classes.flexItem,\n                    as: TextField,\n                    name: \"charges.hourlyRate\",\n                    label: \"hourly rate\",\n                    error: (_props$errors7 = props.errors) === null || _props$errors7 === void 0 ? void 0 : (_props$errors7$charge = _props$errors7.charges) === null || _props$errors7$charge === void 0 ? void 0 : _props$errors7$charge.hourlyRate,\n                    helperText: (_props$errors8 = props.errors) === null || _props$errors8 === void 0 ? void 0 : (_props$errors8$charge = _props$errors8.charges) === null || _props$errors8$charge === void 0 ? void 0 : _props$errors8$charge.hourlyRate,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: classes.flexItem,\n                    as: TextField,\n                    name: \"charges.fuelCharge\",\n                    label: \"fuelCharge\",\n                    error: (_props$errors9 = props.errors) === null || _props$errors9 === void 0 ? void 0 : (_props$errors9$charge = _props$errors9.charges) === null || _props$errors9$charge === void 0 ? void 0 : _props$errors9$charge.fuelCharge,\n                    helperText: (_props$errors10 = props.errors) === null || _props$errors10 === void 0 ? void 0 : (_props$errors10$charg = _props$errors10.charges) === null || _props$errors10$charg === void 0 ? void 0 : _props$errors10$charg.fuelCharge,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: classes.flexItem,\n                    as: TextField,\n                    name: \"charges.travelTime\",\n                    label: \"travelTime\",\n                    error: (_props$errors11 = props.errors) === null || _props$errors11 === void 0 ? void 0 : (_props$errors11$charg = _props$errors11.charges) === null || _props$errors11$charg === void 0 ? void 0 : _props$errors11$charg.travelTime,\n                    helperText: (_props$errors12 = props.errors) === null || _props$errors12 === void 0 ? void 0 : (_props$errors12$charg = _props$errors12.charges) === null || _props$errors12$charg === void 0 ? void 0 : _props$errors12$charg.travelTime,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  as: TextField,\n                  className: classes.inputRow,\n                  name: \"items\",\n                  label: \"items\",\n                  error: (_props$errors13 = props.errors) === null || _props$errors13 === void 0 ? void 0 : _props$errors13.items,\n                  helperText: (_props$errors14 = props.errors) === null || _props$errors14 === void 0 ? void 0 : _props$errors14.items,\n                  fullWidth: true,\n                  multiline: true,\n                  rows: 5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ListBuilder, {\n                  value: props.values.addresses,\n                  onChange: props.handleChange,\n                  label: \"add address\",\n                  name: \"addresses\",\n                  itemName: \"address\",\n                  errors: (_props$errors15 = props.errors) === null || _props$errors15 === void 0 ? void 0 : _props$errors15.addresses\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ListBuilder, {\n                  value: props.values.operatives,\n                  onChange: props.handleChange,\n                  label: \"add operative\",\n                  name: \"operatives\",\n                  itemName: \"operative\",\n                  errors: (_props$errors16 = props.errors) === null || _props$errors16 === void 0 ? void 0 : _props$errors16.operatives\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  fullWidth: true,\n                  children: \"save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 15\n              }, this)\n            );\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(JobForm, \"a4Uk6gjyeuARFYz0Q7ppB0UN8Gs=\", false, function () {\n  return [useStyles, useDispatch, useHistory, useQuery, useParams, useSelector];\n});\n\n_c2 = JobForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FlexRow\");\n$RefreshReg$(_c2, \"JobForm\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js"],"names":["React","mongoose","styled","Formik","Field","cloneDeep","ListBuilder","TextField","Grid","Button","makeStyles","DateFnsUtils","editJobThunk","useDispatch","useSelector","useParams","useHistory","useLocation","Modal","Card","CardContent","CardHeader","IconButton","parseISO","setHours","DatePicker","TimePicker","MuiPickersUtilsProvider","Typography","jobSchema","processMongooseError","useQuery","search","useMemo","URLSearchParams","dateTimeFromInput","date","time","hours","getHours","minutes","getMinutes","res","Date","setMinutes","FlexRow","div","useStyles","flexItem","flex","marginRight","inputRow","marginBottom","textField","whiteSpace","JobForm","close","toggleModal","classes","dispatch","history","query","id","job","state","calendar","events","find","event","_id","isEditForm","getInitialValuesFromQuery","get","start","end","initialValues","handleSubmit","data","goBack","validator","values","doc","Document","validationResult","validateSync","console","log","processed","props","errors","customer","name","mobile","email","setFieldValue","charges","hourlyRate","fuelCharge","travelTime","items","addresses","handleChange","operatives"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport mongoose from \"mongoose\";\nimport styled from \"styled-components\";\nimport { Formik, Field } from \"formik\";\nimport { cloneDeep } from \"lodash\";\n\nimport { ListBuilder } from \"./AddressInput\";\n\nimport { TextField, Grid, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\n\nimport { editJobThunk } from \"../Calendar/calendarSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory, useLocation } from \"react-router\";\nimport Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\n\nimport { parseISO, setHours } from \"date-fns\";\n\nimport {\n  DatePicker,\n  TimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport { Typography } from \"@material-ui/core\";\n\nimport { jobSchema } from \"api/model/job\"; //TODO change name of buildSchema\nimport { processMongooseError } from \"./../../utilities/processMongooseError\";\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nfunction dateTimeFromInput(date, time) {\n  const hours = time.getHours();\n  const minutes = time.getMinutes();\n  let res = new Date(date);\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  return res;\n}\n\nconst FlexRow = styled.div`\n  display: flex;\n`;\n\nconst useStyles = makeStyles({\n  flexItem: {\n    flex: \"1 1 0\",\n    \"&:not(:last-child)\": {\n      marginRight: \"10px\",\n    },\n  },\n  inputRow: {\n    marginBottom: \"10px\",\n  },\n  textField: {\n    \"& textarea\": {\n      whiteSpace: \"pre-line\",\n    },\n  },\n});\n\nexport default function JobForm({ close, toggleModal }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const query = useQuery();\n\n  const { id } = useParams();\n\n  let job = useSelector((state) =>\n    state.calendar.events.find((event) => event._id == id)\n  );\n\n  function isEditForm() {\n   if(id){\n     return true\n   }\n   else{}\n  }\n\n  function getInitialValuesFromQuery() {\n    const date = parseISO(query.get(\"iso-date\"));\n    const start = setHours(date, query.get(\"hours\") * 1);\n    const end = setHours(date, query.get(\"hours\") + 1);\n    return {\n      start,\n      end,\n    };\n  }\n\n  const initialValues = isEditForm ? job : getInitialValuesFromQuery();\n\n  const handleSubmit = (data) => {\n    dispatch(editJobThunk(data));\n    history.goBack();\n  };\n\n  const validator = async (values) => {\n    const doc = new mongoose.Document(values, jobSchema);\n\n    const validationResult = await doc.validateSync();\n    console.log(validationResult);\n\n    const processed = processMongooseError(validationResult);\n    console.log(processed);\n\n    return processed;\n  };\n\n  return (\n    <Modal>\n      <Card>\n        <CardHeader title={isEditForm ? \"Edit Job\" : \"Create Job\"} />\n        <CardContent>\n          <Formik\n            initialValues={cloneDeep(initialValues || {})}\n            onSubmit={handleSubmit}\n            validate={validator}\n          >\n            {(props) => (\n              //<Typography variant=\"h4\">Create Job</Typography>\n              <form onSubmit={props.handleSubmit}>\n                <Field\n                  as={TextField}\n                  className={classes.inputRow}\n                  name=\"customer.name\"\n                  label=\"name\"\n                  error={props.errors?.customer?.name}\n                  helperText={props.errors?.customer?.name}\n                  fullWidth\n                />\n                <Field\n                  as={TextField}\n                  className={classes.inputRow}\n                  error={props.errors?.customer?.mobile}\n                  helperText={props.errors?.customer?.mobile}\n                  name=\"customer.mobile\"\n                  label=\"mobile\"\n                  fullWidth\n                />\n                <Field\n                  as={TextField}\n                  className={classes.inputRow}\n                  name=\"customer.email\"\n                  label=\"email\"\n                  error={props.errors?.customer?.email}\n                  helperText={props.errors?.customer?.email}\n                  fullWidth\n                />\n                <FlexRow className={classes.inputRow}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <TimePicker\n                      className={classes.flexItem}\n                      value={new Date(props.values.start)}\n                      onChange={(date) => {\n                        props.setFieldValue(\"start\", date, true);\n                      }}\n                      label=\"start time\"\n                    />\n                  </MuiPickersUtilsProvider>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <TimePicker\n                      className={classes.flexItem}\n                      value={props.values.end}\n                      onChange={(date) => {\n                        props.setFieldValue(\"end\", date, true);\n                      }}\n                      label=\"end time\"\n                    />\n                  </MuiPickersUtilsProvider>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DatePicker\n                      className={classes.flexItem}\n                      value={props.values.start}\n                      onChange={(date) => {\n                        props.setFieldValue(\n                          \"start\",\n                          dateTimeFromInput(date, props.values.start),\n                          true\n                        );\n                        props.setFieldValue(\n                          \"end\",\n                          dateTimeFromInput(date, props.values.end),\n                          true\n                        );\n                        console.log(\"hello\");\n                      }}\n                      label=\"date\"\n                    />\n                  </MuiPickersUtilsProvider>\n                </FlexRow>\n\n                <FlexRow className={classes.inputRow}>\n                  <Field\n                    className={classes.flexItem}\n                    as={TextField}\n                    name=\"charges.hourlyRate\"\n                    label=\"hourly rate\"\n                    error={props.errors?.charges?.hourlyRate}\n                    helperText={props.errors?.charges?.hourlyRate}\n                    fullWidth\n                  />\n                  <Field\n                    className={classes.flexItem}\n                    as={TextField}\n                    name=\"charges.fuelCharge\"\n                    label=\"fuelCharge\"\n                    error={props.errors?.charges?.fuelCharge}\n                    helperText={props.errors?.charges?.fuelCharge}\n                    fullWidth\n                  />\n                  <Field\n                    className={classes.flexItem}\n                    as={TextField}\n                    name=\"charges.travelTime\"\n                    label=\"travelTime\"\n                    error={props.errors?.charges?.travelTime}\n                    helperText={props.errors?.charges?.travelTime}\n                    fullWidth\n                  />\n                </FlexRow>\n\n                <Field\n                  as={TextField}\n                  className={classes.inputRow}\n                  name=\"items\"\n                  label=\"items\"\n                  error={props.errors?.items}\n                  helperText={props.errors?.items}\n                  fullWidth\n                  multiline\n                  rows={5}\n                />\n                <ListBuilder\n                  value={props.values.addresses}\n                  onChange={props.handleChange}\n                  label=\"add address\"\n                  name=\"addresses\"\n                  itemName=\"address\"\n                  errors={props.errors?.addresses}\n                />\n                <ListBuilder\n                  value={props.values.operatives}\n                  onChange={props.handleChange}\n                  label=\"add operative\"\n                  name=\"operatives\"\n                  itemName=\"operative\"\n                  errors={props.errors?.operatives}\n                />\n\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                >\n                  save\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}