{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst RegExpClone = require('regexp-clone');\n\nconst specialProperties = ['__proto__', 'constructor', 'prototype'];\n/**\n * Clones objects\n *\n * @param {Object} obj the object to clone\n * @param {Object} options\n * @return {Object} the cloned object\n * @api private\n */\n\nconst clone = exports.clone = function clone(obj, options) {\n  if (obj === undefined || obj === null) return obj;\n  if (Array.isArray(obj)) return exports.cloneArray(obj, options);\n\n  if (obj.constructor) {\n    if (/ObjectI[dD]$/.test(obj.constructor.name)) {\n      return 'function' == typeof obj.clone ? obj.clone() : new obj.constructor(obj.id);\n    }\n\n    if (obj.constructor.name === 'ReadPreference') {\n      return new obj.constructor(obj.mode, clone(obj.tags, options));\n    }\n\n    if ('Binary' == obj._bsontype && obj.buffer && obj.value) {\n      return 'function' == typeof obj.clone ? obj.clone() : new obj.constructor(obj.value(true), obj.sub_type);\n    }\n\n    if ('Date' === obj.constructor.name || 'Function' === obj.constructor.name) return new obj.constructor(+obj);\n    if ('RegExp' === obj.constructor.name) return RegExpClone(obj);\n    if ('Buffer' === obj.constructor.name) return exports.cloneBuffer(obj);\n  }\n\n  if (isObject(obj)) return exports.cloneObject(obj, options);\n  if (obj.valueOf) return obj.valueOf();\n};\n/*!\n * ignore\n */\n\n\nexports.cloneObject = function cloneObject(obj, options) {\n  const minimize = options && options.minimize;\n  const ret = {};\n  let hasKeys;\n  let val;\n  const keys = Object.keys(obj);\n  let k;\n\n  for (let i = 0; i < keys.length; ++i) {\n    k = keys[i]; // Not technically prototype pollution because this wouldn't merge properties\n    // onto `Object.prototype`, but avoid properties like __proto__ as a precaution.\n\n    if (specialProperties.indexOf(k) !== -1) {\n      continue;\n    }\n\n    val = clone(obj[k], options);\n\n    if (!minimize || 'undefined' !== typeof val) {\n      hasKeys || (hasKeys = true);\n      ret[k] = val;\n    }\n  }\n\n  return minimize ? hasKeys && ret : ret;\n};\n\nexports.cloneArray = function cloneArray(arr, options) {\n  const ret = [];\n\n  for (let i = 0, l = arr.length; i < l; i++) ret.push(clone(arr[i], options));\n\n  return ret;\n};\n/**\n * process.nextTick helper.\n *\n * Wraps the given `callback` in a try/catch. If an error is\n * caught it will be thrown on nextTick.\n *\n * node-mongodb-native had a habit of state corruption when\n * an error was immediately thrown from within a collection\n * method (find, update, etc) callback.\n *\n * @param {Function} [callback]\n * @api private\n */\n\n\nexports.tick = function tick(callback) {\n  if ('function' !== typeof callback) return;\n  return function () {\n    // callbacks should always be fired on the next\n    // turn of the event loop. A side benefit is\n    // errors thrown from executing the callback\n    // will not cause drivers state to be corrupted\n    // which has historically been a problem.\n    const args = arguments;\n    soon(function () {\n      callback.apply(this, args);\n    });\n  };\n};\n/**\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\n\nexports.merge = function merge(to, from) {\n  const keys = Object.keys(from);\n\n  for (const key of keys) {\n    if (specialProperties.indexOf(key) !== -1) {\n      continue;\n    }\n\n    if ('undefined' === typeof to[key]) {\n      to[key] = from[key];\n    } else {\n      if (exports.isObject(from[key])) {\n        merge(to[key], from[key]);\n      } else {\n        to[key] = from[key];\n      }\n    }\n  }\n};\n/**\n * Same as merge but clones the assigned values.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\n\nexports.mergeClone = function mergeClone(to, from) {\n  const keys = Object.keys(from);\n\n  for (const key of keys) {\n    if (specialProperties.indexOf(key) !== -1) {\n      continue;\n    }\n\n    if ('undefined' === typeof to[key]) {\n      to[key] = clone(from[key]);\n    } else {\n      if (exports.isObject(from[key])) {\n        mergeClone(to[key], from[key]);\n      } else {\n        to[key] = clone(from[key]);\n      }\n    }\n  }\n};\n/**\n * Read pref helper (mongo 2.2 drivers support this)\n *\n * Allows using aliases instead of full preference names:\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * @param {String} pref\n */\n\n\nexports.readPref = function readPref(pref) {\n  switch (pref) {\n    case 'p':\n      pref = 'primary';\n      break;\n\n    case 'pp':\n      pref = 'primaryPreferred';\n      break;\n\n    case 's':\n      pref = 'secondary';\n      break;\n\n    case 'sp':\n      pref = 'secondaryPreferred';\n      break;\n\n    case 'n':\n      pref = 'nearest';\n      break;\n  }\n\n  return pref;\n};\n/**\n * Read Concern helper (mongo 3.2 drivers support this)\n *\n * Allows using string to specify read concern level:\n *\n *     local          3.2+\n *     available      3.6+\n *     majority       3.2+\n *     linearizable   3.4+\n *     snapshot       4.0+\n *\n * @param {String|Object} concern\n */\n\n\nexports.readConcern = function readConcern(concern) {\n  if ('string' === typeof concern) {\n    switch (concern) {\n      case 'l':\n        concern = 'local';\n        break;\n\n      case 'a':\n        concern = 'available';\n        break;\n\n      case 'm':\n        concern = 'majority';\n        break;\n\n      case 'lz':\n        concern = 'linearizable';\n        break;\n\n      case 's':\n        concern = 'snapshot';\n        break;\n    }\n\n    concern = {\n      level: concern\n    };\n  }\n\n  return concern;\n};\n/**\n * Object.prototype.toString.call helper\n */\n\n\nconst _toString = Object.prototype.toString;\n\nexports.toString = function (arg) {\n  return _toString.call(arg);\n};\n/**\n * Determines if `arg` is an object.\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @return {Boolean}\n */\n\n\nconst isObject = exports.isObject = function (arg) {\n  return '[object Object]' == exports.toString(arg);\n};\n/**\n * Determines if `arg` is an array.\n *\n * @param {Object}\n * @return {Boolean}\n * @see nodejs utils\n */\n\n\nexports.isArray = function (arg) {\n  return Array.isArray(arg) || 'object' == typeof arg && '[object Array]' == exports.toString(arg);\n};\n/**\n * Object.keys helper\n */\n\n\nexports.keys = Object.keys;\n/**\n * Basic Object.create polyfill.\n * Only one argument is supported.\n *\n * Based on https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/create\n */\n\nexports.create = 'function' == typeof Object.create ? Object.create : create;\n\nfunction create(proto) {\n  if (arguments.length > 1) {\n    throw new Error('Adding properties is not supported');\n  }\n\n  function F() {}\n\n  F.prototype = proto;\n  return new F();\n}\n/**\n * inheritance\n */\n\n\nexports.inherits = function (ctor, superCtor) {\n  ctor.prototype = exports.create(superCtor.prototype);\n  ctor.prototype.constructor = ctor;\n};\n/**\n * nextTick helper\n * compat with node 0.10 which behaves differently than previous versions\n */\n\n\nconst soon = exports.soon = 'function' == typeof setImmediate ? setImmediate : process.nextTick;\n/**\n * Clones the contents of a buffer.\n *\n * @param {Buffer} buff\n * @return {Buffer}\n */\n\nexports.cloneBuffer = function (buff) {\n  const dupe = Buffer.alloc(buff.length);\n  buff.copy(dupe, 0, 0, buff.length);\n  return dupe;\n};\n/**\n * Check if this object is an arguments object\n *\n * @param {Any} v\n * @return {Boolean}\n */\n\n\nexports.isArgumentsObject = function (v) {\n  return Object.prototype.toString.call(v) === '[object Arguments]';\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mquery/lib/utils.js"],"names":["RegExpClone","require","specialProperties","clone","exports","obj","options","undefined","Array","isArray","cloneArray","constructor","test","name","id","mode","tags","_bsontype","buffer","value","sub_type","cloneBuffer","isObject","cloneObject","valueOf","minimize","ret","hasKeys","val","keys","Object","k","i","length","indexOf","arr","l","push","tick","callback","args","arguments","soon","apply","merge","to","from","key","mergeClone","readPref","pref","readConcern","concern","level","_toString","prototype","toString","arg","call","create","proto","Error","F","inherits","ctor","superCtor","setImmediate","process","nextTick","buff","dupe","Buffer","alloc","copy","isArgumentsObject","v"],"mappings":"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","sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst RegExpClone = require('regexp-clone');\n\nconst specialProperties = ['__proto__', 'constructor', 'prototype'];\n\n/**\n * Clones objects\n *\n * @param {Object} obj the object to clone\n * @param {Object} options\n * @return {Object} the cloned object\n * @api private\n */\n\nconst clone = exports.clone = function clone(obj, options) {\n  if (obj === undefined || obj === null)\n    return obj;\n\n  if (Array.isArray(obj))\n    return exports.cloneArray(obj, options);\n\n  if (obj.constructor) {\n    if (/ObjectI[dD]$/.test(obj.constructor.name)) {\n      return 'function' == typeof obj.clone\n        ? obj.clone()\n        : new obj.constructor(obj.id);\n    }\n\n    if (obj.constructor.name === 'ReadPreference') {\n      return new obj.constructor(obj.mode, clone(obj.tags, options));\n    }\n\n    if ('Binary' == obj._bsontype && obj.buffer && obj.value) {\n      return 'function' == typeof obj.clone\n        ? obj.clone()\n        : new obj.constructor(obj.value(true), obj.sub_type);\n    }\n\n    if ('Date' === obj.constructor.name || 'Function' === obj.constructor.name)\n      return new obj.constructor(+obj);\n\n    if ('RegExp' === obj.constructor.name)\n      return RegExpClone(obj);\n\n    if ('Buffer' === obj.constructor.name)\n      return exports.cloneBuffer(obj);\n  }\n\n  if (isObject(obj))\n    return exports.cloneObject(obj, options);\n\n  if (obj.valueOf)\n    return obj.valueOf();\n};\n\n/*!\n * ignore\n */\n\nexports.cloneObject = function cloneObject(obj, options) {\n  const minimize = options && options.minimize;\n  const ret = {};\n  let hasKeys;\n  let val;\n  const keys = Object.keys(obj);\n  let k;\n\n  for (let i = 0; i < keys.length; ++i) {\n    k = keys[i];\n    // Not technically prototype pollution because this wouldn't merge properties\n    // onto `Object.prototype`, but avoid properties like __proto__ as a precaution.\n    if (specialProperties.indexOf(k) !== -1) {\n      continue;\n    }\n\n    val = clone(obj[k], options);\n\n    if (!minimize || ('undefined' !== typeof val)) {\n      hasKeys || (hasKeys = true);\n      ret[k] = val;\n    }\n  }\n\n  return minimize\n    ? hasKeys && ret\n    : ret;\n};\n\nexports.cloneArray = function cloneArray(arr, options) {\n  const ret = [];\n  for (let i = 0, l = arr.length; i < l; i++)\n    ret.push(clone(arr[i], options));\n  return ret;\n};\n\n/**\n * process.nextTick helper.\n *\n * Wraps the given `callback` in a try/catch. If an error is\n * caught it will be thrown on nextTick.\n *\n * node-mongodb-native had a habit of state corruption when\n * an error was immediately thrown from within a collection\n * method (find, update, etc) callback.\n *\n * @param {Function} [callback]\n * @api private\n */\n\nexports.tick = function tick(callback) {\n  if ('function' !== typeof callback) return;\n  return function() {\n    // callbacks should always be fired on the next\n    // turn of the event loop. A side benefit is\n    // errors thrown from executing the callback\n    // will not cause drivers state to be corrupted\n    // which has historically been a problem.\n    const args = arguments;\n    soon(function() {\n      callback.apply(this, args);\n    });\n  };\n};\n\n/**\n * Merges `from` into `to` without overwriting existing properties.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.merge = function merge(to, from) {\n  const keys = Object.keys(from);\n\n  for (const key of keys) {\n    if (specialProperties.indexOf(key) !== -1) {\n      continue;\n    }\n    if ('undefined' === typeof to[key]) {\n      to[key] = from[key];\n    } else {\n      if (exports.isObject(from[key])) {\n        merge(to[key], from[key]);\n      } else {\n        to[key] = from[key];\n      }\n    }\n  }\n};\n\n/**\n * Same as merge but clones the assigned values.\n *\n * @param {Object} to\n * @param {Object} from\n * @api private\n */\n\nexports.mergeClone = function mergeClone(to, from) {\n  const keys = Object.keys(from);\n\n  for (const key of keys) {\n    if (specialProperties.indexOf(key) !== -1) {\n      continue;\n    }\n    if ('undefined' === typeof to[key]) {\n      to[key] = clone(from[key]);\n    } else {\n      if (exports.isObject(from[key])) {\n        mergeClone(to[key], from[key]);\n      } else {\n        to[key] = clone(from[key]);\n      }\n    }\n  }\n};\n\n/**\n * Read pref helper (mongo 2.2 drivers support this)\n *\n * Allows using aliases instead of full preference names:\n *\n *     p   primary\n *     pp  primaryPreferred\n *     s   secondary\n *     sp  secondaryPreferred\n *     n   nearest\n *\n * @param {String} pref\n */\n\nexports.readPref = function readPref(pref) {\n  switch (pref) {\n    case 'p':\n      pref = 'primary';\n      break;\n    case 'pp':\n      pref = 'primaryPreferred';\n      break;\n    case 's':\n      pref = 'secondary';\n      break;\n    case 'sp':\n      pref = 'secondaryPreferred';\n      break;\n    case 'n':\n      pref = 'nearest';\n      break;\n  }\n\n  return pref;\n};\n\n\n/**\n * Read Concern helper (mongo 3.2 drivers support this)\n *\n * Allows using string to specify read concern level:\n *\n *     local          3.2+\n *     available      3.6+\n *     majority       3.2+\n *     linearizable   3.4+\n *     snapshot       4.0+\n *\n * @param {String|Object} concern\n */\n\nexports.readConcern = function readConcern(concern) {\n  if ('string' === typeof concern) {\n    switch (concern) {\n      case 'l':\n        concern = 'local';\n        break;\n      case 'a':\n        concern = 'available';\n        break;\n      case 'm':\n        concern = 'majority';\n        break;\n      case 'lz':\n        concern = 'linearizable';\n        break;\n      case 's':\n        concern = 'snapshot';\n        break;\n    }\n    concern = { level: concern };\n  }\n  return concern;\n};\n\n/**\n * Object.prototype.toString.call helper\n */\n\nconst _toString = Object.prototype.toString;\nexports.toString = function(arg) {\n  return _toString.call(arg);\n};\n\n/**\n * Determines if `arg` is an object.\n *\n * @param {Object|Array|String|Function|RegExp|any} arg\n * @return {Boolean}\n */\n\nconst isObject = exports.isObject = function(arg) {\n  return '[object Object]' == exports.toString(arg);\n};\n\n/**\n * Determines if `arg` is an array.\n *\n * @param {Object}\n * @return {Boolean}\n * @see nodejs utils\n */\n\nexports.isArray = function(arg) {\n  return Array.isArray(arg) ||\n    'object' == typeof arg && '[object Array]' == exports.toString(arg);\n};\n\n/**\n * Object.keys helper\n */\n\nexports.keys = Object.keys;\n\n/**\n * Basic Object.create polyfill.\n * Only one argument is supported.\n *\n * Based on https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/create\n */\n\nexports.create = 'function' == typeof Object.create\n  ? Object.create\n  : create;\n\nfunction create(proto) {\n  if (arguments.length > 1) {\n    throw new Error('Adding properties is not supported');\n  }\n\n  function F() {}\n  F.prototype = proto;\n  return new F;\n}\n\n/**\n * inheritance\n */\n\nexports.inherits = function(ctor, superCtor) {\n  ctor.prototype = exports.create(superCtor.prototype);\n  ctor.prototype.constructor = ctor;\n};\n\n/**\n * nextTick helper\n * compat with node 0.10 which behaves differently than previous versions\n */\n\nconst soon = exports.soon = 'function' == typeof setImmediate\n  ? setImmediate\n  : process.nextTick;\n\n/**\n * Clones the contents of a buffer.\n *\n * @param {Buffer} buff\n * @return {Buffer}\n */\n\nexports.cloneBuffer = function(buff) {\n  const dupe = Buffer.alloc(buff.length);\n  buff.copy(dupe, 0, 0, buff.length);\n  return dupe;\n};\n\n/**\n * Check if this object is an arguments object\n *\n * @param {Any} v\n * @return {Boolean}\n */\n\nexports.isArgumentsObject = function(v) {\n  return Object.prototype.toString.call(v) === '[object Arguments]';\n};\n"]},"metadata":{},"sourceType":"script"}