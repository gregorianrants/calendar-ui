{"ast":null,"code":"'use strict';\n/*!\n * If populating a path within a document array, make sure each\n * subdoc within the array knows its subpaths are populated.\n *\n * ####Example:\n *     const doc = await Article.findOne().populate('comments.author');\n *     doc.comments[0].populated('author'); // Should be set\n */\n\nmodule.exports = function markArraySubdocsPopulated(doc, populated) {\n  if (doc._id == null || populated == null || populated.length === 0) {\n    return;\n  }\n\n  const id = String(doc._id);\n\n  for (const item of populated) {\n    if (item.isVirtual) {\n      continue;\n    }\n\n    const path = item.path;\n    const pieces = path.split('.');\n\n    for (let i = 0; i < pieces.length - 1; ++i) {\n      const subpath = pieces.slice(0, i + 1).join('.');\n      const rest = pieces.slice(i + 1).join('.');\n      const val = doc.get(subpath);\n\n      if (val == null) {\n        continue;\n      }\n\n      if (val.isMongooseDocumentArray) {\n        for (let j = 0; j < val.length; ++j) {\n          val[j].populated(rest, item._docs[id] == null ? void 0 : item._docs[id][j], item);\n        }\n\n        break;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/helpers/populate/markArraySubdocsPopulated.js"],"names":["module","exports","markArraySubdocsPopulated","doc","populated","_id","length","id","String","item","isVirtual","path","pieces","split","i","subpath","slice","join","rest","val","get","isMongooseDocumentArray","j","_docs"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,yBAAT,CAAmCC,GAAnC,EAAwCC,SAAxC,EAAmD;AAClE,MAAID,GAAG,CAACE,GAAJ,IAAW,IAAX,IAAmBD,SAAS,IAAI,IAAhC,IAAwCA,SAAS,CAACE,MAAV,KAAqB,CAAjE,EAAoE;AAClE;AACD;;AAED,QAAMC,EAAE,GAAGC,MAAM,CAACL,GAAG,CAACE,GAAL,CAAjB;;AACA,OAAK,MAAMI,IAAX,IAAmBL,SAAnB,EAA8B;AAC5B,QAAIK,IAAI,CAACC,SAAT,EAAoB;AAClB;AACD;;AACD,UAAMC,IAAI,GAAGF,IAAI,CAACE,IAAlB;AACA,UAAMC,MAAM,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACN,MAAP,GAAgB,CAApC,EAAuC,EAAEQ,CAAzC,EAA4C;AAC1C,YAAMC,OAAO,GAAGH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBF,CAAC,GAAG,CAApB,EAAuBG,IAAvB,CAA4B,GAA5B,CAAhB;AACA,YAAMC,IAAI,GAAGN,MAAM,CAACI,KAAP,CAAaF,CAAC,GAAG,CAAjB,EAAoBG,IAApB,CAAyB,GAAzB,CAAb;AACA,YAAME,GAAG,GAAGhB,GAAG,CAACiB,GAAJ,CAAQL,OAAR,CAAZ;;AACA,UAAII,GAAG,IAAI,IAAX,EAAiB;AACf;AACD;;AAED,UAAIA,GAAG,CAACE,uBAAR,EAAiC;AAC/B,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACb,MAAxB,EAAgC,EAAEgB,CAAlC,EAAqC;AACnCH,UAAAA,GAAG,CAACG,CAAD,CAAH,CAAOlB,SAAP,CAAiBc,IAAjB,EAAuBT,IAAI,CAACc,KAAL,CAAWhB,EAAX,KAAkB,IAAlB,GAAyB,KAAK,CAA9B,GAAkCE,IAAI,CAACc,KAAL,CAAWhB,EAAX,EAAee,CAAf,CAAzD,EAA4Eb,IAA5E;AACD;;AACD;AACD;AACF;AACF;AACF,CA5BD","sourcesContent":["'use strict';\n\n/*!\n * If populating a path within a document array, make sure each\n * subdoc within the array knows its subpaths are populated.\n *\n * ####Example:\n *     const doc = await Article.findOne().populate('comments.author');\n *     doc.comments[0].populated('author'); // Should be set\n */\n\nmodule.exports = function markArraySubdocsPopulated(doc, populated) {\n  if (doc._id == null || populated == null || populated.length === 0) {\n    return;\n  }\n\n  const id = String(doc._id);\n  for (const item of populated) {\n    if (item.isVirtual) {\n      continue;\n    }\n    const path = item.path;\n    const pieces = path.split('.');\n    for (let i = 0; i < pieces.length - 1; ++i) {\n      const subpath = pieces.slice(0, i + 1).join('.');\n      const rest = pieces.slice(i + 1).join('.');\n      const val = doc.get(subpath);\n      if (val == null) {\n        continue;\n      }\n\n      if (val.isMongooseDocumentArray) {\n        for (let j = 0; j < val.length; ++j) {\n          val[j].populated(rest, item._docs[id] == null ? void 0 : item._docs[id][j], item);\n        }\n        break;\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"script"}