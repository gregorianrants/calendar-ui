{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { weekContaining, setTimeDayStart, setTimeDayEnd } from \"../../utilities/dateUtilities\";\nimport { addDays } from \"date-fns\";\nconst initialState = {\n  firstDay: null,\n  lastDay: null,\n  days: [],\n  events: []\n};\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      const {\n        firstDay,\n        lastDay,\n        days,\n        events\n      } = action.payload;\n      state = {\n        firstDay,\n        lastDay,\n        days,\n        events\n      };\n    }\n\n  }\n});\n\nconst incrementCalendar = (state, dispatch) => {};\n\nexport default calendarSlice.reducer;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Calendar/calendarSlice.js"],"names":["createSlice","weekContaining","setTimeDayStart","setTimeDayEnd","addDays","initialState","firstDay","lastDay","days","events","calendarSlice","name","reducers","dataLoaded","state","action","payload","incrementCalendar","dispatch","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,cAAR,EAAuBC,eAAvB,EAAuCC,aAAvC,QAA2D,+BAA3D;AACA,SAAQC,OAAR,QAAsB,UAAtB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,MAAM,EAAE;AAJW,CAArB;AAOA,MAAMC,aAAa,GAAGV,WAAW,CAAC;AAChCW,EAAAA,IAAI,EAAE,UAD0B;AAEhCN,EAAAA,YAFgC;AAGhCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAM;AAAET,QAAAA,QAAF;AAAYC,QAAAA,OAAZ;AAAqBC,QAAAA,IAArB;AAA2BC,QAAAA;AAA3B,UAAsCM,MAAM,CAACC,OAAnD;AACAF,MAAAA,KAAK,GAAG;AAAER,QAAAA,QAAF;AAAYC,QAAAA,OAAZ;AAAqBC,QAAAA,IAArB;AAA2BC,QAAAA;AAA3B,OAAR;AACD;;AAJO;AAHsB,CAAD,CAAjC;;AAWA,MAAMQ,iBAAiB,GAAG,CAACH,KAAD,EAAOI,QAAP,KAAkB,CAE3C,CAFD;;AAIA,eAAeR,aAAa,CAACS,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {weekContaining,setTimeDayStart,setTimeDayEnd} from \"../../utilities/dateUtilities\";\nimport {addDays} from \"date-fns\";\n\n\n\nconst initialState = {\n  firstDay: null,\n  lastDay: null,\n  days: [],\n  events: [],\n};\n\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      const { firstDay, lastDay, days, events } = action.payload;\n      state = { firstDay, lastDay, days, events };\n    },\n  },\n});\n\nconst incrementCalendar = (state,dispatch)=>{\n\n}\n\nexport default calendarSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}