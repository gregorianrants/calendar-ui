{"ast":null,"code":"require(\"dotenv\").config();\n\nconst db = require(\"./model/db\");\n\nconst express = require(\"express\");\n\nconst jobs = require(\"./routes/jobsRoute\");\n\nconst cors = require(\"cors\");\n\nconst app = express();\n\nconst http = require(\"http\");\n\nconst server = http.createServer(app);\n\nconst path = require(\"path\");\n\nconst errorHandlers = require(\"./controllers/errorControllers\");\n\napp.use(cors());\n/*\nconst { Server } = require(\"socket.io\");\n\nconst {sockets} = require('./sockets')\n\n\n\nconst io = new Server(server,{\n    cors: {\n        origin: \"http://localhost:3000\",\n        methods: [\"GET\", \"POST\"]\n    }});\n\nio.on('connection',(socket)=>{\n    console.log('new client connected')\n    sockets.push(socket)\n})\n\n*/\n\napp.use(express.static(path.join(__dirname, \"../build\")));\napp.get(\"/\", function (req, res) {\n  res.sendFile(path.join(__dirname, \"../build\", \"index.html\"));\n});\nconst port = process.env.PORT || 3000;\napp.use(express.json());\napp.use(\"/api/v1/jobs\", jobs);\napp.all(\"*\", (req, res, next) => {\n  next(new AppError(`Cant't find ${req.originalUrl} on this server`, 404));\n});\napp.use(errorHandlers.handleValidationError);\napp.use(errorHandlers.handleNotFoundError);\napp.use(errorHandlers.handleError);\nserver.listen(port, () => {\n  console.log(`listening on port ${port}`);\n});","map":{"version":3,"sources":["/home/gregorian/calendar-ui/api/main.js"],"names":["require","config","db","express","jobs","cors","app","http","server","createServer","path","errorHandlers","use","static","join","__dirname","get","req","res","sendFile","port","process","env","PORT","json","all","next","AppError","originalUrl","handleValidationError","handleNotFoundError","handleError","listen","console","log"],"mappings":"AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,EAAE,GAAGF,OAAO,CAAC,YAAD,CAAlB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,oBAAD,CAApB;;AACA,MAAMK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMM,GAAG,GAAGH,OAAO,EAAnB;;AACA,MAAMI,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMQ,MAAM,GAAGD,IAAI,CAACE,YAAL,CAAkBH,GAAlB,CAAf;;AACA,MAAMI,IAAI,GAAGV,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMW,aAAa,GAAGX,OAAO,CAAC,gCAAD,CAA7B;;AAEAM,GAAG,CAACM,GAAJ,CAAQP,IAAI,EAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,GAAG,CAACM,GAAJ,CAAQT,OAAO,CAACU,MAAR,CAAeH,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAf,CAAR;AAEAT,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/BA,EAAAA,GAAG,CAACC,QAAJ,CAAaT,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,UAArB,EAAiC,YAAjC,CAAb;AACD,CAFD;AAIA,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAjB,GAAG,CAACM,GAAJ,CAAQT,OAAO,CAACqB,IAAR,EAAR;AACAlB,GAAG,CAACM,GAAJ,CAAQ,cAAR,EAAwBR,IAAxB;AAEAE,GAAG,CAACmB,GAAJ,CAAQ,GAAR,EAAa,CAACR,GAAD,EAAMC,GAAN,EAAWQ,IAAX,KAAoB;AAC/BA,EAAAA,IAAI,CAAC,IAAIC,QAAJ,CAAc,eAAcV,GAAG,CAACW,WAAY,iBAA5C,EAA8D,GAA9D,CAAD,CAAJ;AACD,CAFD;AAIAtB,GAAG,CAACM,GAAJ,CAAQD,aAAa,CAACkB,qBAAtB;AACAvB,GAAG,CAACM,GAAJ,CAAQD,aAAa,CAACmB,mBAAtB;AACAxB,GAAG,CAACM,GAAJ,CAAQD,aAAa,CAACoB,WAAtB;AAEAvB,MAAM,CAACwB,MAAP,CAAcZ,IAAd,EAAoB,MAAM;AACxBa,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBd,IAAK,EAAtC;AACD,CAFD","sourcesContent":["require(\"dotenv\").config();\nconst db = require(\"./model/db\");\nconst express = require(\"express\");\nconst jobs = require(\"./routes/jobsRoute\");\nconst cors = require(\"cors\");\nconst app = express();\nconst http = require(\"http\");\nconst server = http.createServer(app);\nconst path = require(\"path\");\nconst errorHandlers = require(\"./controllers/errorControllers\");\n\napp.use(cors());\n\n/*\nconst { Server } = require(\"socket.io\");\n\nconst {sockets} = require('./sockets')\n\n\n\nconst io = new Server(server,{\n    cors: {\n        origin: \"http://localhost:3000\",\n        methods: [\"GET\", \"POST\"]\n    }});\n\nio.on('connection',(socket)=>{\n    console.log('new client connected')\n    sockets.push(socket)\n})\n\n*/\n\napp.use(express.static(path.join(__dirname, \"../build\")));\n\napp.get(\"/\", function (req, res) {\n  res.sendFile(path.join(__dirname, \"../build\", \"index.html\"));\n});\n\nconst port = process.env.PORT || 3000;\n\napp.use(express.json());\napp.use(\"/api/v1/jobs\", jobs);\n\napp.all(\"*\", (req, res, next) => {\n  next(new AppError(`Cant't find ${req.originalUrl} on this server`, 404));\n});\n\napp.use(errorHandlers.handleValidationError);\napp.use(errorHandlers.handleNotFoundError);\napp.use(errorHandlers.handleError);\n\nserver.listen(port, () => {\n  console.log(`listening on port ${port}`);\n});\n"]},"metadata":{},"sourceType":"script"}