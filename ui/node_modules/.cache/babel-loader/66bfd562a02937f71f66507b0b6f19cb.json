{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useReducer}from\"react\";import mongoose from\"mongoose/browser\";import{useInput}from\"../hooks/useInput\";import{useArray}from\"../hooks/useArray\";import{startEndChange,StartEndInput}from\"./StartEndInput\";import styled from\"styled-components\";import{useImmerReducer}from\"use-immer\";import camelCase from\"camelcase\";import{Formik,Field}from\"formik\";import{cloneDeep,values,flatten}from\"lodash\";//import { styled } from \"@mui/material/styles\";\nimport{ListBuilder}from\"./AddressInput\";import{TextField,Grid,Button}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import DateFnsUtils from\"@date-io/date-fns\";// choose your lib\nimport{rootReducer}from\"./reducer\";import{editJob}from\"../../Model/Jobs\";import{DatePicker,TimePicker,MuiPickersUtilsProvider}from\"@material-ui/pickers\";import{Typography}from\"@material-ui/core\";import{jobSchema}from\"api/model/job\";//TODO change name of buildSchema\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function dateTimeFromInput(date,time){var hours=time.getHours();var minutes=time.getMinutes();var res=new Date(date);res.setHours(hours);res.setMinutes(minutes);return res;}var FlexRow=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n\"])));var useStyles=makeStyles({flexItem:{flex:\"1 1 0\",\"&:not(:last-child)\":{marginRight:\"10px\"}},inputRow:{marginBottom:\"10px\"},textField:{\"& textarea\":{whiteSpace:\"pre-line\"}}});export default function JobForm(_ref){var updateEvent=_ref.updateEvent,close=_ref.close,toggleModal=_ref.toggleModal,initialValues=_ref.initialValues;var classes=useStyles();console.log(initialValues);var handleSubmit=function handleSubmit(data){console.log(data);var _id=data._id;editJob({_id:_id,data:data}).then(function(response){if(response.status===\"success\"){onSuccess(_id,response.data);}else if(response.status===\"fail\"&&response.name===\"validationError\"){console.log(\"i need validation\");}}).catch(console.error);};function onSuccess(_id,data){updateEvent(_id,data);close();}function handleNested(error,formikErrors){}var validator=function validator(values){var doc=new mongoose.Document(values,jobSchema);console.log(jobSchema.path(\"customer\"));console.log(jobSchema.path(\"customer.name\"));console.log(jobSchema.path(\"charges\"));var result=doc.validateSync();var pretty=JSON.stringify(result||{},null,2);console.log(pretty);return{};};return/*#__PURE__*/_jsx(Formik,{initialValues:cloneDeep(initialValues),onSubmit:handleSubmit,validate:validator,children:function children(props){var _props$errors,_props$errors$custome,_props$errors2,_props$errors2$custom,_props$errors3,_props$errors3$charge,_props$errors4,_props$errors4$charge,_props$errors5,_props$errors5$charge,_props$errors6,_props$errors6$charge,_props$errors7,_props$errors7$charge,_props$errors8,_props$errors8$charge,_props$errors9,_props$errors10;return/*#__PURE__*/ (//<Typography variant=\"h4\">Create Job</Typography>\n_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(Field,{as:TextField,className:classes.inputRow,name:\"customer.name\",label:\"name\",error:(_props$errors=props.errors)===null||_props$errors===void 0?void 0:(_props$errors$custome=_props$errors.customer)===null||_props$errors$custome===void 0?void 0:_props$errors$custome.name,helperText:(_props$errors2=props.errors)===null||_props$errors2===void 0?void 0:(_props$errors2$custom=_props$errors2.customer)===null||_props$errors2$custom===void 0?void 0:_props$errors2$custom.name,fullWidth:true}),/*#__PURE__*/_jsx(Field,{as:TextField,className:classes.inputRow,name:\"customer.mobile\",label:\"mobile\",fullWidth:true}),/*#__PURE__*/_jsx(Field,{as:TextField,className:classes.inputRow,name:\"customer.email\",label:\"email\",fullWidth:true}),/*#__PURE__*/_jsxs(FlexRow,{className:classes.inputRow,children:[/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:DateFnsUtils,children:/*#__PURE__*/_jsx(TimePicker,{className:classes.flexItem,value:props.values.start,onChange:props.handleChange,label:\"date\"})}),/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:DateFnsUtils,children:/*#__PURE__*/_jsx(TimePicker,{className:classes.flexItem,value:props.values.end,onChange:props.handleChange,label:\"date\"})}),/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:DateFnsUtils,children:/*#__PURE__*/_jsx(DatePicker,{className:classes.flexItem,value:props.values.start,onChange:function onChange(date){props.setFieldValue(\"start\",dateTimeFromInput(date,props.values.start),true);props.setFieldValue(\"end\",dateTimeFromInput(date,props.values.end),true);console.log(\"hello\");},label:\"end\"})})]}),/*#__PURE__*/_jsxs(FlexRow,{className:classes.inputRow,children:[/*#__PURE__*/_jsx(Field,{className:classes.flexItem,as:TextField,name:\"charges.hourlyRate\",label:\"hourly rate\",error:(_props$errors3=props.errors)===null||_props$errors3===void 0?void 0:(_props$errors3$charge=_props$errors3.charges)===null||_props$errors3$charge===void 0?void 0:_props$errors3$charge.hourlyRate,helperText:(_props$errors4=props.errors)===null||_props$errors4===void 0?void 0:(_props$errors4$charge=_props$errors4.charges)===null||_props$errors4$charge===void 0?void 0:_props$errors4$charge.hourlyRate,fullWidth:true}),/*#__PURE__*/_jsx(Field,{className:classes.flexItem,as:TextField,name:\"charges.fuelCharge\",label:\"fuelCharge\",error:(_props$errors5=props.errors)===null||_props$errors5===void 0?void 0:(_props$errors5$charge=_props$errors5.charges)===null||_props$errors5$charge===void 0?void 0:_props$errors5$charge.fuelCharge,helperText:(_props$errors6=props.errors)===null||_props$errors6===void 0?void 0:(_props$errors6$charge=_props$errors6.charges)===null||_props$errors6$charge===void 0?void 0:_props$errors6$charge.fuelCharge,fullWidth:true}),/*#__PURE__*/_jsx(Field,{className:classes.flexItem,as:TextField,name:\"charges.travelTime\",label:\"travelTime\",error:(_props$errors7=props.errors)===null||_props$errors7===void 0?void 0:(_props$errors7$charge=_props$errors7.charges)===null||_props$errors7$charge===void 0?void 0:_props$errors7$charge.travelTime,helperText:(_props$errors8=props.errors)===null||_props$errors8===void 0?void 0:(_props$errors8$charge=_props$errors8.charges)===null||_props$errors8$charge===void 0?void 0:_props$errors8$charge.travelTime,fullWidth:true})]}),/*#__PURE__*/_jsx(Field,{as:TextField,className:classes.inputRow,name:\"items\",label:\"items\",error:(_props$errors9=props.errors)===null||_props$errors9===void 0?void 0:_props$errors9.items,helperText:(_props$errors10=props.errors)===null||_props$errors10===void 0?void 0:_props$errors10.items,fullWidth:true,multiline:true,rows:5}),/*#__PURE__*/_jsx(ListBuilder,{value:props.values.addresses,onChange:props.handleChange,label:\"add address\",name:\"addresses\"}),/*#__PURE__*/_jsx(ListBuilder,{value:props.values.operatives,onChange:props.handleChange,label:\"add operative\",name:\"operatives\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\"// onClick={(e) => {\n//    e.preventDefault();\n//    props.handleSubmit(values); //TODO should i be cloning object before apssing it about\n//  }}\n,variant:\"contained\",color:\"primary\",fullWidth:true,children:\"save\"})]}));}});}","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js"],"names":["React","useReducer","mongoose","useInput","useArray","startEndChange","StartEndInput","styled","useImmerReducer","camelCase","Formik","Field","cloneDeep","values","flatten","ListBuilder","TextField","Grid","Button","makeStyles","DateFnsUtils","rootReducer","editJob","DatePicker","TimePicker","MuiPickersUtilsProvider","Typography","jobSchema","dateTimeFromInput","date","time","hours","getHours","minutes","getMinutes","res","Date","setHours","setMinutes","FlexRow","div","useStyles","flexItem","flex","marginRight","inputRow","marginBottom","textField","whiteSpace","JobForm","updateEvent","close","toggleModal","initialValues","classes","console","log","handleSubmit","data","_id","then","response","status","onSuccess","name","catch","error","handleNested","formikErrors","validator","doc","Document","path","result","validateSync","pretty","JSON","stringify","props","errors","customer","start","handleChange","end","setFieldValue","charges","hourlyRate","fuelCharge","travelTime","items","addresses","operatives"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport mongoose from \"mongoose/browser\";\nimport { useInput } from \"../hooks/useInput\";\nimport { useArray } from \"../hooks/useArray\";\nimport { startEndChange, StartEndInput } from \"./StartEndInput\";\nimport styled from \"styled-components\";\nimport { useImmerReducer } from \"use-immer\";\nimport camelCase from \"camelcase\";\nimport { Formik, Field } from \"formik\";\nimport { cloneDeep, values, flatten } from \"lodash\";\n//import { styled } from \"@mui/material/styles\";\n\nimport { ListBuilder } from \"./AddressInput\";\n\nimport { TextField, Grid, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\n\nimport { rootReducer } from \"./reducer\";\nimport { editJob } from \"../../Model/Jobs\";\n\nimport {\n  DatePicker,\n  TimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport { Typography } from \"@material-ui/core\";\n\nimport { jobSchema } from \"api/model/job\"; //TODO change name of buildSchema\n\nfunction dateTimeFromInput(date, time) {\n  const hours = time.getHours();\n  const minutes = time.getMinutes();\n  let res = new Date(date);\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  return res;\n}\n\nconst FlexRow = styled.div`\n  display: flex;\n`;\n\nconst useStyles = makeStyles({\n  flexItem: {\n    flex: \"1 1 0\",\n    \"&:not(:last-child)\": {\n      marginRight: \"10px\",\n    },\n  },\n  inputRow: {\n    marginBottom: \"10px\",\n  },\n  textField: {\n    \"& textarea\": {\n      whiteSpace: \"pre-line\",\n    },\n  },\n});\n\nexport default function JobForm({\n  updateEvent,\n  close,\n  toggleModal,\n  initialValues,\n}) {\n  const classes = useStyles();\n\n  console.log(initialValues)\n\n  const handleSubmit = (data) => {\n    console.log(data);\n    const { _id } = data;\n    editJob({ _id: _id, data: data })\n      .then((response) => {\n        if (response.status === \"success\") {\n          onSuccess(_id, response.data);\n        } else if (\n          response.status === \"fail\" &&\n          response.name === \"validationError\"\n        ) {\n          console.log(\"i need validation\");\n        }\n      })\n      .catch(console.error);\n  };\n\n  function onSuccess(_id, data) {\n    updateEvent(_id, data);\n    close();\n  }\n\n  function handleNested(error,formikErrors) {\n\n\n  }\n\n  const validator = (values) => {\n    const doc = new mongoose.Document(values, jobSchema);\n    console.log(jobSchema.path(\"customer\"));\n    console.log(jobSchema.path(\"customer.name\"));\n    console.log(jobSchema.path(\"charges\"));\n\n    const result = doc.validateSync();\n    const pretty = JSON.stringify(result || {}, null, 2);\n    console.log(pretty);\n\n    return {};\n  };\n\n  return (\n    <Formik\n      initialValues={cloneDeep(initialValues)}\n      onSubmit={handleSubmit}\n      validate={validator}\n    >\n      {(props) => (\n        //<Typography variant=\"h4\">Create Job</Typography>\n        <form onSubmit={props.handleSubmit}>\n          <Field\n            as={TextField}\n            className={classes.inputRow}\n            name=\"customer.name\"\n            label=\"name\"\n            error={props.errors?.customer?.name}\n            helperText={props.errors?.customer?.name}\n            fullWidth\n          />\n          <Field\n            as={TextField}\n            className={classes.inputRow}\n            name=\"customer.mobile\"\n            label=\"mobile\"\n            fullWidth\n          />\n          <Field\n            as={TextField}\n            className={classes.inputRow}\n            name=\"customer.email\"\n            label=\"email\"\n            fullWidth\n          />\n          <FlexRow className={classes.inputRow}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <TimePicker\n                className={classes.flexItem}\n                value={props.values.start}\n                onChange={props.handleChange}\n                label=\"date\"\n              />\n            </MuiPickersUtilsProvider>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <TimePicker\n                className={classes.flexItem}\n                value={props.values.end}\n                onChange={props.handleChange}\n                label=\"date\"\n              />\n            </MuiPickersUtilsProvider>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                className={classes.flexItem}\n                value={props.values.start}\n                onChange={(date) => {\n                  props.setFieldValue(\n                    \"start\",\n                    dateTimeFromInput(date, props.values.start),\n                    true\n                  );\n                  props.setFieldValue(\n                    \"end\",\n                    dateTimeFromInput(date, props.values.end),\n                    true\n                  );\n                  console.log(\"hello\");\n                }}\n                label=\"end\"\n              />\n            </MuiPickersUtilsProvider>\n          </FlexRow>\n\n          <FlexRow className={classes.inputRow}>\n            <Field\n              className={classes.flexItem}\n              as={TextField}\n              name=\"charges.hourlyRate\"\n              label=\"hourly rate\"\n              error={props.errors?.charges?.hourlyRate}\n              helperText={props.errors?.charges?.hourlyRate}\n              fullWidth\n            />\n            <Field\n              className={classes.flexItem}\n              as={TextField}\n              name=\"charges.fuelCharge\"\n              label=\"fuelCharge\"\n              error={props.errors?.charges?.fuelCharge}\n              helperText={props.errors?.charges?.fuelCharge}\n              fullWidth\n            />\n            <Field\n              className={classes.flexItem}\n              as={TextField}\n              name=\"charges.travelTime\"\n              label=\"travelTime\"\n              error={props.errors?.charges?.travelTime}\n              helperText={props.errors?.charges?.travelTime}\n              fullWidth\n            />\n          </FlexRow>\n\n          <Field\n            as={TextField}\n            className={classes.inputRow}\n            name=\"items\"\n            label=\"items\"\n            error={props.errors?.items}\n            helperText={props.errors?.items}\n            fullWidth\n            multiline\n            rows={5}\n          />\n          <ListBuilder\n            value={props.values.addresses}\n            onChange={props.handleChange}\n            label=\"add address\"\n            name=\"addresses\"\n          />\n          <ListBuilder\n            value={props.values.operatives}\n            onChange={props.handleChange}\n            label=\"add operative\"\n            name=\"operatives\"\n          />\n\n          {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <TimePicker\n          value={startValue}\n          onChange={onStartChange}\n          label=\"start\"\n        />\n      </MuiPickersUtilsProvider>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <TimePicker value={endValue} onChange={onEndChange} label=\"end\" />\n      </MuiPickersUtilsProvider> */}\n          {/*<FieldSet inline>\n          <TextField\n            inputProps={{ \"data-group\": \"charges\" }}\n            name=\"hourly-rate\"\n            label=\"Hourly Rate\"\n            value={state.charges.hourlyRate}\n            onChange={groupItemChange}\n            fullWidth\n          />\n          <TextField\n            inputProps={{ \"data-group\": \"charges\" }}\n            name=\"fuel-charge\"\n            label=\"Fuel Charge\"\n            value={state.charges.fuelCharge}\n            onChange={groupItemChange}\n            fullWidth\n          />\n          <TextField\n            inputProps={{ \"data-group\": \"charges\" }}\n            name=\"travel-time\"\n            label=\"Travel Time\"\n            value={state.charges.travelTime}\n            onChange={groupItemChange}\n            fullWidth\n          />\n        </FieldSet>\n        <AddressInput\n          value={state.addresses}\n          onChange={itemChange}\n          name=\"addresses\"\n        /> */}\n          <Button\n            type=\"submit\"\n            // onClick={(e) => {\n            //    e.preventDefault();\n            //    props.handleSubmit(values); //TODO should i be cloning object before apssing it about\n            //  }}\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n          >\n            save\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}