{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./');\n\nconst util = require('util');\n\nclass DocumentNotFoundError extends MongooseError {\n  /*!\n   * OverwriteModel Error constructor.\n   */\n  constructor(filter, model, numAffected, result) {\n    let msg;\n    const messages = MongooseError.messages;\n\n    if (messages.DocumentNotFoundError != null) {\n      msg = typeof messages.DocumentNotFoundError === 'function' ? messages.DocumentNotFoundError(filter, model) : messages.DocumentNotFoundError;\n    } else {\n      msg = 'No document found for query \"' + util.inspect(filter) + '\" on model \"' + model + '\"';\n    }\n\n    super(msg);\n    this.result = result;\n    this.numAffected = numAffected;\n    this.filter = filter; // Backwards compat\n\n    this.query = filter;\n  }\n\n}\n\nObject.defineProperty(DocumentNotFoundError.prototype, 'name', {\n  value: 'DocumentNotFoundError'\n});\n/*!\n * exports\n */\n\nmodule.exports = DocumentNotFoundError;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/error/notFound.js"],"names":["MongooseError","require","util","DocumentNotFoundError","constructor","filter","model","numAffected","result","msg","messages","inspect","query","Object","defineProperty","prototype","value","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,MAAMA,aAAa,GAAGC,OAAO,CAAC,IAAD,CAA7B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,qBAAN,SAAoCH,aAApC,CAAkD;AAChD;AACF;AACA;AACEI,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,WAAhB,EAA6BC,MAA7B,EAAqC;AAC9C,QAAIC,GAAJ;AACA,UAAMC,QAAQ,GAAGV,aAAa,CAACU,QAA/B;;AACA,QAAIA,QAAQ,CAACP,qBAAT,IAAkC,IAAtC,EAA4C;AAC1CM,MAAAA,GAAG,GAAG,OAAOC,QAAQ,CAACP,qBAAhB,KAA0C,UAA1C,GACJO,QAAQ,CAACP,qBAAT,CAA+BE,MAA/B,EAAuCC,KAAvC,CADI,GAEJI,QAAQ,CAACP,qBAFX;AAGD,KAJD,MAIO;AACLM,MAAAA,GAAG,GAAG,kCAAkCP,IAAI,CAACS,OAAL,CAAaN,MAAb,CAAlC,GACJ,cADI,GACaC,KADb,GACqB,GAD3B;AAED;;AAED,UAAMG,GAAN;AAEA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKF,MAAL,GAAcA,MAAd,CAhB8C,CAiB9C;;AACA,SAAKO,KAAL,GAAaP,MAAb;AACD;;AAvB+C;;AA0BlDQ,MAAM,CAACC,cAAP,CAAsBX,qBAAqB,CAACY,SAA5C,EAAuD,MAAvD,EAA+D;AAC7DC,EAAAA,KAAK,EAAE;AADsD,CAA/D;AAIA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiBf,qBAAjB","sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseError = require('./');\nconst util = require('util');\n\nclass DocumentNotFoundError extends MongooseError {\n  /*!\n   * OverwriteModel Error constructor.\n   */\n  constructor(filter, model, numAffected, result) {\n    let msg;\n    const messages = MongooseError.messages;\n    if (messages.DocumentNotFoundError != null) {\n      msg = typeof messages.DocumentNotFoundError === 'function' ?\n        messages.DocumentNotFoundError(filter, model) :\n        messages.DocumentNotFoundError;\n    } else {\n      msg = 'No document found for query \"' + util.inspect(filter) +\n        '\" on model \"' + model + '\"';\n    }\n\n    super(msg);\n\n    this.result = result;\n    this.numAffected = numAffected;\n    this.filter = filter;\n    // Backwards compat\n    this.query = filter;\n  }\n}\n\nObject.defineProperty(DocumentNotFoundError.prototype, 'name', {\n  value: 'DocumentNotFoundError'\n});\n\n/*!\n * exports\n */\n\nmodule.exports = DocumentNotFoundError;\n"]},"metadata":{},"sourceType":"script"}