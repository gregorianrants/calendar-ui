{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/Hours.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport settingsContext from \"./Contexts\";\nimport { useHistory } from \"react-router\";\nimport { formatISO } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HoursStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c = HoursStyled;\nconst HourStyled = styled.div`\n  flex: 1 0 0;\n  border-top: 1px solid lightgray;\n\n  &:last-child {\n    border-bottom: ${props => `${props.borderWidth}px solid var(--border-color-light)`};\n  }\n`;\n_c2 = HourStyled;\nexport default function Hours({\n  className,\n  date\n}) {\n  _s();\n\n  const {\n    borderWidth,\n    hourHeight\n  } = React.useContext(settingsContext);\n  const history = useHistory();\n\n  const handleClick = hour => {\n    history.push(`/calendar/job-form?hour=${String(hour)}&iso-date=${formatISO}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(HoursStyled, {\n    children: [...Array(24).keys()].map(index => /*#__PURE__*/_jsxDEV(HourStyled, {\n      \"data-hour\": String(index),\n      hourHeight: hourHeight,\n      borderWidth: borderWidth,\n      className: className,\n      draggable: \"false\",\n      onClick: () => handleClick(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Hours, \"I06ZsLkUC4Izi67I13qfDXI3l6E=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Hours;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HoursStyled\");\n$RefreshReg$(_c2, \"HourStyled\");\n$RefreshReg$(_c3, \"Hours\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Hours.js"],"names":["React","styled","settingsContext","useHistory","formatISO","HoursStyled","div","HourStyled","props","borderWidth","Hours","className","date","hourHeight","useContext","history","handleClick","hour","push","String","Array","keys","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA,CAJA;KAAMD,W;AAMN,MAAME,UAAU,GAAGN,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA;AACA,qBAAsBE,KAAD,IACd,GAAEA,KAAK,CAACC,WAAY,oCAAoC;AAC/D;AACA,CARA;MAAMF,U;AAUN,eAAe,SAASG,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAoC;AAAA;;AACjD,QAAM;AAAEH,IAAAA,WAAF;AAAeI,IAAAA;AAAf,MAA8Bb,KAAK,CAACc,UAAN,CAAiBZ,eAAjB,CAApC;AACA,QAAMa,OAAO,GAAGZ,UAAU,EAA1B;;AAEA,QAAMa,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,OAAO,CAACG,IAAR,CAAc,2BAA0BC,MAAM,CAACF,IAAD,CAAO,aAAYb,SAAU,EAA3E;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD;AAAA,cACG,CAAC,GAAGgB,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAJ,EAAsBC,GAAtB,CAA2BC,KAAD,iBACzB,QAAC,UAAD;AAEE,mBAAWJ,MAAM,CAACI,KAAD,CAFnB;AAGE,MAAA,UAAU,EAAEV,UAHd;AAIE,MAAA,WAAW,EAAEJ,WAJf;AAKE,MAAA,SAAS,EAAEE,SALb;AAME,MAAA,SAAS,EAAC,OANZ;AAOE,MAAA,OAAO,EAAE,MAAMK,WAAW,CAACO,KAAD;AAP5B,OACOA,KADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvBuBb,K;UAENP,U;;;MAFMO,K","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport settingsContext from \"./Contexts\";\nimport { useHistory } from \"react-router\";\nimport { formatISO } from \"date-fns\";\n\nconst HoursStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst HourStyled = styled.div`\n  flex: 1 0 0;\n  border-top: 1px solid lightgray;\n\n  &:last-child {\n    border-bottom: ${(props) =>\n      `${props.borderWidth}px solid var(--border-color-light)`};\n  }\n`;\n\nexport default function Hours({ className, date }) {\n  const { borderWidth, hourHeight } = React.useContext(settingsContext);\n  const history = useHistory();\n\n  const handleClick = (hour) => {\n    history.push(`/calendar/job-form?hour=${String(hour)}&iso-date=${formatISO}`);\n  };\n\n  return (\n    <HoursStyled>\n      {[...Array(24).keys()].map((index) => (\n        <HourStyled\n          key={index}\n          data-hour={String(index)}\n          hourHeight={hourHeight}\n          borderWidth={borderWidth}\n          className={className}\n          draggable=\"false\"\n          onClick={() => handleClick(index)}\n        />\n      ))}\n    </HoursStyled>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}