{"ast":null,"code":"'use strict';\n\nmodule.exports = function stringToParts(str) {\n  const result = [];\n  let curPropertyName = '';\n  let state = 'DEFAULT';\n\n  for (let i = 0; i < str.length; ++i) {\n    // Fall back to treating as property name rather than bracket notation if\n    // square brackets contains something other than a number.\n    if (state === 'IN_SQUARE_BRACKETS' && !/\\d/.test(str[i]) && str[i] !== ']') {\n      state = 'DEFAULT';\n      curPropertyName = result[result.length - 1] + '[' + curPropertyName;\n      result.splice(result.length - 1, 1);\n    }\n\n    if (str[i] === '[') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n\n      state = 'IN_SQUARE_BRACKETS';\n    } else if (str[i] === ']') {\n      if (state === 'IN_SQUARE_BRACKETS') {\n        state = 'IMMEDIATELY_AFTER_SQUARE_BRACKETS';\n        result.push(curPropertyName);\n        curPropertyName = '';\n      } else {\n        state = 'DEFAULT';\n        curPropertyName += str[i];\n      }\n    } else if (str[i] === '.') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n\n      state = 'DEFAULT';\n    } else {\n      curPropertyName += str[i];\n    }\n  }\n\n  if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n    result.push(curPropertyName);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mpath/lib/stringToParts.js"],"names":["module","exports","stringToParts","str","result","curPropertyName","state","i","length","test","splice","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC3C,QAAMC,MAAM,GAAG,EAAf;AAEA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAIC,KAAK,GAAG,SAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,MAAxB,EAAgC,EAAED,CAAlC,EAAqC;AACnC;AACA;AACA,QAAID,KAAK,KAAK,oBAAV,IAAkC,CAAC,KAAKG,IAAL,CAAUN,GAAG,CAACI,CAAD,CAAb,CAAnC,IAAwDJ,GAAG,CAACI,CAAD,CAAH,KAAW,GAAvE,EAA4E;AAC1ED,MAAAA,KAAK,GAAG,SAAR;AACAD,MAAAA,eAAe,GAAGD,MAAM,CAACA,MAAM,CAACI,MAAP,GAAgB,CAAjB,CAAN,GAA4B,GAA5B,GAAkCH,eAApD;AACAD,MAAAA,MAAM,CAACM,MAAP,CAAcN,MAAM,CAACI,MAAP,GAAgB,CAA9B,EAAiC,CAAjC;AACD;;AAED,QAAIL,GAAG,CAACI,CAAD,CAAH,KAAW,GAAf,EAAoB;AAClB,UAAID,KAAK,KAAK,mCAAd,EAAmD;AACjDF,QAAAA,MAAM,CAACO,IAAP,CAAYN,eAAZ;AACAA,QAAAA,eAAe,GAAG,EAAlB;AACD;;AACDC,MAAAA,KAAK,GAAG,oBAAR;AACD,KAND,MAMO,IAAIH,GAAG,CAACI,CAAD,CAAH,KAAW,GAAf,EAAoB;AACzB,UAAID,KAAK,KAAK,oBAAd,EAAoC;AAClCA,QAAAA,KAAK,GAAG,mCAAR;AACAF,QAAAA,MAAM,CAACO,IAAP,CAAYN,eAAZ;AACAA,QAAAA,eAAe,GAAG,EAAlB;AACD,OAJD,MAIO;AACLC,QAAAA,KAAK,GAAG,SAAR;AACAD,QAAAA,eAAe,IAAIF,GAAG,CAACI,CAAD,CAAtB;AACD;AACF,KATM,MASA,IAAIJ,GAAG,CAACI,CAAD,CAAH,KAAW,GAAf,EAAoB;AACzB,UAAID,KAAK,KAAK,mCAAd,EAAmD;AACjDF,QAAAA,MAAM,CAACO,IAAP,CAAYN,eAAZ;AACAA,QAAAA,eAAe,GAAG,EAAlB;AACD;;AACDC,MAAAA,KAAK,GAAG,SAAR;AACD,KANM,MAMA;AACLD,MAAAA,eAAe,IAAIF,GAAG,CAACI,CAAD,CAAtB;AACD;AACF;;AAED,MAAID,KAAK,KAAK,mCAAd,EAAmD;AACjDF,IAAAA,MAAM,CAACO,IAAP,CAAYN,eAAZ;AACD;;AAED,SAAOD,MAAP;AACD,CA7CD","sourcesContent":["'use strict';\n\nmodule.exports = function stringToParts(str) {\n  const result = [];\n\n  let curPropertyName = '';\n  let state = 'DEFAULT';\n  for (let i = 0; i < str.length; ++i) {\n    // Fall back to treating as property name rather than bracket notation if\n    // square brackets contains something other than a number.\n    if (state === 'IN_SQUARE_BRACKETS' && !/\\d/.test(str[i]) && str[i] !== ']') {\n      state = 'DEFAULT';\n      curPropertyName = result[result.length - 1] + '[' + curPropertyName;\n      result.splice(result.length - 1, 1);\n    }\n\n    if (str[i] === '[') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n      state = 'IN_SQUARE_BRACKETS';\n    } else if (str[i] === ']') {\n      if (state === 'IN_SQUARE_BRACKETS') {\n        state = 'IMMEDIATELY_AFTER_SQUARE_BRACKETS';\n        result.push(curPropertyName);\n        curPropertyName = '';\n      } else {\n        state = 'DEFAULT';\n        curPropertyName += str[i];\n      }\n    } else if (str[i] === '.') {\n      if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n        result.push(curPropertyName);\n        curPropertyName = '';\n      }\n      state = 'DEFAULT';\n    } else {\n      curPropertyName += str[i];\n    }\n  }\n\n  if (state !== 'IMMEDIATELY_AFTER_SQUARE_BRACKETS') {\n    result.push(curPropertyName);\n  }\n\n  return result;\n};"]},"metadata":{},"sourceType":"script"}