{"ast":null,"code":"'use strict';\n\nconst Decimal128Type = require('../types/decimal128');\n\nconst assert = require('assert');\n\nmodule.exports = function castDecimal128(value) {\n  if (value == null) {\n    return value;\n  }\n\n  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {\n    return Decimal128Type.fromString(value.$numberDecimal);\n  }\n\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n\n  if (typeof value === 'number') {\n    return Decimal128Type.fromString(String(value));\n  }\n\n  if (typeof value.valueOf === 'function' && typeof value.valueOf() === 'string') {\n    return Decimal128Type.fromString(value.valueOf());\n  }\n\n  assert.ok(false);\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/cast/decimal128.js"],"names":["Decimal128Type","require","assert","module","exports","castDecimal128","value","$numberDecimal","fromString","Buffer","isBuffer","String","valueOf","ok"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,qBAAD,CAA9B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC9C,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAOA,KAAP;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAK,CAACC,cAAb,KAAgC,QAAjE,EAA2E;AACzE,WAAOP,cAAc,CAACQ,UAAf,CAA0BF,KAAK,CAACC,cAAhC,CAAP;AACD;;AAED,MAAID,KAAK,YAAYN,cAArB,EAAqC;AACnC,WAAOM,KAAP;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAON,cAAc,CAACQ,UAAf,CAA0BF,KAA1B,CAAP;AACD;;AAED,MAAIG,MAAM,CAACC,QAAP,CAAgBJ,KAAhB,CAAJ,EAA4B;AAC1B,WAAO,IAAIN,cAAJ,CAAmBM,KAAnB,CAAP;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAON,cAAc,CAACQ,UAAf,CAA0BG,MAAM,CAACL,KAAD,CAAhC,CAAP;AACD;;AAED,MAAI,OAAOA,KAAK,CAACM,OAAb,KAAyB,UAAzB,IAAuC,OAAON,KAAK,CAACM,OAAN,EAAP,KAA2B,QAAtE,EAAgF;AAC9E,WAAOZ,cAAc,CAACQ,UAAf,CAA0BF,KAAK,CAACM,OAAN,EAA1B,CAAP;AACD;;AAEDV,EAAAA,MAAM,CAACW,EAAP,CAAU,KAAV;AACD,CA9BD","sourcesContent":["'use strict';\n\nconst Decimal128Type = require('../types/decimal128');\nconst assert = require('assert');\n\nmodule.exports = function castDecimal128(value) {\n  if (value == null) {\n    return value;\n  }\n\n  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {\n    return Decimal128Type.fromString(value.$numberDecimal);\n  }\n\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n\n  if (typeof value === 'number') {\n    return Decimal128Type.fromString(String(value));\n  }\n\n  if (typeof value.valueOf === 'function' && typeof value.valueOf() === 'string') {\n    return Decimal128Type.fromString(value.valueOf());\n  }\n\n  assert.ok(false);\n};"]},"metadata":{},"sourceType":"script"}