{"ast":null,"code":"const {\n  setHours,\n  setMinutes\n} = require('date-fns');\n\nfunction round(value, places) {\n  return Math.floor(value * 10 ** places) / 10 ** places;\n}\n\nfunction asDecimal(dateTime) {\n  const hours = dateTime.getHours();\n  const fractionOfHour = dateTime.getMinutes() / 60;\n  return round(hours + fractionOfHour, 2);\n}\n\nconst getTimeFromPosition = (position, height) => {\n  const asDecimal = position / height * 24;\n  const hours = Math.floor(asDecimal);\n  const minutes = (asDecimal - hours) * 60;\n  return setMinutes(setHours(new Date(), hours), minutes);\n};\n\nmodule.exports = {\n  asDecimal,\n  getTimeFromPosition\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/utilities/timeConversions.js"],"names":["setHours","setMinutes","require","round","value","places","Math","floor","asDecimal","dateTime","hours","getHours","fractionOfHour","getMinutes","getTimeFromPosition","position","height","minutes","Date","module","exports"],"mappings":"AAAA,MAAM;AAACA,EAAAA,QAAD;AAAUC,EAAAA;AAAV,IAAwBC,OAAO,CAAC,UAAD,CAArC;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqBC,MAArB,EAA4B;AACxB,SAAOC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,MAAIC,MAAvB,IAA+B,MAAIA,MAA1C;AACH;;AAED,SAASG,SAAT,CAAmBC,QAAnB,EAA4B;AACxB,QAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAT,EAAd;AACA,QAAMC,cAAc,GAAGH,QAAQ,CAACI,UAAT,KAAsB,EAA7C;AACA,SAAOV,KAAK,CAACO,KAAK,GAACE,cAAP,EAAsB,CAAtB,CAAZ;AACH;;AAED,MAAME,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9C,QAAMR,SAAS,GAAKO,QAAQ,GAAGC,MAAZ,GAAsB,EAAzC;AACA,QAAMN,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAWC,SAAX,CAAd;AACA,QAAMS,OAAO,GAAG,CAACT,SAAS,GAACE,KAAX,IAAkB,EAAlC;AACA,SAAOT,UAAU,CAACD,QAAQ,CAAC,IAAIkB,IAAJ,EAAD,EAAYR,KAAZ,CAAT,EAA4BO,OAA5B,CAAjB;AACH,CALD;;AASAE,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA,SADa;AAEbM,EAAAA;AAFa,CAAjB","sourcesContent":["const {setHours,setMinutes} = require('date-fns')\n\nfunction round(value,places){\n    return Math.floor(value * 10**places)/10**places\n}\n\nfunction asDecimal(dateTime){\n    const hours = dateTime.getHours()\n    const fractionOfHour = dateTime.getMinutes()/60\n    return round(hours+fractionOfHour,2)\n}\n\nconst getTimeFromPosition = (position, height) => {\n    const asDecimal =  (position / height) * 24\n    const hours = Math.floor(asDecimal)\n    const minutes = (asDecimal-hours)*60\n    return setMinutes(setHours(new Date(),hours),minutes)\n}\n\n\n\nmodule.exports = {\n    asDecimal,\n    getTimeFromPosition\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}