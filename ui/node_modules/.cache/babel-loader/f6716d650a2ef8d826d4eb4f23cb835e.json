{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport NewJobModal from \"../forms/NewJobModal\";\nimport DayLabels from \"../DayLabels\";\nimport Week from \"../Week\";\nimport HourTicks from \"../HourTicks\";\nimport Header from \"../Header\";\nimport settingsContext from \"../Contexts\";\nimport { fetchDays } from \"../../Model/Jobs\";\nimport React from \"react\";\nimport { fitsInWeek } from \"../../utilities/dateUtilities.js\";\nimport JobModal from \"../forms/JobModal\"; //import socketIOClient from \"socket.io-client\";\n\nimport { useWeek } from \"./reducer\";\nimport { useGapi } from \"../../useGapi/useGapi\";\nimport { incrementWeekThunk } from \"./calendarSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarStyled = styled.div`\n  margin: 30px;\n  display: grid;\n  grid-template-rows: 60px 60px ${props => String(props.hourHeight * 24) + \"px\"};\n  grid-template-columns: 60px 1fr;\n`;\n_c = CalendarStyled;\nexport default function Calendar() {\n  _s();\n\n  //const [daysOnCal, dispatch] = useWeek();\n  const [showNewJobModal, setShowNewJobModal] = React.useState(false);\n  const [displayEvent, setDisplayEvent] = React.useState(null); //const [events, setEvents] = React.useState([]);\n\n  const events = useSelector(state => state); //const [gcalEvents, setGcalEvents] = React.useState([]);\n\n  const dispatch = useDispatch(); // function handleSetInitialDate(day, month, year, hour) {\n  //   return new Date(day, month, year, hour);\n  // }\n  //TODO have a think about what you are using/nameing current day. what does that mean\n  //useGapi also returns a sign out function\n\n  const {\n    authed,\n    listEvents\n  } = useGapi();\n  const {\n    hourHeight\n  } = React.useContext(settingsContext);\n\n  const updateDisplayEvent = id => {\n    setDisplayEvent(events.filter(event => event._id === id)[0]);\n  }; // React.useEffect(() => {\n  //   fetchDays(daysOnCal.firstDay, daysOnCal.lastDay)\n  //     .then((data) => {\n  //       setEvents([...data]); //TODO have a look at what we are doing here what if there is no data\n  //     })\n  //     .catch(console.error);\n  // }, [daysOnCal]);\n  // React.useEffect(() => {\n  //   if (authed) {\n  //     listEvents(daysOnCal.firstDay, daysOnCal.lastDay) //TODO should technically be a dependancy need to wrap it in useCallback\n  //       .then(setGcalEvents);\n  //     console.log(\"aggghhhh\");\n  //   }\n  // }, [authed, daysOnCal]); //added in the listEvebts due to a warning in conslol\n\n  /*  React.useEffect(()=>{\n        const socket = socketIOClient('http://localhost:8000');\n        console.log(socket)\n         socket.on('message',(msg)=>{\n            fetchWeekContaining(firstDayOfWeek)\n                .then(data=> {\n                    setEvents(data)\n                })\n                .catch(console.error)\n        })\n    },[firstDayOfWeek])*/\n\n\n  const incrementWeek = () => {//dispatch({ type: \"INCREMENT\" });\n  };\n\n  const decrementWeek = () => {//dispatch({ type: \"DECREMENT\" });\n  };\n\n  const toggleNewJobModal = () => {\n    setShowNewJobModal(val => !val);\n  };\n\n  const closeDetailsModal = () => {\n    setDisplayEvent(null);\n  }; // const addToEvents = (event) => {\n  //   if (fitsInWeek(daysOnCal.firstDay, event.start)) {\n  //     setEvents((events) => [...events, event]);\n  //   }\n  // };\n  // const updateEvent = (id, data) => {\n  //   setEvents((events) => {\n  //     const remainder = events.filter((event) => event._id !== id);\n  //     const result = [...remainder, data];\n  //     return result;\n  //   });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CalendarStyled, {\n      hourHeight: hourHeight,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        currentDate: daysOnCal.currentDate,\n        incrementWeek: incrementWeek,\n        decrementWeek: decrementWeek,\n        handleShowModal: toggleNewJobModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DayLabels, {\n        days: daysOnCal.days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HourTicks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Week, {\n        events: events,\n        gcalEvents: gcalEvents,\n        days: daysOnCal.days,\n        updateDisplayEvent: updateDisplayEvent,\n        updateEvent: updateEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), showNewJobModal && /*#__PURE__*/_jsxDEV(NewJobModal, {\n      addToEvents: addToEvents,\n      toggleModal: toggleNewJobModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), displayEvent && /*#__PURE__*/_jsxDEV(JobModal, {\n      displayEvent: displayEvent,\n      close: closeDetailsModal,\n      updateEvent: updateEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendar, \"wutsMFAO8XHMTAUvgoXEhuRAScU=\", false, function () {\n  return [useSelector, useDispatch, useGapi];\n});\n\n_c2 = Calendar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CalendarStyled\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Calendar/Calendar.js"],"names":["styled","NewJobModal","DayLabels","Week","HourTicks","Header","settingsContext","fetchDays","React","fitsInWeek","JobModal","useWeek","useGapi","incrementWeekThunk","useDispatch","useSelector","CalendarStyled","div","props","String","hourHeight","Calendar","showNewJobModal","setShowNewJobModal","useState","displayEvent","setDisplayEvent","events","state","dispatch","authed","listEvents","useContext","updateDisplayEvent","id","filter","event","_id","incrementWeek","decrementWeek","toggleNewJobModal","val","closeDetailsModal","daysOnCal","currentDate","days","gcalEvents","updateEvent","addToEvents"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport NewJobModal from \"../forms/NewJobModal\";\n\nimport DayLabels from \"../DayLabels\";\nimport Week from \"../Week\";\nimport HourTicks from \"../HourTicks\";\n\nimport Header from \"../Header\";\nimport settingsContext from \"../Contexts\";\n\nimport { fetchDays } from \"../../Model/Jobs\";\n\nimport React from \"react\";\nimport { fitsInWeek } from \"../../utilities/dateUtilities.js\";\n\nimport JobModal from \"../forms/JobModal\";\n\n//import socketIOClient from \"socket.io-client\";\n\nimport { useWeek } from \"./reducer\";\nimport { useGapi } from \"../../useGapi/useGapi\";\n\nimport { incrementWeekThunk } from \"./calendarSlice\";\nimport { useDispatch,useSelector } from \"react-redux\";\n\nconst CalendarStyled = styled.div`\n  margin: 30px;\n  display: grid;\n  grid-template-rows: 60px 60px ${(props) =>\n      String(props.hourHeight * 24) + \"px\"};\n  grid-template-columns: 60px 1fr;\n`;\n\nexport default function Calendar() {\n  //const [daysOnCal, dispatch] = useWeek();\n  const [showNewJobModal, setShowNewJobModal] = React.useState(false);\n  const [displayEvent, setDisplayEvent] = React.useState(null);\n  //const [events, setEvents] = React.useState([]);\n  const events = useSelector(state => state)\n  //const [gcalEvents, setGcalEvents] = React.useState([]);\n\n  const dispatch = useDispatch();\n\n  // function handleSetInitialDate(day, month, year, hour) {\n  //   return new Date(day, month, year, hour);\n  // }\n\n  //TODO have a think about what you are using/nameing current day. what does that mean\n\n  //useGapi also returns a sign out function\n  const { authed, listEvents } = useGapi();\n\n  const { hourHeight } = React.useContext(settingsContext);\n\n  const updateDisplayEvent = (id) => {\n    setDisplayEvent(events.filter((event) => event._id === id)[0]);\n  };\n\n  // React.useEffect(() => {\n  //   fetchDays(daysOnCal.firstDay, daysOnCal.lastDay)\n  //     .then((data) => {\n  //       setEvents([...data]); //TODO have a look at what we are doing here what if there is no data\n  //     })\n  //     .catch(console.error);\n  // }, [daysOnCal]);\n\n  // React.useEffect(() => {\n  //   if (authed) {\n  //     listEvents(daysOnCal.firstDay, daysOnCal.lastDay) //TODO should technically be a dependancy need to wrap it in useCallback\n  //       .then(setGcalEvents);\n\n  //     console.log(\"aggghhhh\");\n  //   }\n  // }, [authed, daysOnCal]); //added in the listEvebts due to a warning in conslol\n\n  /*  React.useEffect(()=>{\n        const socket = socketIOClient('http://localhost:8000');\n        console.log(socket)\n\n        socket.on('message',(msg)=>{\n            fetchWeekContaining(firstDayOfWeek)\n                .then(data=> {\n                    setEvents(data)\n                })\n                .catch(console.error)\n        })\n    },[firstDayOfWeek])*/\n\n  const incrementWeek = () => {\n    //dispatch({ type: \"INCREMENT\" });\n  };\n\n  const decrementWeek = () => {\n    //dispatch({ type: \"DECREMENT\" });\n  };\n\n  const toggleNewJobModal = () => {\n    setShowNewJobModal((val) => !val);\n  };\n\n  const closeDetailsModal = () => {\n    setDisplayEvent(null);\n  };\n\n  // const addToEvents = (event) => {\n  //   if (fitsInWeek(daysOnCal.firstDay, event.start)) {\n  //     setEvents((events) => [...events, event]);\n  //   }\n  // };\n\n  // const updateEvent = (id, data) => {\n  //   setEvents((events) => {\n  //     const remainder = events.filter((event) => event._id !== id);\n  //     const result = [...remainder, data];\n  //     return result;\n  //   });\n  // };\n\n  return (\n    <React.Fragment>\n      <CalendarStyled hourHeight={hourHeight}>\n        <div></div>\n        <Header\n          currentDate={daysOnCal.currentDate}\n          incrementWeek={incrementWeek}\n          decrementWeek={decrementWeek}\n          handleShowModal={toggleNewJobModal}\n        />\n        <div></div>\n        <DayLabels days={daysOnCal.days} />\n        <HourTicks />\n        <Week\n          events={events}\n          gcalEvents={gcalEvents}\n          days={daysOnCal.days}\n          updateDisplayEvent={updateDisplayEvent}\n          updateEvent={updateEvent}\n        />\n      </CalendarStyled>\n      {showNewJobModal && (\n        <NewJobModal\n          addToEvents={addToEvents}\n          toggleModal={toggleNewJobModal}\n        />\n      )}\n      {displayEvent && (\n        <JobModal\n          displayEvent={displayEvent}\n          close={closeDetailsModal}\n          updateEvent={updateEvent}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}