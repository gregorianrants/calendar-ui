{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { Grid, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography } from \"@material-ui/core\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport cuid from \"cuid\";\nimport produce from \"immer\";\nimport { PromiseProvider } from \"mongoose\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  inline: {\n    display: \"flex\"\n  }\n}));\nexport function ListBuilder({\n  name,\n  value = [],\n  onChange,\n  label,\n  errors,\n  itemName\n}) {\n  _s();\n\n  //TODO should maybe be thinking about a shared constructor for this\n  //we are making an object like this on api as well\n  console.log(errors);\n\n  function wrap(value) {\n    return {\n      _id: cuid(),\n      value\n    };\n  }\n\n  const addAddress = (value, address) => {\n    const updatedValue = produce(value, draft => {\n      console.log(draft);\n      draft.push(wrap(address));\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name\n      }\n    };\n    onChange(e);\n  };\n\n  const removeAddress = (value, id) => {\n    const updatedValue = produce(value, draft => {\n      return draft.filter(el => el._id !== id);\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name\n      }\n    };\n    onChange(e);\n  };\n\n  const [input, setInput] = React.useState(\"\");\n  const classes = useStyles();\n\n  function getError(index) {\n    if (errors && errors[index]) {\n      return errors[index].value;\n    }\n\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      children: value && value.map((a, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(HouseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText //className={classes.inline}\n        , {\n          primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              display: \"inline\",\n              children: a.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), getError(i) ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"error\",\n              children: `  - ${getError(i)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: [\" \", \"- \", itemName, i + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true),\n          disableTypography: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            color: \"primary\",\n            onClick: e => {\n              e.preventDefault();\n              removeAddress(value, a._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, a._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: label,\n        value: input,\n        fullWidth: true,\n        onChange: e => {\n          setInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          addAddress(value, input);\n          setInput(\"\");\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListBuilder, \"uMFfnOEJ+o9kMbaI5GHrHK2+Ci0=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBuilder\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js"],"names":["React","List","ListItem","Grid","ListItemAvatar","ListItemSecondaryAction","ListItemText","TextField","Typography","HouseIcon","CloseIcon","createStyles","makeStyles","cuid","produce","PromiseProvider","useStyles","inline","display","ListBuilder","name","value","onChange","label","errors","itemName","console","log","wrap","_id","addAddress","address","updatedValue","draft","push","e","target","removeAddress","id","filter","el","input","setInput","useState","classes","getError","index","map","a","i","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Grid,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport cuid from \"cuid\";\nimport produce from \"immer\";\nimport { PromiseProvider } from \"mongoose\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    inline: {\n      display: \"flex\",\n    },\n  })\n);\n\nexport function ListBuilder({\n  name,\n  value = [],\n  onChange,\n  label,\n  errors,\n  itemName,\n}) {\n  //TODO should maybe be thinking about a shared constructor for this\n  //we are making an object like this on api as well\n\n  console.log(errors);\n  function wrap(value) {\n    return {\n      _id: cuid(),\n      value,\n    };\n  }\n\n  const addAddress = (value, address) => {\n    const updatedValue = produce(value, (draft) => {\n      console.log(draft);\n      draft.push(wrap(address));\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name,\n      },\n    };\n    onChange(e);\n  };\n\n  const removeAddress = (value, id) => {\n    const updatedValue = produce(value, (draft) => {\n      return draft.filter((el) => el._id !== id);\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name,\n      },\n    };\n    onChange(e);\n  };\n\n  const [input, setInput] = React.useState(\"\");\n\n  const classes = useStyles();\n\n  function getError(index) {\n    if (errors && errors[index]) {\n      return errors[index].value;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <List dense>\n        {value &&\n          value.map((a, i) => (\n            <ListItem key={a._id}>\n              <ListItemAvatar>\n                <HouseIcon></HouseIcon>\n              </ListItemAvatar>\n              <ListItemText\n                //className={classes.inline}\n                primary={\n                  <>\n                    <Typography variant={\"body1\"} display=\"inline\">\n                      {a.value}\n                    </Typography>\n                    {getError(i) ? (\n                      <Typography variant=\"caption\" color=\"error\">\n                        {`  - ${getError(i)}`}\n                      </Typography>\n                    ) : (\n                      <Typography variant=\"caption\">\n                        {\" \"}\n                        - {itemName}\n                        {i + 1}\n                      </Typography>\n                    )}\n                  </>\n                }\n                disableTypography\n              />\n              <ListItemSecondaryAction>\n                <CloseIcon\n                  color=\"primary\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    removeAddress(value, a._id);\n                  }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n      </List>\n      <Grid item>\n        <TextField\n          label={label}\n          value={input}\n          fullWidth\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            addAddress(value, input);\n            setInput(\"\");\n          }}\n        >\n          +\n        </button>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}