{"ast":null,"code":"import _slicedToArray from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Modal from\"./Modal\";import{Card,CardContent,CardHeader,IconButton}from\"@material-ui/core\";import EditIcon from\"@material-ui/icons/Edit\";import CloseIcon from\"@material-ui/icons/Close\";import React from\"react\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import PersonIcon from\"@material-ui/icons/Person\";import PhoneIcon from\"@material-ui/icons/Phone\";import EmailIcon from\"@material-ui/icons/Email\";import AccessibilityNewIcon from\"@material-ui/icons/AccessibilityNew\";import ListItemIcon from\"@material-ui/core/ListItemIcon\";import ListItemText from\"@material-ui/core/ListItemText\";import Grid from\"@material-ui/core/Grid\";import{makeStyles}from\"@material-ui/core/styles\";import JobForm from\"./JobForm\";import{PersonOutline}from\"@material-ui/icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{title:{fontSize:14,fontWeight:\"bold\",fontVariant:\"small-caps\",color:\"#324191\"},group:{marginBottom:\"0.5em\"},content:{paddingTop:0},li:{listStyle:\"none\",padding:0,margin:0},container:{marginTop:20,backgroundColor:\"#F3F3FB\"},list:{padding:0,\"& > li\":{padding:0}},pricing:{marginTop:theme.spacing(2),//TODO use row class for top margin\ntextAlign:\"center\"},items:{whiteSpace:\"pre-line\"},row:{marginTop:theme.spacing(2)}};});export default function JobModal(_ref){var displayEvent=_ref.displayEvent,close=_ref.close,updateEvent=_ref.updateEvent;var classes=useStyles();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),editMode=_React$useState2[0],setEditMode=_React$useState2[1];var start=displayEvent.start,end=displayEvent.end,customer=displayEvent.customer,charges=displayEvent.charges,operatives=displayEvent.operatives,items=displayEvent.items,addresses=displayEvent.addresses;//const { customer } = displayEvent;\n//TODO: map over operatives\nreturn/*#__PURE__*/_jsx(Modal,{children:editMode?/*#__PURE__*/_jsx(Card,{style:{width:600,backgroundColor:\"#F3F3FB\"},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(JobForm,{title:\"Edit Job\",initialValues:displayEvent,updateEvent:updateEvent,close:close})})}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Card,{style:{width:1200,backgroundColor:\"#F3F3FB\"},children:[/*#__PURE__*/_jsx(CardHeader,{title:customer.name,action:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){setEditMode(true);},children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:close,children:/*#__PURE__*/_jsx(CloseIcon,{})})]})}),/*#__PURE__*/_jsx(CardHeader,{}),/*#__PURE__*/_jsx(CardContent,{className:classes.content,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsxs(Card,{className:classes.card,children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Customer Details\"}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(List,{className:classes.list,children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(PersonIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:customer.name,secondary:\"name\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(PhoneIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:customer.mobile,secondary:\"mobile\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(EmailIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:customer.email,secondary:\"email\"})]})]})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,className:classes.pricing,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardHeader,{title:charges.hourlyRate,subheader:\"per hour\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardHeader,{title:charges.fuelCharge,subheader:\"fuel charge\"})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardHeader,{title:charges.travelTime,subheader:\"travel time\"})})})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Items\"}),/*#__PURE__*/_jsx(CardContent,{className:classes.items,children:items})]})})]})})]})})})/* editMode\n        ?\n        <EditJobModal data={displayEvent} addToEvents={addToEvents}/>\n            :\n        <Modal\n        open={true}\n        >\n            <Card style={{width: 300}}>\n                <CardHeader\n                    title={summary}\n                    action={\n                        <>\n                            <IconButton>\n                                <EditIcon onClick={()=>{setEditMode(true)}}/>\n                            </IconButton>\n                            <IconButton>\n                                <CloseIcon onClick={close}/>\n                            </IconButton>\n                        </>\n\n                    }\n                />\n                <CardContent className={classes.content}>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            location\n                        </Typography>\n                        <Typography variant='body2'>\n                            {location}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            start\n                        </Typography>\n                        <Typography variant='body1'>\n                            {start.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            end\n                        </Typography>\n                        <Typography variant='body1'>\n                            {end.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            description\n                        </Typography>\n                        <Typography variant='body1'>\n                            {description}\n                        </Typography>\n                    </div>\n\n\n\n\n                    <Typography>\n\n                    </Typography>\n\n\n                </CardContent>\n            </Card>\n        </Modal>*/;}","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/JobModal.js"],"names":["Modal","Card","CardContent","CardHeader","IconButton","EditIcon","CloseIcon","React","List","ListItem","PersonIcon","PhoneIcon","EmailIcon","AccessibilityNewIcon","ListItemIcon","ListItemText","Grid","makeStyles","JobForm","PersonOutline","useStyles","theme","title","fontSize","fontWeight","fontVariant","color","group","marginBottom","content","paddingTop","li","listStyle","padding","margin","container","marginTop","backgroundColor","list","pricing","spacing","textAlign","items","whiteSpace","row","JobModal","displayEvent","close","updateEvent","classes","useState","editMode","setEditMode","start","end","customer","charges","operatives","addresses","width","name","card","mobile","email","hourlyRate","fuelCharge","travelTime"],"mappings":"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uBACE,KAAC,IAAD,wBACE,KAAC,UAAD,EACE,KAAK,CAAET,OAAO,CAACU,UADjB,CAEE,SAAS,CAAE,aAFb,EADF,EADF,EAjBF,GAnCF,GADF,cA+DE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACE,MAAC,IAAD,yBACE,KAAC,UAAD,EAAY,KAAK,CAAE,OAAnB,EADF,cAEE,KAAC,WAAD,EAAa,SAAS,CAAEjB,OAAO,CAACP,KAAhC,UAAwCA,KAAxC,EAFF,GADF,EA/DF,GADF,EAnBF,GADF,EAbJ,EAyIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBA5ME,CA8MD","sourcesContent":["import Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport JobForm from \"./JobForm\";\nimport { PersonOutline } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontVariant: \"small-caps\",\n    color: \"#324191\",\n  },\n  group: {\n    marginBottom: \"0.5em\",\n  },\n  content: {\n    paddingTop: 0,\n  },\n  li: {\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n  },\n  container: {\n    marginTop: 20,\n    backgroundColor: \"#F3F3FB\",\n  },\n  list: {\n    padding: 0,\n    \"& > li\": {\n      padding: 0,\n    },\n  },\n  pricing: {\n    marginTop: theme.spacing(2), //TODO use row class for top margin\n    textAlign: \"center\",\n  },\n  items: {\n    whiteSpace: \"pre-line\",\n  },\n  row: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function JobModal({ displayEvent, close, updateEvent }) {\n  const classes = useStyles();\n  const [editMode, setEditMode] = React.useState(false);\n\n  const { start, end, customer, charges, operatives, items, addresses } =\n    displayEvent;\n\n  //const { customer } = displayEvent;\n\n  //TODO: map over operatives\n  return (\n    <Modal>\n      {editMode ? (\n        <Card style={{ width: 600, backgroundColor: \"#F3F3FB\" }}>\n          <CardContent>\n            <JobForm\n              title=\"Edit Job\"\n              initialValues={displayEvent}\n              updateEvent={updateEvent}\n              close={close}\n            />\n          </CardContent>\n        </Card>\n      ) : (\n        <>\n          <Card style={{ width: 1200, backgroundColor: \"#F3F3FB\" }}>\n            <CardHeader\n              title={customer.name}\n              action={\n                <>\n                  <IconButton\n                    onClick={() => {\n                      setEditMode(true);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton onClick={close}>\n                    <CloseIcon />\n                  </IconButton>\n                </>\n              }\n            />\n            <CardHeader />\n            <CardContent className={classes.content}>\n              <Grid container spacing={3}>\n                <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Customer Details\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PersonIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.name}\n                            secondary=\"name\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PhoneIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.mobile}\n                            secondary=\"mobile\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <EmailIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.email}\n                            secondary=\"email\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                  <Grid container spacing={1} className={classes.pricing}>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.hourlyRate}\n                          subheader={\"per hour\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.fuelCharge}\n                          subheader={\"fuel charge\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.travelTime}\n                          subheader={\"travel time\"}\n                        />\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <Card>\n                    <CardHeader title={\"Items\"} />\n                    <CardContent className={classes.items}>{items}</CardContent>\n                  </Card>\n                </Grid>\n                {/* <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Removal Operatives\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[0].value}\n                            secondary=\"first man\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[1].value}\n                            secondary=\"second man\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                </Grid> */}\n              </Grid>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </Modal>\n\n    /* editMode\n        ?\n        <EditJobModal data={displayEvent} addToEvents={addToEvents}/>\n            :\n        <Modal\n        open={true}\n        >\n            <Card style={{width: 300}}>\n                <CardHeader\n                    title={summary}\n                    action={\n                        <>\n                            <IconButton>\n                                <EditIcon onClick={()=>{setEditMode(true)}}/>\n                            </IconButton>\n                            <IconButton>\n                                <CloseIcon onClick={close}/>\n                            </IconButton>\n                        </>\n\n                    }\n                />\n                <CardContent className={classes.content}>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            location\n                        </Typography>\n                        <Typography variant='body2'>\n                            {location}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            start\n                        </Typography>\n                        <Typography variant='body1'>\n                            {start.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            end\n                        </Typography>\n                        <Typography variant='body1'>\n                            {end.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            description\n                        </Typography>\n                        <Typography variant='body1'>\n                            {description}\n                        </Typography>\n                    </div>\n\n\n\n\n                    <Typography>\n\n                    </Typography>\n\n\n                </CardContent>\n            </Card>\n        </Modal>*/\n  );\n}\n"]},"metadata":{},"sourceType":"module"}