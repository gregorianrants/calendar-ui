{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\n/*\nfunction reducer(state,action){\n    if(action.type==='down'){\n        return{\n            ...state,\n            down: true,\n            listening: true\n        }\n    }\n    else if(action.type==='mouseUp'){\n        return{\n            ...state,\n            down: false\n        }\n    }\n    else if(action.type==='stopListening'){\n        return{\n            ...state,\n            listening: false\n        }\n    }\n}\n\n\nexport default function useDrag(mouseMoveF,mouseUpF){\n    const [mouse,dispatch]=React.useReducer(reducer,{\n        down: false,\n        listening: false,\n        up: true,\n    })\n\n    const totalTranslationY = React.useRef(0)\n    const initialTop = React.useRef(0)\n    const height = React.useRef(0)\n\n    const handleMouseMove = React.useCallback((e) => {\n        totalTranslationY.current += e.movementY\n        mouseMoveF(e.movementY,totalTranslationY.current,initialTop.current,height.current)\n    },[mouseMoveF])//added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    const handleMouseUp = React.useCallback((e)=>{\n        console.log(document.elementFromPoint(e.clientX, e.clientY))\n        dispatch({type: 'mouseUp'})\n        mouseUpF(totalTranslationY.current)\n    },[mouseUpF])//added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    React.useEffect(()=>{\n        if(mouse.down) {\n            window.addEventListener('mousemove', handleMouseMove)\n            window.addEventListener('mouseup',handleMouseUp)\n        }\n        if(!mouse.down & mouse.listening){\n            window.removeEventListener('mousemove',handleMouseMove)\n            window.removeEventListener('mouseup',handleMouseUp)\n            dispatch({type: 'stopListening'})\n        }\n\n        return ()=>{\n            if(mouse.listening){\n                window.removeEventListener('mousemove',handleMouseMove)\n                window.removeEventListener('mouseup',handleMouseUp)\n            }\n        }\n    },[mouse,handleMouseMove,handleMouseUp])//added handleMOuseMove handleMouseUp dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    return (top,initialHeight)=>{\n        dispatch({type: 'down'})\n        totalTranslationY.current = 0\n        initialTop.current = top\n        height.current = initialHeight\n        console.log('height' , height.current)\n    }\n}\n\n*/\n\n/*function reducer(state,action){\n    if(action.type==='down'){\n        return{\n            ...state,\n            down: true,\n            listening: true\n        }\n    }\n    else if(action.type==='mouseUp'){\n        return{\n            ...state,\n            down: false\n        }\n    }\n    else if(action.type==='stopListening'){\n        return{\n            ...state,\n            listening: false\n        }\n    }\n}*/\n\nexport default function useDrag(onDragStart, dragElementF, dragBottomEdgeF, mouseUpF, overEdge) {\n  _s();\n\n  const [drag, setDrag] = React.useState(false);\n  const totalTranslationY = React.useRef(0);\n  const handleDragElement = React.useCallback(e => {\n    totalTranslationY.current += e.movementY;\n    dragElementF(totalTranslationY.current, e.movementY);\n  }, [dragElementF]); //added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n  const handleDragBottomEdge = React.useCallback(e => {\n    totalTranslationY.current += e.movementY;\n    dragBottomEdgeF(totalTranslationY.current, e.movementY);\n  }, [dragBottomEdgeF]);\n  const handleMouseUp = React.useCallback(e => {\n    setDrag(false);\n    mouseUpF(totalTranslationY.current);\n  }, [mouseUpF]); //added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n  React.useEffect(() => {\n    if (drag === 'body') {\n      window.addEventListener('mousemove', handleDragElement);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n\n    if (drag === 'edge') {\n      window.addEventListener('mousemove', handleDragBottomEdge);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', handleDragElement);\n      window.removeEventListener('mousemove', handleDragBottomEdge);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [drag, handleDragElement, handleDragBottomEdge, handleMouseUp]); //added handleMOuseMove handleMouseUp dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n  return e => {\n    e.preventDefault();\n    setDrag(overEdge ? 'edge' : 'body');\n    onDragStart();\n    totalTranslationY.current = 0;\n  };\n}\n\n_s(useDrag, \"2jdPNOb6+8o+HHQ7/KX8DXm2dVg=\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/useDrag.js"],"names":["React","useDrag","onDragStart","dragElementF","dragBottomEdgeF","mouseUpF","overEdge","drag","setDrag","useState","totalTranslationY","useRef","handleDragElement","useCallback","e","current","movementY","handleDragBottomEdge","handleMouseUp","useEffect","window","addEventListener","removeEventListener","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe,SAASC,OAAT,CAAiBC,WAAjB,EAA6BC,YAA7B,EAA0CC,eAA1C,EAA0DC,QAA1D,EAAmEC,QAAnE,EAA4E;AAAA;;AACvF,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeR,KAAK,CAACS,QAAN,CAAe,KAAf,CAArB;AACA,QAAMC,iBAAiB,GAAGV,KAAK,CAACW,MAAN,CAAa,CAAb,CAA1B;AAGA,QAAMC,iBAAiB,GAAGZ,KAAK,CAACa,WAAN,CAAmBC,CAAD,IAAO;AAC/CJ,IAAAA,iBAAiB,CAACK,OAAlB,IAA6BD,CAAC,CAACE,SAA/B;AACAb,IAAAA,YAAY,CAACO,iBAAiB,CAACK,OAAnB,EAA2BD,CAAC,CAACE,SAA7B,CAAZ;AACH,GAHyB,EAGxB,CAACb,YAAD,CAHwB,CAA1B,CALuF,CAQtE;;AAEjB,QAAMc,oBAAoB,GAAGjB,KAAK,CAACa,WAAN,CAAmBC,CAAD,IAAO;AAClDJ,IAAAA,iBAAiB,CAACK,OAAlB,IAA6BD,CAAC,CAACE,SAA/B;AACAZ,IAAAA,eAAe,CAACM,iBAAiB,CAACK,OAAnB,EAA2BD,CAAC,CAACE,SAA7B,CAAf;AACH,GAH4B,EAG3B,CAACZ,eAAD,CAH2B,CAA7B;AAKA,QAAMc,aAAa,GAAGlB,KAAK,CAACa,WAAN,CAAmBC,CAAD,IAAK;AAC1CN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACCH,IAAAA,QAAQ,CAACK,iBAAiB,CAACK,OAAnB,CAAR;AACH,GAHqB,EAGpB,CAACV,QAAD,CAHoB,CAAtB,CAfuF,CAkB1E;;AAEbL,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAI;AAChB,QAAGZ,IAAI,KAAG,MAAV,EAAkB;AACda,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCT,iBAArC;AACAQ,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAkCH,aAAlC;AACH;;AAED,QAAGX,IAAI,KAAG,MAAV,EAAkB;AACda,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCJ,oBAArC;AACAG,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAkCH,aAAlC;AACH;;AAED,WAAO,MAAI;AACHE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAuCV,iBAAvC;AACAQ,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAuCL,oBAAvC;AACAG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAqCJ,aAArC;AACP,KAJD;AAKH,GAhBD,EAgBE,CAACX,IAAD,EAAMK,iBAAN,EAAwBK,oBAAxB,EAA6CC,aAA7C,CAhBF,EApBuF,CAoCzB;;AAE9D,SAAQJ,CAAD,IAAK;AACRA,IAAAA,CAAC,CAACS,cAAF;AACAf,IAAAA,OAAO,CAACF,QAAQ,GAAG,MAAH,GAAY,MAArB,CAAP;AACAJ,IAAAA,WAAW;AACXQ,IAAAA,iBAAiB,CAACK,OAAlB,GAA4B,CAA5B;AACH,GALD;AAMH;;GA5CuBd,O","sourcesContent":["import React from \"react\";\n\n\n/*\nfunction reducer(state,action){\n    if(action.type==='down'){\n        return{\n            ...state,\n            down: true,\n            listening: true\n        }\n    }\n    else if(action.type==='mouseUp'){\n        return{\n            ...state,\n            down: false\n        }\n    }\n    else if(action.type==='stopListening'){\n        return{\n            ...state,\n            listening: false\n        }\n    }\n}\n\n\nexport default function useDrag(mouseMoveF,mouseUpF){\n    const [mouse,dispatch]=React.useReducer(reducer,{\n        down: false,\n        listening: false,\n        up: true,\n    })\n\n    const totalTranslationY = React.useRef(0)\n    const initialTop = React.useRef(0)\n    const height = React.useRef(0)\n\n    const handleMouseMove = React.useCallback((e) => {\n        totalTranslationY.current += e.movementY\n        mouseMoveF(e.movementY,totalTranslationY.current,initialTop.current,height.current)\n    },[mouseMoveF])//added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    const handleMouseUp = React.useCallback((e)=>{\n        console.log(document.elementFromPoint(e.clientX, e.clientY))\n        dispatch({type: 'mouseUp'})\n        mouseUpF(totalTranslationY.current)\n    },[mouseUpF])//added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    React.useEffect(()=>{\n        if(mouse.down) {\n            window.addEventListener('mousemove', handleMouseMove)\n            window.addEventListener('mouseup',handleMouseUp)\n        }\n        if(!mouse.down & mouse.listening){\n            window.removeEventListener('mousemove',handleMouseMove)\n            window.removeEventListener('mouseup',handleMouseUp)\n            dispatch({type: 'stopListening'})\n        }\n\n        return ()=>{\n            if(mouse.listening){\n                window.removeEventListener('mousemove',handleMouseMove)\n                window.removeEventListener('mouseup',handleMouseUp)\n            }\n        }\n    },[mouse,handleMouseMove,handleMouseUp])//added handleMOuseMove handleMouseUp dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    return (top,initialHeight)=>{\n        dispatch({type: 'down'})\n        totalTranslationY.current = 0\n        initialTop.current = top\n        height.current = initialHeight\n        console.log('height' , height.current)\n    }\n}\n\n*/\n\n\n/*function reducer(state,action){\n    if(action.type==='down'){\n        return{\n            ...state,\n            down: true,\n            listening: true\n        }\n    }\n    else if(action.type==='mouseUp'){\n        return{\n            ...state,\n            down: false\n        }\n    }\n    else if(action.type==='stopListening'){\n        return{\n            ...state,\n            listening: false\n        }\n    }\n}*/\n\n\nexport default function useDrag(onDragStart,dragElementF,dragBottomEdgeF,mouseUpF,overEdge){\n    const [drag,setDrag]=React.useState(false)\n    const totalTranslationY = React.useRef(0)\n\n\n    const handleDragElement = React.useCallback((e) => {\n        totalTranslationY.current += e.movementY\n        dragElementF(totalTranslationY.current,e.movementY)\n    },[dragElementF])//added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    const handleDragBottomEdge = React.useCallback((e) => {\n        totalTranslationY.current += e.movementY\n        dragBottomEdgeF(totalTranslationY.current,e.movementY)\n    },[dragBottomEdgeF])\n\n    const handleMouseUp = React.useCallback((e)=>{\n       setDrag(false)\n        mouseUpF(totalTranslationY.current)\n    },[mouseUpF])//added this dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    React.useEffect(()=>{\n        if(drag==='body') {\n            window.addEventListener('mousemove', handleDragElement)\n            window.addEventListener('mouseup',handleMouseUp)\n        }\n\n        if(drag==='edge') {\n            window.addEventListener('mousemove', handleDragBottomEdge)\n            window.addEventListener('mouseup',handleMouseUp)\n        }\n\n        return ()=>{\n                window.removeEventListener('mousemove',handleDragElement)\n                window.removeEventListener('mousemove',handleDragBottomEdge)\n                window.removeEventListener('mouseup',handleMouseUp)\n        }\n    },[drag,handleDragElement,handleDragBottomEdge,handleMouseUp])//added handleMOuseMove handleMouseUp dependancy as suggested by error message, havent givn it much thought might be wort a look if get a bug\n\n    return (e)=>{\n        e.preventDefault()\n        setDrag(overEdge ? 'edge' : 'body')\n        onDragStart()\n        totalTranslationY.current = 0\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}