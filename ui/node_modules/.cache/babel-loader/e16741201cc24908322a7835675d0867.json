{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport mongoose from \"mongoose\";\nimport styled from \"styled-components\";\nimport { Formik, Field } from \"formik\";\nimport { cloneDeep } from \"lodash\";\nimport { ListBuilder } from \"./AddressInput\";\nimport { TextField, Grid, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\n\nimport { editJobThunk } from \"../Calendar/calendarSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Typography } from \"@material-ui/core\";\nimport { jobSchema } from \"api/model/job\"; //TODO change name of buildSchema\n\nimport { processMongooseError } from \"./../../utilities/processMongooseError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction dateTimeFromInput(date, time) {\n  const hours = time.getHours();\n  const minutes = time.getMinutes();\n  let res = new Date(date);\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  return res;\n}\n\nconst FlexRow = styled.div`\n  display: flex;\n`;\n_c = FlexRow;\nconst useStyles = makeStyles({\n  flexItem: {\n    flex: \"1 1 0\",\n    \"&:not(:last-child)\": {\n      marginRight: \"10px\"\n    }\n  },\n  inputRow: {\n    marginBottom: \"10px\"\n  },\n  textField: {\n    \"& textarea\": {\n      whiteSpace: \"pre-line\"\n    }\n  }\n});\nexport default function JobForm({\n  close,\n  toggleModal\n}) {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  let job = useSelector(state => state.calendar.events.find(event => event._id == id));\n  const initialValues = id ? job : {};\n\n  const handleSubmit = data => {\n    dispatch(editJobThunk(data));\n  };\n\n  const validator = async values => {\n    const doc = new mongoose.Document(values, jobSchema);\n    const validationResult = await doc.validateSync();\n    console.log(validationResult);\n    const processed = processMongooseError(validationResult);\n    console.log(processed);\n    return processed;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: cloneDeep(initialValues || {}),\n        onSubmit: handleSubmit,\n        validate: validator,\n        children: props => {\n          var _props$errors, _props$errors$custome, _props$errors2, _props$errors2$custom, _props$errors3, _props$errors3$custom, _props$errors4, _props$errors4$custom, _props$errors5, _props$errors5$custom, _props$errors6, _props$errors6$custom, _props$errors7, _props$errors7$charge, _props$errors8, _props$errors8$charge, _props$errors9, _props$errors9$charge, _props$errors10, _props$errors10$charg, _props$errors11, _props$errors11$charg, _props$errors12, _props$errors12$charg, _props$errors13, _props$errors14, _props$errors15, _props$errors16;\n\n          return (\n            /*#__PURE__*/\n            //<Typography variant=\"h4\">Create Job</Typography>\n            _jsxDEV(\"form\", {\n              onSubmit: props.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                className: classes.inputRow,\n                name: \"customer.name\",\n                label: \"name\",\n                error: (_props$errors = props.errors) === null || _props$errors === void 0 ? void 0 : (_props$errors$custome = _props$errors.customer) === null || _props$errors$custome === void 0 ? void 0 : _props$errors$custome.name,\n                helperText: (_props$errors2 = props.errors) === null || _props$errors2 === void 0 ? void 0 : (_props$errors2$custom = _props$errors2.customer) === null || _props$errors2$custom === void 0 ? void 0 : _props$errors2$custom.name,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                className: classes.inputRow,\n                error: (_props$errors3 = props.errors) === null || _props$errors3 === void 0 ? void 0 : (_props$errors3$custom = _props$errors3.customer) === null || _props$errors3$custom === void 0 ? void 0 : _props$errors3$custom.mobile,\n                helperText: (_props$errors4 = props.errors) === null || _props$errors4 === void 0 ? void 0 : (_props$errors4$custom = _props$errors4.customer) === null || _props$errors4$custom === void 0 ? void 0 : _props$errors4$custom.mobile,\n                name: \"customer.mobile\",\n                label: \"mobile\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                className: classes.inputRow,\n                name: \"customer.email\",\n                label: \"email\",\n                error: (_props$errors5 = props.errors) === null || _props$errors5 === void 0 ? void 0 : (_props$errors5$custom = _props$errors5.customer) === null || _props$errors5$custom === void 0 ? void 0 : _props$errors5$custom.email,\n                helperText: (_props$errors6 = props.errors) === null || _props$errors6 === void 0 ? void 0 : (_props$errors6$custom = _props$errors6.customer) === null || _props$errors6$custom === void 0 ? void 0 : _props$errors6$custom.email,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FlexRow, {\n                className: classes.inputRow,\n                children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                  utils: DateFnsUtils,\n                  children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                    className: classes.flexItem,\n                    value: new Date(props.values.start),\n                    onChange: date => {\n                      props.setFieldValue(\"start\", date, true);\n                    },\n                    label: \"start time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                  utils: DateFnsUtils,\n                  children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                    className: classes.flexItem,\n                    value: props.values.end,\n                    onChange: date => {\n                      props.setFieldValue(\"end\", date, true);\n                    },\n                    label: \"end time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                  utils: DateFnsUtils,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    className: classes.flexItem,\n                    value: props.values.start,\n                    onChange: date => {\n                      props.setFieldValue(\"start\", dateTimeFromInput(date, props.values.start), true);\n                      props.setFieldValue(\"end\", dateTimeFromInput(date, props.values.end), true);\n                      console.log(\"hello\");\n                    },\n                    label: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FlexRow, {\n                className: classes.inputRow,\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  className: classes.flexItem,\n                  as: TextField,\n                  name: \"charges.hourlyRate\",\n                  label: \"hourly rate\",\n                  error: (_props$errors7 = props.errors) === null || _props$errors7 === void 0 ? void 0 : (_props$errors7$charge = _props$errors7.charges) === null || _props$errors7$charge === void 0 ? void 0 : _props$errors7$charge.hourlyRate,\n                  helperText: (_props$errors8 = props.errors) === null || _props$errors8 === void 0 ? void 0 : (_props$errors8$charge = _props$errors8.charges) === null || _props$errors8$charge === void 0 ? void 0 : _props$errors8$charge.hourlyRate,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: classes.flexItem,\n                  as: TextField,\n                  name: \"charges.fuelCharge\",\n                  label: \"fuelCharge\",\n                  error: (_props$errors9 = props.errors) === null || _props$errors9 === void 0 ? void 0 : (_props$errors9$charge = _props$errors9.charges) === null || _props$errors9$charge === void 0 ? void 0 : _props$errors9$charge.fuelCharge,\n                  helperText: (_props$errors10 = props.errors) === null || _props$errors10 === void 0 ? void 0 : (_props$errors10$charg = _props$errors10.charges) === null || _props$errors10$charg === void 0 ? void 0 : _props$errors10$charg.fuelCharge,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: classes.flexItem,\n                  as: TextField,\n                  name: \"charges.travelTime\",\n                  label: \"travelTime\",\n                  error: (_props$errors11 = props.errors) === null || _props$errors11 === void 0 ? void 0 : (_props$errors11$charg = _props$errors11.charges) === null || _props$errors11$charg === void 0 ? void 0 : _props$errors11$charg.travelTime,\n                  helperText: (_props$errors12 = props.errors) === null || _props$errors12 === void 0 ? void 0 : (_props$errors12$charg = _props$errors12.charges) === null || _props$errors12$charg === void 0 ? void 0 : _props$errors12$charg.travelTime,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: TextField,\n                className: classes.inputRow,\n                name: \"items\",\n                label: \"items\",\n                error: (_props$errors13 = props.errors) === null || _props$errors13 === void 0 ? void 0 : _props$errors13.items,\n                helperText: (_props$errors14 = props.errors) === null || _props$errors14 === void 0 ? void 0 : _props$errors14.items,\n                fullWidth: true,\n                multiline: true,\n                rows: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ListBuilder, {\n                value: props.values.addresses,\n                onChange: props.handleChange,\n                label: \"add address\",\n                name: \"addresses\",\n                itemName: \"address\",\n                errors: (_props$errors15 = props.errors) === null || _props$errors15 === void 0 ? void 0 : _props$errors15.addresses\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ListBuilder, {\n                value: props.values.operatives,\n                onChange: props.handleChange,\n                label: \"add operative\",\n                name: \"operatives\",\n                itemName: \"operative\",\n                errors: (_props$errors16 = props.errors) === null || _props$errors16 === void 0 ? void 0 : _props$errors16.operatives\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\" // onClick={(e) => {\n                //    e.preventDefault();\n                //    props.handleSubmit(values); //TODO should i be cloning object before apssing it about\n                //  }}\n                ,\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                children: \"save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)\n          );\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobForm, \"UThtNsY3PSCsnwF7WgOw80gJKwU=\", false, function () {\n  return [useStyles, useDispatch, useParams, useSelector];\n});\n\n_c2 = JobForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FlexRow\");\n$RefreshReg$(_c2, \"JobForm\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js"],"names":["React","mongoose","styled","Formik","Field","cloneDeep","ListBuilder","TextField","Grid","Button","makeStyles","DateFnsUtils","editJobThunk","useDispatch","useSelector","useParams","Modal","Card","CardContent","CardHeader","IconButton","DatePicker","TimePicker","MuiPickersUtilsProvider","Typography","jobSchema","processMongooseError","dateTimeFromInput","date","time","hours","getHours","minutes","getMinutes","res","Date","setHours","setMinutes","FlexRow","div","useStyles","flexItem","flex","marginRight","inputRow","marginBottom","textField","whiteSpace","JobForm","close","toggleModal","classes","dispatch","id","job","state","calendar","events","find","event","_id","initialValues","handleSubmit","data","validator","values","doc","Document","validationResult","validateSync","console","log","processed","props","errors","customer","name","mobile","email","start","setFieldValue","end","charges","hourlyRate","fuelCharge","travelTime","items","addresses","handleChange","operatives"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB,C,CAA8C;;AAE9C,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,UAAxC,QAA0D,mBAA1D;AAEA,SACEC,UADF,EAEEC,UAFF,EAGEC,uBAHF,QAIO,sBAJP;AAMA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,SAAT,QAA0B,eAA1B,C,CAA2C;;AAC3C,SAASC,oBAAT,QAAqC,wCAArC;;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;AACrC,QAAMC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAd;AACA,QAAMC,OAAO,GAAGH,IAAI,CAACI,UAAL,EAAhB;AACA,MAAIC,GAAG,GAAG,IAAIC,IAAJ,CAASP,IAAT,CAAV;AACAM,EAAAA,GAAG,CAACE,QAAJ,CAAaN,KAAb;AACAI,EAAAA,GAAG,CAACG,UAAJ,CAAeL,OAAf;AACA,SAAOE,GAAP;AACD;;AAED,MAAMI,OAAO,GAAGpC,MAAM,CAACqC,GAAI;AAC3B;AACA,CAFA;KAAMD,O;AAIN,MAAME,SAAS,GAAG9B,UAAU,CAAC;AAC3B+B,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,OADE;AAER,0BAAsB;AACpBC,MAAAA,WAAW,EAAE;AADO;AAFd,GADiB;AAO3BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE;AADN,GAPiB;AAU3BC,EAAAA,SAAS,EAAE;AACT,kBAAc;AACZC,MAAAA,UAAU,EAAE;AADA;AADL;AAVgB,CAAD,CAA5B;AAiBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAjB,EAAyC;AAAA;;AACtD,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,QAAQ,GAAGvC,WAAW,EAA5B;AAEA,QAAM;AAAEwC,IAAAA;AAAF,MAAStC,SAAS,EAAxB;AACA,MAAIuC,GAAG,GAAGxC,WAAW,CAAEyC,KAAD,IACpBA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBC,IAAtB,CAA4BC,KAAD,IAAWA,KAAK,CAACC,GAAN,IAAaP,EAAnD,CADmB,CAArB;AAIA,QAAMQ,aAAa,GAAGR,EAAE,GAAGC,GAAH,GAAS,EAAjC;;AAEA,QAAMQ,YAAY,GAAIC,IAAD,IAAU;AAC7BX,IAAAA,QAAQ,CAACxC,YAAY,CAACmD,IAAD,CAAb,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAOC,MAAP,IAAkB;AAClC,UAAMC,GAAG,GAAG,IAAIjE,QAAQ,CAACkE,QAAb,CAAsBF,MAAtB,EAA8BxC,SAA9B,CAAZ;AAEA,UAAM2C,gBAAgB,GAAG,MAAMF,GAAG,CAACG,YAAJ,EAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AAEA,UAAMI,SAAS,GAAG9C,oBAAoB,CAAC0C,gBAAD,CAAtC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AAEA,WAAOA,SAAP;AACD,GAVD;;AAYA,sBACE,QAAC,KAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AACE,QAAA,aAAa,EAAEnE,SAAS,CAACwD,aAAa,IAAI,EAAlB,CAD1B;AAEE,QAAA,QAAQ,EAAEC,YAFZ;AAGE,QAAA,QAAQ,EAAEE,SAHZ;AAAA,kBAKIS,KAAD;AAAA;;AAAA;AAAA;AACC;AACA;AAAM,cAAA,QAAQ,EAAEA,KAAK,CAACX,YAAtB;AAAA,sCACE,QAAC,KAAD;AACE,gBAAA,EAAE,EAAEvD,SADN;AAEE,gBAAA,SAAS,EAAE4C,OAAO,CAACP,QAFrB;AAGE,gBAAA,IAAI,EAAC,eAHP;AAIE,gBAAA,KAAK,EAAC,MAJR;AAKE,gBAAA,KAAK,mBAAE6B,KAAK,CAACC,MAAR,2EAAE,cAAcC,QAAhB,0DAAE,sBAAwBC,IALjC;AAME,gBAAA,UAAU,oBAAEH,KAAK,CAACC,MAAR,4EAAE,eAAcC,QAAhB,0DAAE,sBAAwBC,IANtC;AAOE,gBAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,KAAD;AACE,gBAAA,EAAE,EAAErE,SADN;AAEE,gBAAA,SAAS,EAAE4C,OAAO,CAACP,QAFrB;AAGE,gBAAA,KAAK,oBAAE6B,KAAK,CAACC,MAAR,4EAAE,eAAcC,QAAhB,0DAAE,sBAAwBE,MAHjC;AAIE,gBAAA,UAAU,oBAAEJ,KAAK,CAACC,MAAR,4EAAE,eAAcC,QAAhB,0DAAE,sBAAwBE,MAJtC;AAKE,gBAAA,IAAI,EAAC,iBALP;AAME,gBAAA,KAAK,EAAC,QANR;AAOE,gBAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,sBAVF,eAmBE,QAAC,KAAD;AACE,gBAAA,EAAE,EAAEtE,SADN;AAEE,gBAAA,SAAS,EAAE4C,OAAO,CAACP,QAFrB;AAGE,gBAAA,IAAI,EAAC,gBAHP;AAIE,gBAAA,KAAK,EAAC,OAJR;AAKE,gBAAA,KAAK,oBAAE6B,KAAK,CAACC,MAAR,4EAAE,eAAcC,QAAhB,0DAAE,sBAAwBG,KALjC;AAME,gBAAA,UAAU,oBAAEL,KAAK,CAACC,MAAR,4EAAE,eAAcC,QAAhB,0DAAE,sBAAwBG,KANtC;AAOE,gBAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,sBAnBF,eA4BE,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAE3B,OAAO,CAACP,QAA5B;AAAA,wCACE,QAAC,uBAAD;AAAyB,kBAAA,KAAK,EAAEjC,YAAhC;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAEwC,OAAO,CAACV,QADrB;AAEE,oBAAA,KAAK,EAAE,IAAIN,IAAJ,CAASsC,KAAK,CAACR,MAAN,CAAac,KAAtB,CAFT;AAGE,oBAAA,QAAQ,EAAGnD,IAAD,IAAU;AAClB6C,sBAAAA,KAAK,CAACO,aAAN,CAAoB,OAApB,EAA6BpD,IAA7B,EAAmC,IAAnC;AACD,qBALH;AAME,oBAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAWE,QAAC,uBAAD;AAAyB,kBAAA,KAAK,EAAEjB,YAAhC;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAEwC,OAAO,CAACV,QADrB;AAEE,oBAAA,KAAK,EAAEgC,KAAK,CAACR,MAAN,CAAagB,GAFtB;AAGE,oBAAA,QAAQ,EAAGrD,IAAD,IAAU;AAClB6C,sBAAAA,KAAK,CAACO,aAAN,CAAoB,KAApB,EAA2BpD,IAA3B,EAAiC,IAAjC;AACD,qBALH;AAME,oBAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAXF,eAqBE,QAAC,uBAAD;AAAyB,kBAAA,KAAK,EAAEjB,YAAhC;AAAA,yCACE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAEwC,OAAO,CAACV,QADrB;AAEE,oBAAA,KAAK,EAAEgC,KAAK,CAACR,MAAN,CAAac,KAFtB;AAGE,oBAAA,QAAQ,EAAGnD,IAAD,IAAU;AAClB6C,sBAAAA,KAAK,CAACO,aAAN,CACE,OADF,EAEErD,iBAAiB,CAACC,IAAD,EAAO6C,KAAK,CAACR,MAAN,CAAac,KAApB,CAFnB,EAGE,IAHF;AAKAN,sBAAAA,KAAK,CAACO,aAAN,CACE,KADF,EAEErD,iBAAiB,CAACC,IAAD,EAAO6C,KAAK,CAACR,MAAN,CAAagB,GAApB,CAFnB,EAGE,IAHF;AAKAX,sBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,qBAfH;AAgBE,oBAAA,KAAK,EAAC;AAhBR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5BF,eAuEE,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAEpB,OAAO,CAACP,QAA5B;AAAA,wCACE,QAAC,KAAD;AACE,kBAAA,SAAS,EAAEO,OAAO,CAACV,QADrB;AAEE,kBAAA,EAAE,EAAElC,SAFN;AAGE,kBAAA,IAAI,EAAC,oBAHP;AAIE,kBAAA,KAAK,EAAC,aAJR;AAKE,kBAAA,KAAK,oBAAEkE,KAAK,CAACC,MAAR,4EAAE,eAAcQ,OAAhB,0DAAE,sBAAuBC,UALhC;AAME,kBAAA,UAAU,oBAAEV,KAAK,CAACC,MAAR,4EAAE,eAAcQ,OAAhB,0DAAE,sBAAuBC,UANrC;AAOE,kBAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,wBADF,eAUE,QAAC,KAAD;AACE,kBAAA,SAAS,EAAEhC,OAAO,CAACV,QADrB;AAEE,kBAAA,EAAE,EAAElC,SAFN;AAGE,kBAAA,IAAI,EAAC,oBAHP;AAIE,kBAAA,KAAK,EAAC,YAJR;AAKE,kBAAA,KAAK,oBAAEkE,KAAK,CAACC,MAAR,4EAAE,eAAcQ,OAAhB,0DAAE,sBAAuBE,UALhC;AAME,kBAAA,UAAU,qBAAEX,KAAK,CAACC,MAAR,6EAAE,gBAAcQ,OAAhB,0DAAE,sBAAuBE,UANrC;AAOE,kBAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,wBAVF,eAmBE,QAAC,KAAD;AACE,kBAAA,SAAS,EAAEjC,OAAO,CAACV,QADrB;AAEE,kBAAA,EAAE,EAAElC,SAFN;AAGE,kBAAA,IAAI,EAAC,oBAHP;AAIE,kBAAA,KAAK,EAAC,YAJR;AAKE,kBAAA,KAAK,qBAAEkE,KAAK,CAACC,MAAR,6EAAE,gBAAcQ,OAAhB,0DAAE,sBAAuBG,UALhC;AAME,kBAAA,UAAU,qBAAEZ,KAAK,CAACC,MAAR,6EAAE,gBAAcQ,OAAhB,0DAAE,sBAAuBG,UANrC;AAOE,kBAAA,SAAS;AAPX;AAAA;AAAA;AAAA;AAAA,wBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvEF,eAqGE,QAAC,KAAD;AACE,gBAAA,EAAE,EAAE9E,SADN;AAEE,gBAAA,SAAS,EAAE4C,OAAO,CAACP,QAFrB;AAGE,gBAAA,IAAI,EAAC,OAHP;AAIE,gBAAA,KAAK,EAAC,OAJR;AAKE,gBAAA,KAAK,qBAAE6B,KAAK,CAACC,MAAR,oDAAE,gBAAcY,KALvB;AAME,gBAAA,UAAU,qBAAEb,KAAK,CAACC,MAAR,oDAAE,gBAAcY,KAN5B;AAOE,gBAAA,SAAS,MAPX;AAQE,gBAAA,SAAS,MARX;AASE,gBAAA,IAAI,EAAE;AATR;AAAA;AAAA;AAAA;AAAA,sBArGF,eAgHE,QAAC,WAAD;AACE,gBAAA,KAAK,EAAEb,KAAK,CAACR,MAAN,CAAasB,SADtB;AAEE,gBAAA,QAAQ,EAAEd,KAAK,CAACe,YAFlB;AAGE,gBAAA,KAAK,EAAC,aAHR;AAIE,gBAAA,IAAI,EAAC,WAJP;AAKE,gBAAA,QAAQ,EAAC,SALX;AAME,gBAAA,MAAM,qBAAEf,KAAK,CAACC,MAAR,oDAAE,gBAAca;AANxB;AAAA;AAAA;AAAA;AAAA,sBAhHF,eAwHE,QAAC,WAAD;AACE,gBAAA,KAAK,EAAEd,KAAK,CAACR,MAAN,CAAawB,UADtB;AAEE,gBAAA,QAAQ,EAAEhB,KAAK,CAACe,YAFlB;AAGE,gBAAA,KAAK,EAAC,eAHR;AAIE,gBAAA,IAAI,EAAC,YAJP;AAKE,gBAAA,QAAQ,EAAC,WALX;AAME,gBAAA,MAAM,qBAAEf,KAAK,CAACC,MAAR,oDAAE,gBAAce;AANxB;AAAA;AAAA;AAAA;AAAA,sBAxHF,eAiIE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,QADP,CAEE;AACA;AACA;AACA;AALF;AAME,gBAAA,OAAO,EAAC,WANV;AAOE,gBAAA,KAAK,EAAC,SAPR;AAQE,gBAAA,SAAS,MARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AALH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+JD;;GA1LuBzC,O;UACNR,S,EACC3B,W,EAEFE,S,EACLD,W;;;MALYkC,O","sourcesContent":["import React from \"react\";\nimport mongoose from \"mongoose\";\nimport styled from \"styled-components\";\nimport { Formik, Field } from \"formik\";\nimport { cloneDeep } from \"lodash\";\n\nimport { ListBuilder } from \"./AddressInput\";\n\nimport { TextField, Grid, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\"; // choose your lib\n\nimport { editJobThunk } from \"../Calendar/calendarSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\n\nimport {\n  DatePicker,\n  TimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nimport { Typography } from \"@material-ui/core\";\n\nimport { jobSchema } from \"api/model/job\"; //TODO change name of buildSchema\nimport { processMongooseError } from \"./../../utilities/processMongooseError\";\n\nfunction dateTimeFromInput(date, time) {\n  const hours = time.getHours();\n  const minutes = time.getMinutes();\n  let res = new Date(date);\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  return res;\n}\n\nconst FlexRow = styled.div`\n  display: flex;\n`;\n\nconst useStyles = makeStyles({\n  flexItem: {\n    flex: \"1 1 0\",\n    \"&:not(:last-child)\": {\n      marginRight: \"10px\",\n    },\n  },\n  inputRow: {\n    marginBottom: \"10px\",\n  },\n  textField: {\n    \"& textarea\": {\n      whiteSpace: \"pre-line\",\n    },\n  },\n});\n\nexport default function JobForm({ close, toggleModal }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n  let job = useSelector((state) =>\n    state.calendar.events.find((event) => event._id == id)\n  );\n\n  const initialValues = id ? job : {};\n\n  const handleSubmit = (data) => {\n    dispatch(editJobThunk(data));\n  };\n\n  const validator = async (values) => {\n    const doc = new mongoose.Document(values, jobSchema);\n\n    const validationResult = await doc.validateSync();\n    console.log(validationResult);\n\n    const processed = processMongooseError(validationResult);\n    console.log(processed);\n\n    return processed;\n  };\n\n  return (\n    <Modal>\n      <Card>\n        <CardHeader /> \n\n        <Formik\n          initialValues={cloneDeep(initialValues || {})}\n          onSubmit={handleSubmit}\n          validate={validator}\n        >\n          {(props) => (\n            //<Typography variant=\"h4\">Create Job</Typography>\n            <form onSubmit={props.handleSubmit}>\n              <Field\n                as={TextField}\n                className={classes.inputRow}\n                name=\"customer.name\"\n                label=\"name\"\n                error={props.errors?.customer?.name}\n                helperText={props.errors?.customer?.name}\n                fullWidth\n              />\n              <Field\n                as={TextField}\n                className={classes.inputRow}\n                error={props.errors?.customer?.mobile}\n                helperText={props.errors?.customer?.mobile}\n                name=\"customer.mobile\"\n                label=\"mobile\"\n                fullWidth\n              />\n              <Field\n                as={TextField}\n                className={classes.inputRow}\n                name=\"customer.email\"\n                label=\"email\"\n                error={props.errors?.customer?.email}\n                helperText={props.errors?.customer?.email}\n                fullWidth\n              />\n              <FlexRow className={classes.inputRow}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <TimePicker\n                    className={classes.flexItem}\n                    value={new Date(props.values.start)}\n                    onChange={(date) => {\n                      props.setFieldValue(\"start\", date, true);\n                    }}\n                    label=\"start time\"\n                  />\n                </MuiPickersUtilsProvider>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <TimePicker\n                    className={classes.flexItem}\n                    value={props.values.end}\n                    onChange={(date) => {\n                      props.setFieldValue(\"end\", date, true);\n                    }}\n                    label=\"end time\"\n                  />\n                </MuiPickersUtilsProvider>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DatePicker\n                    className={classes.flexItem}\n                    value={props.values.start}\n                    onChange={(date) => {\n                      props.setFieldValue(\n                        \"start\",\n                        dateTimeFromInput(date, props.values.start),\n                        true\n                      );\n                      props.setFieldValue(\n                        \"end\",\n                        dateTimeFromInput(date, props.values.end),\n                        true\n                      );\n                      console.log(\"hello\");\n                    }}\n                    label=\"date\"\n                  />\n                </MuiPickersUtilsProvider>\n              </FlexRow>\n\n              <FlexRow className={classes.inputRow}>\n                <Field\n                  className={classes.flexItem}\n                  as={TextField}\n                  name=\"charges.hourlyRate\"\n                  label=\"hourly rate\"\n                  error={props.errors?.charges?.hourlyRate}\n                  helperText={props.errors?.charges?.hourlyRate}\n                  fullWidth\n                />\n                <Field\n                  className={classes.flexItem}\n                  as={TextField}\n                  name=\"charges.fuelCharge\"\n                  label=\"fuelCharge\"\n                  error={props.errors?.charges?.fuelCharge}\n                  helperText={props.errors?.charges?.fuelCharge}\n                  fullWidth\n                />\n                <Field\n                  className={classes.flexItem}\n                  as={TextField}\n                  name=\"charges.travelTime\"\n                  label=\"travelTime\"\n                  error={props.errors?.charges?.travelTime}\n                  helperText={props.errors?.charges?.travelTime}\n                  fullWidth\n                />\n              </FlexRow>\n\n              <Field\n                as={TextField}\n                className={classes.inputRow}\n                name=\"items\"\n                label=\"items\"\n                error={props.errors?.items}\n                helperText={props.errors?.items}\n                fullWidth\n                multiline\n                rows={5}\n              />\n              <ListBuilder\n                value={props.values.addresses}\n                onChange={props.handleChange}\n                label=\"add address\"\n                name=\"addresses\"\n                itemName=\"address\"\n                errors={props.errors?.addresses}\n              />\n              <ListBuilder\n                value={props.values.operatives}\n                onChange={props.handleChange}\n                label=\"add operative\"\n                name=\"operatives\"\n                itemName=\"operative\"\n                errors={props.errors?.operatives}\n              />\n\n              <Button\n                type=\"submit\"\n                // onClick={(e) => {\n                //    e.preventDefault();\n                //    props.handleSubmit(values); //TODO should i be cloning object before apssing it about\n                //  }}\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n              >\n                save\n              </Button>\n            </form>\n          )}\n        </Formik>\n      </Card>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}