{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { weekContaining, setTimeDayStart, setTimeDayEnd } from \"../../utilities/dateUtilities\";\nimport { addDays } from \"date-fns\";\nimport model from \"../../Model/Jobs\";\nimport { cloneDeep } from \"lodash-es\";\nexport function getWeek(date, increment = 0) {\n  const currentDate = addDays(date, increment * 7);\n  const days = weekContaining(currentDate);\n  const firstDay = setTimeDayStart(new Date(days[0])); //TODO\n\n  const lastDay = setTimeDayEnd(new Date(days[days.length - 1])); //TODO\n\n  return {\n    currentDate,\n    days,\n    firstDay,\n    lastDay\n  };\n}\nconst initialState = { ...getWeek(new Date()),\n  events: []\n};\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      state.events = action.payload;\n    },\n\n    incrementWeek(state, action) {\n      return { ...getWeek(state.currentDate, 1),\n        events: []\n      };\n    },\n\n    decrementWeek(state) {\n      return { ...getWeek(state.currentDate, -1),\n        events: []\n      };\n    },\n\n    editJob(state, action) {\n      return [...state.events.filter(event => event._id != action.payload._id), cloneDeep(action.payload)];\n    }\n\n  }\n});\nconst {\n  actions\n} = calendarSlice;\nexport const fetchData = (dispatch, getState) => {\n  const state = getState();\n  console.log(state.calendar.firstDay);\n  model.fetchDays(state.calendar.firstDay.toString(), state.calendar.lastDay.toString()).then(data => {\n    dispatch(actions.dataLoaded([...data])); //TODO have a look at what we are doing here what if there is no data\n  }).catch(console.error);\n};\nexport const incrementWeekThunk = (dispatch, getState) => {\n  dispatch(actions.incrementWeek());\n  dispatch(fetchData);\n};\nexport const decrementWeekThunk = (dispatch, getState) => {\n  dispatch(actions.decrementWeek());\n  dispatch(fetchData);\n};\nexport const editJobThunk = data => (dispatch, getState) => {\n  const {\n    _id\n  } = data;\n  editJob({\n    _id: _id,\n    data: data\n  }).then(response => {\n    if (response.status === \"success\") {\n      dispatch();\n    } else if (response.status === \"fail\" && response.name === \"validationError\") {\n      console.log(\"i need validation\");\n    }\n  }).catch(console.error);\n};\nexport default calendarSlice.reducer;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Calendar/calendarSlice.js"],"names":["createSlice","weekContaining","setTimeDayStart","setTimeDayEnd","addDays","model","cloneDeep","getWeek","date","increment","currentDate","days","firstDay","Date","lastDay","length","initialState","events","calendarSlice","name","reducers","dataLoaded","state","action","payload","incrementWeek","decrementWeek","editJob","filter","event","_id","actions","fetchData","dispatch","getState","console","log","calendar","fetchDays","toString","then","data","catch","error","incrementWeekThunk","decrementWeekThunk","editJobThunk","response","status","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  weekContaining,\n  setTimeDayStart,\n  setTimeDayEnd,\n} from \"../../utilities/dateUtilities\";\nimport { addDays } from \"date-fns\";\nimport model from \"../../Model/Jobs\";\nimport { cloneDeep } from \"lodash-es\";\n\nexport function getWeek(date, increment = 0) {\n  const currentDate = addDays(date, increment * 7);\n  const days = weekContaining(currentDate);\n  const firstDay = setTimeDayStart(new Date(days[0])); //TODO\n  const lastDay = setTimeDayEnd(new Date(days[days.length - 1])); //TODO\n  return {\n    currentDate,\n    days,\n    firstDay,\n    lastDay,\n  };\n}\n\nconst initialState = {\n  ...getWeek(new Date()),\n  events: [],\n};\n\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      state.events = action.payload;\n    },\n    incrementWeek(state, action) {\n      return {\n        ...getWeek(state.currentDate, 1),\n        events: [],\n      };\n    },\n    decrementWeek(state) {\n      return {\n        ...getWeek(state.currentDate, -1),\n        events: [],\n      };\n    },\n    editJob(state, action) {\n      return [...state.events\n        .filter((event) => event._id != action.payload._id),cloneDeep(action.payload)]\n      }\n  },\n});\n\nconst { actions } = calendarSlice;\n\nexport const fetchData = (dispatch, getState) => {\n  const state = getState();\n  console.log(state.calendar.firstDay);\n  model\n    .fetchDays(\n      state.calendar.firstDay.toString(),\n      state.calendar.lastDay.toString()\n    )\n    .then((data) => {\n      dispatch(actions.dataLoaded([...data])); //TODO have a look at what we are doing here what if there is no data\n    })\n    .catch(console.error);\n};\n\nexport const incrementWeekThunk = (dispatch, getState) => {\n  dispatch(actions.incrementWeek());\n  dispatch(fetchData);\n};\n\nexport const decrementWeekThunk = (dispatch, getState) => {\n  dispatch(actions.decrementWeek());\n  dispatch(fetchData);\n};\n\nexport const editJobThunk = (data) => (dispatch, getState) => {\n  const { _id } = data;\n  editJob({ _id: _id, data: data })\n    .then((response) => {\n      if (response.status === \"success\") {\n        dispatch()\n      } else if (\n        response.status === \"fail\" &&\n        response.name === \"validationError\"\n      ) {\n        console.log(\"i need validation\");\n      }\n    })\n    .catch(console.error);\n};\n\nexport default calendarSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}