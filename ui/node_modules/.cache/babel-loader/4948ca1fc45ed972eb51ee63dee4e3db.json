{"ast":null,"code":"'use strict';\n\nconst Document = require('../document');\n\nconst immediate = require('../helpers/immediate');\n\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\n\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\n\nconst util = require('util');\n\nconst utils = require('../utils');\n\nmodule.exports = Subdocument;\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    const parentOptions = {\n      isNew: parent.isNew,\n      defaults: 'defaults' in parent.$__ ? parent.$__.defaults : true\n    };\n    options = Object.assign({}, parentOptions, options);\n  }\n\n  if (options != null && options.path != null) {\n    this.$basePath = options.path;\n  }\n\n  Document.call(this, value, fields, skipId, options);\n  delete this.$__.priorDoc;\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\nObject.defineProperty(Subdocument.prototype, '$isSingleNested', {\n  configurable: false,\n  writable: false,\n  value: true\n});\n/*!\n * ignore\n */\n\nSubdocument.prototype.toBSON = function () {\n  return this.toObject(internalToObjectOptions);\n};\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\n\nSubdocument.prototype.save = function (options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    utils.warn('mongoose: calling `save()` on a subdoc does **not** save ' + 'the document to MongoDB, it only runs save middleware. ' + 'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' + 'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n/*!\n * Given a path relative to this document, return the path relative\n * to the top-level document.\n */\n\n\nSubdocument.prototype.$__fullPath = function (path) {\n  if (!this.$__.fullPath) {\n    this.ownerDocument();\n  }\n\n  return path ? this.$__.fullPath + '.' + path : this.$__.fullPath;\n};\n/*!\n * Given a path relative to this document, return the path relative\n * to the top-level document.\n */\n\n\nSubdocument.prototype.$__pathRelativeToParent = function (p) {\n  if (p == null) {\n    return this.$basePath;\n  }\n\n  return [this.$basePath, p].join('.');\n};\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\n\nSubdocument.prototype.$__save = function (fn) {\n  return immediate(() => fn(null, this));\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.$isValid = function (path) {\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n\n  if (parent != null && fullPath != null) {\n    return parent.$isValid(fullPath);\n  }\n\n  return Document.prototype.$isValid.call(this, path);\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.markModified = function (path) {\n  Document.prototype.markModified.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n\n  if (parent == null || fullPath == null) {\n    return;\n  }\n\n  const myPath = this.$__pathRelativeToParent().replace(/\\.$/, '');\n\n  if (parent.isDirectModified(myPath) || this.isNew) {\n    return;\n  }\n\n  this.$__parent.markModified(fullPath, this);\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.isModified = function (paths, modifiedPaths) {\n  const parent = this.$parent();\n\n  if (parent != null) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = Array.isArray(paths) ? paths : paths.split(' ');\n      paths = paths.map(p => this.$__pathRelativeToParent(p)).filter(p => p != null);\n    } else if (!paths) {\n      paths = this.$__pathRelativeToParent();\n    }\n\n    return parent.$isModified(paths, modifiedPaths);\n  }\n\n  return Document.prototype.isModified.call(this, paths, modifiedPaths);\n};\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\n\nSubdocument.prototype.$markValid = function (path) {\n  Document.prototype.$markValid.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n\n  if (parent != null && fullPath != null) {\n    parent.$markValid(fullPath);\n  }\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.invalidate = function (path, err, val) {\n  Document.prototype.invalidate.call(this, path, err, val);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n\n  if (parent != null && fullPath != null) {\n    parent.invalidate(fullPath, err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError' || fullPath == null) {\n    throw err;\n  }\n\n  return this.ownerDocument().$__.validationError;\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.$ignore = function (path) {\n  Document.prototype.$ignore.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n\n  if (parent != null && fullPath != null) {\n    parent.$ignore(fullPath);\n  }\n};\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\n\nSubdocument.prototype.ownerDocument = function () {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this; // eslint-disable-line consistent-this\n\n  const paths = [];\n  const seenDocs = new Set([parent]);\n\n  while (true) {\n    if (typeof parent.$__pathRelativeToParent !== 'function') {\n      break;\n    }\n\n    paths.unshift(parent.$__pathRelativeToParent(void 0, true));\n\n    const _parent = parent.$parent();\n\n    if (_parent == null) {\n      break;\n    }\n\n    parent = _parent;\n\n    if (seenDocs.has(parent)) {\n      throw new Error('Infinite subdocument loop: subdoc with _id ' + parent._id + ' is a parent of itself');\n    }\n\n    seenDocs.add(parent);\n  }\n\n  this.$__.fullPath = paths.join('.');\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\n\nSubdocument.prototype.parent = function () {\n  return this.$__parent;\n};\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\n\nSubdocument.prototype.$parent = Subdocument.prototype.parent;\n/*!\n * no-op for hooks\n */\n\nSubdocument.prototype.$__remove = function (cb) {\n  if (cb == null) {\n    return;\n  }\n\n  return cb(null, this);\n};\n\nSubdocument.prototype.$__removeFromParent = function () {\n  this.$__parent.set(this.$basePath, null);\n};\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\n\nSubdocument.prototype.remove = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n\n  registerRemoveListener(this); // If removing entire doc, no need to remove subdoc\n\n  if (!options || !options.noop) {\n    this.$__removeFromParent();\n  }\n\n  return this.$__remove(callback);\n};\n/*!\n * ignore\n */\n\n\nSubdocument.prototype.populate = function () {\n  throw new Error('Mongoose does not support calling populate() on nested ' + 'docs. Instead of `doc.nested.populate(\"path\")`, use ' + '`doc.populate(\"nested.path\")`');\n};\n/**\n * Helper for console.log\n *\n * @api public\n */\n\n\nSubdocument.prototype.inspect = function () {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    flattenDecimals: false\n  });\n};\n\nif (util.inspect.custom) {\n  /*!\n  * Avoid Node deprecation warning DEP0079\n  */\n  Subdocument.prototype[util.inspect.custom] = Subdocument.prototype.inspect;\n}\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.$removeListener('save', emitRemove);\n    owner.$removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.$on('save', emitRemove);\n  owner.$on('remove', emitRemove);\n}","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/types/subdocument.js"],"names":["Document","require","immediate","internalToObjectOptions","promiseOrCallback","util","utils","module","exports","Subdocument","value","fields","parent","skipId","options","parentOptions","isNew","defaults","$__","Object","assign","path","$basePath","call","priorDoc","prototype","create","defineProperty","configurable","writable","toBSON","toObject","save","fn","suppressWarning","warn","cb","$__save","$__fullPath","fullPath","ownerDocument","$__pathRelativeToParent","p","join","$isValid","$parent","markModified","myPath","replace","isDirectModified","$__parent","isModified","paths","modifiedPaths","Array","isArray","split","map","filter","$isModified","$markValid","invalidate","err","val","kind","name","validationError","$ignore","seenDocs","Set","unshift","_parent","has","Error","_id","add","$__remove","$__removeFromParent","set","remove","callback","registerRemoveListener","noop","populate","inspect","transform","virtuals","flattenDecimals","custom","sub","owner","emitRemove","$removeListener","emit","constructor","$on"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Document = require('../document');\nconst immediate = require('../helpers/immediate');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst promiseOrCallback = require('../helpers/promiseOrCallback');\nconst util = require('util');\nconst utils = require('../utils');\n\nmodule.exports = Subdocument;\n\n/**\n * Subdocument constructor.\n *\n * @inherits Document\n * @api private\n */\n\nfunction Subdocument(value, fields, parent, skipId, options) {\n  if (parent != null) {\n    // If setting a nested path, should copy isNew from parent re: gh-7048\n    const parentOptions = { isNew: parent.isNew, defaults: 'defaults' in parent.$__ ? parent.$__.defaults : true };\n    options = Object.assign({}, parentOptions, options);\n  }\n  if (options != null && options.path != null) {\n    this.$basePath = options.path;\n  }\n  Document.call(this, value, fields, skipId, options);\n\n  delete this.$__.priorDoc;\n}\n\nSubdocument.prototype = Object.create(Document.prototype);\n\nObject.defineProperty(Subdocument.prototype, '$isSingleNested', {\n  configurable: false,\n  writable: false,\n  value: true\n});\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.toBSON = function() {\n  return this.toObject(internalToObjectOptions);\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nSubdocument.prototype.save = function(options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n  }\n  options = options || {};\n\n  if (!options.suppressWarning) {\n    utils.warn('mongoose: calling `save()` on a subdoc does **not** save ' +\n      'the document to MongoDB, it only runs save middleware. ' +\n      'Use `subdoc.save({ suppressWarning: true })` to hide this warning ' +\n      'if you\\'re sure this behavior is right for your app.');\n  }\n\n  return promiseOrCallback(fn, cb => {\n    this.$__save(cb);\n  });\n};\n\n/*!\n * Given a path relative to this document, return the path relative\n * to the top-level document.\n */\n\nSubdocument.prototype.$__fullPath = function(path) {\n  if (!this.$__.fullPath) {\n    this.ownerDocument();\n  }\n\n  return path ?\n    this.$__.fullPath + '.' + path :\n    this.$__.fullPath;\n};\n\n/*!\n * Given a path relative to this document, return the path relative\n * to the top-level document.\n */\n\nSubdocument.prototype.$__pathRelativeToParent = function(p) {\n  if (p == null) {\n    return this.$basePath;\n  }\n  return [this.$basePath, p].join('.');\n};\n\n/**\n * Used as a stub for middleware\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @method $__save\n * @api private\n */\n\nSubdocument.prototype.$__save = function(fn) {\n  return immediate(() => fn(null, this));\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$isValid = function(path) {\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    return parent.$isValid(fullPath);\n  }\n  return Document.prototype.$isValid.call(this, path);\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.markModified = function(path) {\n  Document.prototype.markModified.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n\n  if (parent == null || fullPath == null) {\n    return;\n  }\n\n  const myPath = this.$__pathRelativeToParent().replace(/\\.$/, '');\n  if (parent.isDirectModified(myPath) || this.isNew) {\n    return;\n  }\n  this.$__parent.markModified(fullPath, this);\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.isModified = function(paths, modifiedPaths) {\n  const parent = this.$parent();\n  if (parent != null) {\n    if (Array.isArray(paths) || typeof paths === 'string') {\n      paths = (Array.isArray(paths) ? paths : paths.split(' '));\n      paths = paths.map(p => this.$__pathRelativeToParent(p)).filter(p => p != null);\n    } else if (!paths) {\n      paths = this.$__pathRelativeToParent();\n    }\n\n    return parent.$isModified(paths, modifiedPaths);\n  }\n\n  return Document.prototype.isModified.call(this, paths, modifiedPaths);\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver Subdocument\n */\n\nSubdocument.prototype.$markValid = function(path) {\n  Document.prototype.$markValid.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    parent.$markValid(fullPath);\n  }\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.invalidate = function(path, err, val) {\n  Document.prototype.invalidate.call(this, path, err, val);\n\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    parent.invalidate(fullPath, err, val);\n  } else if (err.kind === 'cast' || err.name === 'CastError' || fullPath == null) {\n    throw err;\n  }\n\n  return this.ownerDocument().$__.validationError;\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.$ignore = function(path) {\n  Document.prototype.$ignore.call(this, path);\n  const parent = this.$parent();\n  const fullPath = this.$__pathRelativeToParent(path);\n  if (parent != null && fullPath != null) {\n    parent.$ignore(fullPath);\n  }\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nSubdocument.prototype.ownerDocument = function() {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  let parent = this; // eslint-disable-line consistent-this\n\n  const paths = [];\n  const seenDocs = new Set([parent]);\n\n  while (true) {\n    if (typeof parent.$__pathRelativeToParent !== 'function') {\n      break;\n    }\n    paths.unshift(parent.$__pathRelativeToParent(void 0, true));\n    const _parent = parent.$parent();\n    if (_parent == null) {\n      break;\n    }\n    parent = _parent;\n    if (seenDocs.has(parent)) {\n      throw new Error('Infinite subdocument loop: subdoc with _id ' + parent._id + ' is a parent of itself');\n    }\n\n    seenDocs.add(parent);\n  }\n\n  this.$__.fullPath = paths.join('.');\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.parent = function() {\n  return this.$__parent;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nSubdocument.prototype.$parent = Subdocument.prototype.parent;\n\n/*!\n * no-op for hooks\n */\n\nSubdocument.prototype.$__remove = function(cb) {\n  if (cb == null) {\n    return;\n  }\n  return cb(null, this);\n};\n\nSubdocument.prototype.$__removeFromParent = function() {\n  this.$__parent.set(this.$basePath, null);\n};\n\n/**\n * Null-out this subdoc\n *\n * @param {Object} [options]\n * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove\n */\n\nSubdocument.prototype.remove = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  registerRemoveListener(this);\n\n  // If removing entire doc, no need to remove subdoc\n  if (!options || !options.noop) {\n    this.$__removeFromParent();\n  }\n\n  return this.$__remove(callback);\n};\n\n/*!\n * ignore\n */\n\nSubdocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.nested.populate(\"path\")`, use ' +\n    '`doc.populate(\"nested.path\")`');\n};\n\n/**\n * Helper for console.log\n *\n * @api public\n */\n\nSubdocument.prototype.inspect = function() {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    flattenDecimals: false\n  });\n};\n\nif (util.inspect.custom) {\n  /*!\n  * Avoid Node deprecation warning DEP0079\n  */\n\n  Subdocument.prototype[util.inspect.custom] = Subdocument.prototype.inspect;\n}\n\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {Subdocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  let owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.$removeListener('save', emitRemove);\n    owner.$removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.$on('save', emitRemove);\n  owner.$on('remove', emitRemove);\n}\n"]},"metadata":{},"sourceType":"script"}