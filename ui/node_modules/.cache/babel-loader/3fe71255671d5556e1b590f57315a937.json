{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { Grid, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography } from \"@material-ui/core\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport cuid from \"cuid\";\nimport produce from \"immer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => createStyles({\n  inline: {\n    display: \"flex\"\n  }\n}));\nexport function ListBuilder({\n  name,\n  value,\n  onChange,\n  label,\n  errors\n}) {\n  _s();\n\n  //TODO should maybe be thinking about a shared constructor for this\n  //we are making an object like this on api as well\n  function wrap(value) {\n    return {\n      _id: cuid(),\n      value\n    };\n  }\n\n  const addAddress = (value, address) => {\n    const updatedValue = produce(value, draft => {\n      console.log(draft);\n      draft.push(wrap(address));\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name\n      }\n    };\n    onChange(e);\n  };\n\n  const removeAddress = (value, id) => {\n    const updatedValue = produce(value, draft => {\n      return draft.filter(el => el._id !== id);\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name\n      }\n    };\n    onChange(e);\n  };\n\n  const [input, setInput] = React.useState(\"\");\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      children: value.map((a, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(HouseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          className: classes.inline,\n          primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [a.value, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: [\" - address\", i + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true),\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            color: \"primary\",\n            onClick: e => {\n              e.preventDefault();\n              removeAddress(value, a._id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, a._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: label,\n        value: input,\n        fullWidth: true,\n        onChange: e => {\n          setInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          addAddress(value, input);\n          setInput(\"\");\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListBuilder, \"uMFfnOEJ+o9kMbaI5GHrHK2+Ci0=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBuilder\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js"],"names":["React","List","ListItem","Grid","ListItemAvatar","ListItemSecondaryAction","ListItemText","TextField","Typography","HouseIcon","CloseIcon","createStyles","makeStyles","cuid","produce","useStyles","inline","display","ListBuilder","name","value","onChange","label","errors","wrap","_id","addAddress","address","updatedValue","draft","console","log","push","e","target","removeAddress","id","filter","el","input","setInput","useState","classes","map","a","i","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Grid,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport cuid from \"cuid\";\nimport produce from \"immer\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    inline: {\n      display: \"flex\",\n    },\n  })\n);\n\nexport function ListBuilder({ name, value, onChange, label, errors }) {\n  //TODO should maybe be thinking about a shared constructor for this\n  //we are making an object like this on api as well\n\n  \n  function wrap(value) {\n    return {\n      _id: cuid(),\n      value,\n    };\n  }\n\n  const addAddress = (value, address) => {\n    const updatedValue = produce(value, (draft) => {\n      console.log(draft);\n      draft.push(wrap(address));\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name,\n      },\n    };\n    onChange(e);\n  };\n\n  const removeAddress = (value, id) => {\n    const updatedValue = produce(value, (draft) => {\n      return draft.filter((el) => el._id !== id);\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name,\n      },\n    };\n    onChange(e);\n  };\n\n  const [input, setInput] = React.useState(\"\");\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <List dense>\n        {value.map((a, i) => (\n          <ListItem key={a._id}>\n            <ListItemAvatar>\n              <HouseIcon></HouseIcon>\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.inline}\n              primary={\n                <>\n                  {a.value}\n                  <Typography variant=\"caption\"> - address{i + 1}</Typography>\n                </>\n              }\n              secondary={<Typography></Typography>}\n            />\n            <ListItemSecondaryAction>\n              <CloseIcon\n                color=\"primary\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  removeAddress(value, a._id);\n                }}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <Grid item>\n        <TextField\n          label={label}\n          value={input}\n          fullWidth\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            addAddress(value, input);\n            setInput(\"\");\n          }}\n        >\n          +\n        </button>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}