{"ast":null,"code":"/*!\n * ignore\n */\n'use strict';\n\nconst assert = require('assert');\n\nconst mquery = require('mquery');\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\n\nconst store = {\n  _promise: null\n};\n/**\n * Get the current promise constructor\n *\n * @api private\n */\n\nstore.get = function () {\n  return store._promise;\n};\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\n\nstore.set = function (lib) {\n  assert.ok(typeof lib === 'function', `mongoose.Promise must be a function, got ${lib}`);\n  store._promise = lib;\n  mquery.Promise = lib;\n};\n/*!\n * Use native promises by default\n */\n\n\nstore.set(global.Promise);\nmodule.exports = store;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/promise_provider.js"],"names":["assert","require","mquery","store","_promise","get","set","lib","ok","Promise","global","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE;AADE,CAAd;AAIA;AACA;AACA;AACA;AACA;;AAEAD,KAAK,CAACE,GAAN,GAAY,YAAW;AACrB,SAAOF,KAAK,CAACC,QAAb;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AAEAD,KAAK,CAACG,GAAN,GAAY,UAASC,GAAT,EAAc;AACxBP,EAAAA,MAAM,CAACQ,EAAP,CAAU,OAAOD,GAAP,KAAe,UAAzB,EACG,4CAA2CA,GAAI,EADlD;AAEAJ,EAAAA,KAAK,CAACC,QAAN,GAAiBG,GAAjB;AACAL,EAAAA,MAAM,CAACO,OAAP,GAAiBF,GAAjB;AACD,CALD;AAOA;AACA;AACA;;;AAEAJ,KAAK,CAACG,GAAN,CAAUI,MAAM,CAACD,OAAjB;AAEAE,MAAM,CAACC,OAAP,GAAiBT,KAAjB","sourcesContent":["/*!\n * ignore\n */\n\n'use strict';\n\nconst assert = require('assert');\nconst mquery = require('mquery');\n\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\nconst store = {\n  _promise: null\n};\n\n/**\n * Get the current promise constructor\n *\n * @api private\n */\n\nstore.get = function() {\n  return store._promise;\n};\n\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\nstore.set = function(lib) {\n  assert.ok(typeof lib === 'function',\n    `mongoose.Promise must be a function, got ${lib}`);\n  store._promise = lib;\n  mquery.Promise = lib;\n};\n\n/*!\n * Use native promises by default\n */\n\nstore.set(global.Promise);\n\nmodule.exports = store;\n"]},"metadata":{},"sourceType":"script"}