{"ast":null,"code":"function processCastError(err) {\n  if (err.name !== \"CastError\") throw new Error(\"err is not a cast error\");\n  return {\n    name: \"castError\",\n    path: err.path,\n    message: `you entered ${err.value} value should be a ${err.kind}`\n  };\n}\n\nfunction processValidatiorError(err) {\n  if (err.name !== \"ValidatorError\") throw new Error(\"err is not a validator error\");\n  return {\n    name: \"validatorError\",\n    path: err.path,\n    message: err.properties.message\n  };\n}\n\nfunction processValidationErrors(errorsObject) {\n  return Object.keys(errorsObject).map(key => {\n    const err = errorsObject[key];\n    if (err.name === \"CastError\") return processCastError(err);else if (err.name === \"ValidatorError\") return processValidatiorError(err);else throw new Error(`no handler defined for Error type${err.name}`);\n  });\n}\n\nmodule.exports = {\n  processValidationErrors\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/api/errorUtilities/processValidationErrors.js"],"names":["processCastError","err","name","Error","path","message","value","kind","processValidatiorError","properties","processValidationErrors","errorsObject","Object","keys","map","key","module","exports"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3B,MAAIA,GAAG,CAACC,IAAJ,KAAa,WAAjB,EAA8B,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AAC9B,SAAO;AACLD,IAAAA,IAAI,EAAE,WADD;AAELE,IAAAA,IAAI,EAAEH,GAAG,CAACG,IAFL;AAGLC,IAAAA,OAAO,EAAG,eAAcJ,GAAG,CAACK,KAAM,sBAAqBL,GAAG,CAACM,IAAK;AAH3D,GAAP;AAKD;;AAED,SAASC,sBAAT,CAAgCP,GAAhC,EAAqC;AACnC,MAAIA,GAAG,CAACC,IAAJ,KAAa,gBAAjB,EACE,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACF,SAAO;AACLD,IAAAA,IAAI,EAAE,gBADD;AAELE,IAAAA,IAAI,EAAEH,GAAG,CAACG,IAFL;AAGLC,IAAAA,OAAO,EAAEJ,GAAG,CAACQ,UAAJ,CAAeJ;AAHnB,GAAP;AAKD;;AAED,SAASK,uBAAT,CAAiCC,YAAjC,EAA+C;AAC7C,SAAOC,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,GAA1B,CAA+BC,GAAD,IAAS;AAC5C,UAAMd,GAAG,GAAGU,YAAY,CAACI,GAAD,CAAxB;AACA,QAAId,GAAG,CAACC,IAAJ,KAAa,WAAjB,EAA8B,OAAOF,gBAAgB,CAACC,GAAD,CAAvB,CAA9B,KACK,IAAIA,GAAG,CAACC,IAAJ,KAAa,gBAAjB,EAAmC,OAAOM,sBAAsB,CAACP,GAAD,CAA7B,CAAnC,KACA,MAAM,IAAIE,KAAJ,CAAW,oCAAmCF,GAAG,CAACC,IAAK,EAAvD,CAAN;AACN,GALM,CAAP;AAMD;;AAEDc,MAAM,CAACC,OAAP,GAAiB;AAACP,EAAAA;AAAD,CAAjB","sourcesContent":["function processCastError(err) {\n    if (err.name !== \"CastError\") throw new Error(\"err is not a cast error\");\n    return {\n      name: \"castError\",\n      path: err.path,\n      message: `you entered ${err.value} value should be a ${err.kind}`,\n    };\n  }\n  \n  function processValidatiorError(err) {\n    if (err.name !== \"ValidatorError\")\n      throw new Error(\"err is not a validator error\");\n    return {\n      name: \"validatorError\",\n      path: err.path,\n      message: err.properties.message,\n    };\n  }\n  \n  function processValidationErrors(errorsObject) {\n    return Object.keys(errorsObject).map((key) => {\n      const err = errorsObject[key];\n      if (err.name === \"CastError\") return processCastError(err);\n      else if (err.name === \"ValidatorError\") return processValidatiorError(err);\n      else throw new Error(`no handler defined for Error type${err.name}`);\n    });\n  }\n\n  module.exports = {processValidationErrors}"]},"metadata":{},"sourceType":"script"}