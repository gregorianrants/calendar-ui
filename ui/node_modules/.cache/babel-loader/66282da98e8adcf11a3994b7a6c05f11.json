{"ast":null,"code":"import _regeneratorRuntime from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/home/gregorian/calendar-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{add}from\"date-fns\";import{CLIENT_ID,API_KEY}from\"./constants\";import gapiEventType from'./eventType';import{reshape}from'./reshape';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function initClient(_x){return _initClient.apply(this,arguments);}function _initClient(){_initClient=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(updateSigninStatus){var DISCOVERY_DOCS,SCOPES,listner,cleanUpListner;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:/*var CLIENT_ID = '960665164291-hsqm8gr0imejuo32saj23bh50gr2i2u1.apps.googleusercontent.com';\n    var API_KEY = process.env.API_KEY*/ // Array of API discovery doc URLs for APIs used by the quickstart\nDISCOVERY_DOCS=[\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nSCOPES=\"https://www.googleapis.com/auth/calendar.readonly\";_context2.next=4;return window.gapi.client.init({apiKey:API_KEY,clientId:CLIENT_ID,discoveryDocs:DISCOVERY_DOCS,scope:SCOPES});case 4:listner=window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());cleanUpListner=function cleanUpListner(){listner.remove();};return _context2.abrupt(\"return\",cleanUpListner);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _initClient.apply(this,arguments);}function load(){return new Promise(function(resolve,reject){window.gapi.load('client:auth2',{callback:function callback(){resolve();},onerror:function onerror(){reject();}});});}export function setUpGapi(_x2){return _setUpGapi.apply(this,arguments);}function _setUpGapi(){_setUpGapi=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(updateSigninStatus){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return load();case 2:_context3.next=4;return initClient(updateSigninStatus);case 4:if(!window.gapi.auth2.getAuthInstance().isSignedIn.get()){window.gapi.auth2.getAuthInstance().signIn();}case 5:case\"end\":return _context3.stop();}}},_callee3);}));return _setUpGapi.apply(this,arguments);}export function useGapi(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),authed=_React$useState2[0],setAuthed=_React$useState2[1];function updateSigninStatus(isSignedIn){setAuthed(isSignedIn);}var signOut=React.useCallback(function(){window.gapi.auth2.getAuthInstance().signOut();},[]);var listEvents=function listEvents(from,to){return window.gapi.client.calendar.events.list({'calendarId':'primary','timeMin':from.toISOString(),'timeMax':to.toISOString(),'showDeleted':false,'singleEvents':true,'orderBy':'startTime'}).then(function(response){var events=response.result.items;return events.filter(function(event){return gapiEventType.isTimeSpecified(event)&&!gapiEventType.isMultiDayTimeSpecified(event);}).map(function(event){return reshape(event);});});};React.useEffect(function(){var cleanUpFunction;_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return setUpGapi(updateSigninStatus);case 2:cleanUpFunction=_context.sent;case 3:case\"end\":return _context.stop();}}},_callee);}))();return cleanUpFunction;},[]);return{authed:authed,listEvents:listEvents,signOut:signOut};}//a component to test gapi\nexport function EventsList(){var _useGapi=useGapi(),authed=_useGapi.authed,listEvents=_useGapi.listEvents,signOut=_useGapi.signOut;var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),events=_React$useState4[0],setEvents=_React$useState4[1];React.useEffect(function(){var dateFrom=add(new Date(),{months:-2});var dateTo=add(dateFrom,{days:7});if(authed){listEvents(dateFrom,dateTo).then(setEvents);}},[authed,listEvents]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"hello \",String(authed)]}),/*#__PURE__*/_jsx(\"button\",{onClick:signOut,children:\"sign me out\"}),/*#__PURE__*/_jsx(\"div\",{children:events.map(function(event){return/*#__PURE__*/_jsx(\"p\",{children:event.summary});})})]});}","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/useGapi/useGapi.js"],"names":["React","add","CLIENT_ID","API_KEY","gapiEventType","reshape","initClient","updateSigninStatus","DISCOVERY_DOCS","SCOPES","window","gapi","client","init","apiKey","clientId","discoveryDocs","scope","listner","auth2","getAuthInstance","isSignedIn","listen","get","cleanUpListner","remove","load","Promise","resolve","reject","callback","onerror","setUpGapi","signIn","useGapi","useState","authed","setAuthed","signOut","useCallback","listEvents","from","to","calendar","events","list","toISOString","then","response","result","items","filter","event","isTimeSpecified","isMultiDayTimeSpecified","map","useEffect","cleanUpFunction","EventsList","setEvents","dateFrom","Date","months","dateTo","days","String","summary"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {add} from \"date-fns\";\nimport {CLIENT_ID,API_KEY} from \"./constants\";\n\nimport gapiEventType from './eventType'\n\nimport {reshape} from './reshape'\n\nasync function initClient(updateSigninStatus) {\n    /*var CLIENT_ID = '960665164291-hsqm8gr0imejuo32saj23bh50gr2i2u1.apps.googleusercontent.com';\n    var API_KEY = process.env.API_KEY*/\n    // Array of API discovery doc URLs for APIs used by the quickstart\n    var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n    // Authorization scopes required by the API; multiple scopes can be\n    // included, separated by spaces.\n    var SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n    await window.gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n    })\n\n\n    let listner = window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n    updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n\n    const cleanUpListner = () => {\n        listner.remove()\n    }\n\n    return cleanUpListner\n\n\n}\n\nfunction load() {\n    return new Promise(((resolve, reject) => {\n        window.gapi.load('client:auth2',\n            {\n                callback: function () {\n                    resolve()\n                },\n                onerror: function () {\n                    reject()\n                }\n            },\n        )\n    }))\n}\n\nexport async function setUpGapi(updateSigninStatus) {\n    /*if (!window.gapi) {\n        throw new Error('gapi needs to be loaded on script tag from: https://apis.google.com/js/api.js')\n    }*/\n    await load()\n    await initClient(updateSigninStatus)\n    if (!window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n        window.gapi.auth2.getAuthInstance().signIn();\n    }\n}\n\nexport function useGapi() {\n    const [authed, setAuthed] = React.useState(false)\n\n    function updateSigninStatus(isSignedIn) {\n        setAuthed(isSignedIn)\n    }\n\n    const signOut = React.useCallback(() => {\n        window.gapi.auth2.getAuthInstance().signOut()\n    }, [])\n\n    const listEvents = (from, to) => {\n        return window.gapi.client.calendar.events.list({\n            'calendarId': 'primary',\n            'timeMin': from.toISOString(),\n            'timeMax': to.toISOString(),\n            'showDeleted': false,\n            'singleEvents': true,\n            'orderBy': 'startTime'\n        }).then(function (response) {\n            const events = response.result.items;\n            return events.filter(\n                event=>gapiEventType.isTimeSpecified(event) && !gapiEventType.isMultiDayTimeSpecified(event)\n                )\n                .map(event=>reshape(event))\n        })\n    }\n\n    React.useEffect(() => {\n\n        let cleanUpFunction\n\n\n        (async ()=> {\n            cleanUpFunction = await setUpGapi(updateSigninStatus)\n        })()\n\n        return cleanUpFunction\n    }, [])\n    return {authed, listEvents, signOut}\n}\n\n//a component to test gapi\nexport function EventsList() {\n    const {authed, listEvents, signOut} = useGapi()\n\n    const [events, setEvents] = React.useState([])\n\n    React.useEffect(() => {\n        const dateFrom = add(new Date(), {months: -2})\n        const dateTo = add(dateFrom, {days: 7})\n\n        if (authed) {\n            listEvents(dateFrom, dateTo)\n                .then(setEvents)\n        }\n\n    }, [authed,listEvents])\n\n    return (\n        <div className=\"App\">\n            <p>\n                hello {String(authed)}\n            </p>\n            <button onClick={signOut}>\n                sign me out\n            </button>\n            <div>\n                {events.map(event => (\n                    <p>{event.summary}</p>\n                ))}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}