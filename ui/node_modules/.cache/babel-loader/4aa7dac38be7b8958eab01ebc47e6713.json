{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/forms/JobModal.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport JobForm from \"./JobForm\";\nimport { PersonOutline } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontVariant: \"small-caps\",\n    color: \"#324191\"\n  },\n  group: {\n    marginBottom: \"0.5em\"\n  },\n  content: {\n    paddingTop: 0\n  },\n  li: {\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0\n  },\n  container: {\n    marginTop: 20,\n    backgroundColor: \"#F3F3FB\"\n  },\n  list: {\n    padding: 0,\n    \"& > li\": {\n      padding: 0\n    }\n  },\n  pricing: {\n    marginTop: theme.spacing(2),\n    //TODO use row class for top margin\n    textAlign: \"center\"\n  },\n  items: {\n    whiteSpace: \"pre-line\"\n  },\n  row: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function JobModal({\n  displayEvent,\n  close,\n  updateEvent\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [editMode, setEditMode] = React.useState(false);\n  const {\n    start,\n    end,\n    customer,\n    charges,\n    operatives,\n    items,\n    addresses\n  } = displayEvent; //const { customer } = displayEvent;\n  //TODO: map over operatives\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: editMode ? /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 600,\n        backgroundColor: \"#F3F3FB\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(JobForm, {\n          title: \"Edit Job\",\n          initialValues: displayEvent,\n          close: close\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: 1200,\n          backgroundColor: \"#F3F3FB\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: customer.name,\n          action: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                setEditMode(true);\n              },\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: close,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                className: classes.card,\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Customer Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    className: classes.list,\n                    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: customer.name,\n                        secondary: \"name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(PhoneIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: customer.mobile,\n                        secondary: \"mobile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 133,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: customer.email,\n                        secondary: \"email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                className: classes.pricing,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: charges.hourlyRate,\n                      subheader: \"per hour\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: charges.fuelCharge,\n                      subheader: \"fuel charge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: charges.travelTime,\n                      subheader: \"travel time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  className: classes.items,\n                  children: items\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this)\n  /* editMode\n      ?\n      <EditJobModal data={displayEvent} addToEvents={addToEvents}/>\n          :\n      <Modal\n      open={true}\n      >\n          <Card style={{width: 300}}>\n              <CardHeader\n                  title={summary}\n                  action={\n                      <>\n                          <IconButton>\n                              <EditIcon onClick={()=>{setEditMode(true)}}/>\n                          </IconButton>\n                          <IconButton>\n                              <CloseIcon onClick={close}/>\n                          </IconButton>\n                      </>\n                   }\n              />\n              <CardContent className={classes.content}>\n                  <div className={classes.group}>\n                      <Typography className={classes.title}>\n                          location\n                      </Typography>\n                      <Typography variant='body2'>\n                          {location}\n                      </Typography>\n                  </div>\n                  <div className={classes.group}>\n                      <Typography className={classes.title}>\n                          start\n                      </Typography>\n                      <Typography variant='body1'>\n                          {start.toLocaleString()}\n                      </Typography>\n                  </div>\n                  <div className={classes.group}>\n                      <Typography className={classes.title}>\n                          end\n                      </Typography>\n                      <Typography variant='body1'>\n                          {end.toLocaleString()}\n                      </Typography>\n                  </div>\n                  <div className={classes.group}>\n                      <Typography className={classes.title}>\n                          description\n                      </Typography>\n                      <Typography variant='body1'>\n                          {description}\n                      </Typography>\n                  </div>\n                      <Typography>\n                   </Typography>\n                </CardContent>\n          </Card>\n      </Modal>*/\n  ;\n}\n\n_s(JobModal, \"x++fj1QPOUlRTbOo+uM3sRDoXOg=\", false, function () {\n  return [useStyles];\n});\n\n_c = JobModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobModal\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/forms/JobModal.js"],"names":["Modal","Card","CardContent","CardHeader","IconButton","EditIcon","CloseIcon","React","List","ListItem","PersonIcon","PhoneIcon","EmailIcon","AccessibilityNewIcon","ListItemIcon","ListItemText","Grid","makeStyles","JobForm","PersonOutline","useStyles","theme","title","fontSize","fontWeight","fontVariant","color","group","marginBottom","content","paddingTop","li","listStyle","padding","margin","container","marginTop","backgroundColor","list","pricing","spacing","textAlign","items","whiteSpace","row","JobModal","displayEvent","close","updateEvent","classes","editMode","setEditMode","useState","start","end","customer","charges","operatives","addresses","width","name","card","mobile","email","hourlyRate","fuelCharge","travelTime"],"mappings":"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","sourcesContent":["import Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport JobForm from \"./JobForm\";\nimport { PersonOutline } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontVariant: \"small-caps\",\n    color: \"#324191\",\n  },\n  group: {\n    marginBottom: \"0.5em\",\n  },\n  content: {\n    paddingTop: 0,\n  },\n  li: {\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n  },\n  container: {\n    marginTop: 20,\n    backgroundColor: \"#F3F3FB\",\n  },\n  list: {\n    padding: 0,\n    \"& > li\": {\n      padding: 0,\n    },\n  },\n  pricing: {\n    marginTop: theme.spacing(2), //TODO use row class for top margin\n    textAlign: \"center\",\n  },\n  items: {\n    whiteSpace: \"pre-line\",\n  },\n  row: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function JobModal({ displayEvent, close, updateEvent }) {\n  const classes = useStyles();\n  const [editMode, setEditMode] = React.useState(false);\n\n  const { start, end, customer, charges, operatives, items, addresses } =\n    displayEvent;\n\n  //const { customer } = displayEvent;\n\n  //TODO: map over operatives\n  return (\n    <Modal>\n      {editMode ? (\n        <Card style={{ width: 600, backgroundColor: \"#F3F3FB\" }}>\n          <CardContent>\n            <JobForm\n              title=\"Edit Job\"\n              initialValues={displayEvent}\n              close={close}\n            />\n          </CardContent>\n        </Card>\n      ) : (\n        <>\n          <Card style={{ width: 1200, backgroundColor: \"#F3F3FB\" }}>\n            <CardHeader\n              title={customer.name}\n              action={\n                <>\n                  <IconButton\n                    onClick={() => {\n                      setEditMode(true);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton onClick={close}>\n                    <CloseIcon />\n                  </IconButton>\n                </>\n              }\n            />\n            <CardHeader />\n            <CardContent className={classes.content}>\n              <Grid container spacing={3}>\n                <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Customer Details\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PersonIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.name}\n                            secondary=\"name\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PhoneIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.mobile}\n                            secondary=\"mobile\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <EmailIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.email}\n                            secondary=\"email\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                  <Grid container spacing={1} className={classes.pricing}>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.hourlyRate}\n                          subheader={\"per hour\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.fuelCharge}\n                          subheader={\"fuel charge\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.travelTime}\n                          subheader={\"travel time\"}\n                        />\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <Card>\n                    <CardHeader title={\"Items\"} />\n                    <CardContent className={classes.items}>{items}</CardContent>\n                  </Card>\n                </Grid>\n                {/* <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Removal Operatives\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[0].value}\n                            secondary=\"first man\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[1].value}\n                            secondary=\"second man\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                </Grid> */}\n              </Grid>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </Modal>\n\n    /* editMode\n        ?\n        <EditJobModal data={displayEvent} addToEvents={addToEvents}/>\n            :\n        <Modal\n        open={true}\n        >\n            <Card style={{width: 300}}>\n                <CardHeader\n                    title={summary}\n                    action={\n                        <>\n                            <IconButton>\n                                <EditIcon onClick={()=>{setEditMode(true)}}/>\n                            </IconButton>\n                            <IconButton>\n                                <CloseIcon onClick={close}/>\n                            </IconButton>\n                        </>\n\n                    }\n                />\n                <CardContent className={classes.content}>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            location\n                        </Typography>\n                        <Typography variant='body2'>\n                            {location}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            start\n                        </Typography>\n                        <Typography variant='body1'>\n                            {start.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            end\n                        </Typography>\n                        <Typography variant='body1'>\n                            {end.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            description\n                        </Typography>\n                        <Typography variant='body1'>\n                            {description}\n                        </Typography>\n                    </div>\n\n\n\n\n                    <Typography>\n\n                    </Typography>\n\n\n                </CardContent>\n            </Card>\n        </Modal>*/\n  );\n}\n"]},"metadata":{},"sourceType":"module"}