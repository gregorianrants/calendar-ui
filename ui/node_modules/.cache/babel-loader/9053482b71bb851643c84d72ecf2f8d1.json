{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { weekContaining, setTimeDayStart, setTimeDayEnd } from \"../../utilities/dateUtilities\";\nimport { addDays } from \"date-fns\";\nexport function getWeek(date, increment = 0) {\n  const currentDate = addDays(date, increment * 7);\n  const days = weekContaining(currentDate);\n  const firstDay = setTimeDayStart(new Date(days[0])); //TODO\n\n  const lastDay = setTimeDayEnd(new Date(days[days.length - 1])); //TODO\n\n  return {\n    currentDate,\n    days,\n    firstDay,\n    lastDay\n  };\n}\nconst initialState = { ...getWeek(new Date()),\n  events: []\n};\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      const {\n        firstDay,\n        lastDay,\n        days,\n        events\n      } = action.payload;\n      state = {\n        firstDay,\n        lastDay,\n        days,\n        events\n      };\n    }\n\n  }\n});\n\nconst fetchData = (state, dispatch) => {};\n\nexport default calendarSlice.reducer;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Calendar/calendarSlice.js"],"names":["createSlice","weekContaining","setTimeDayStart","setTimeDayEnd","addDays","getWeek","date","increment","currentDate","days","firstDay","Date","lastDay","length","initialState","events","calendarSlice","name","reducers","dataLoaded","state","action","payload","fetchData","dispatch","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAAQC,cAAR,EAAuBC,eAAvB,EAAuCC,aAAvC,QAA2D,+BAA3D;AACA,SAAQC,OAAR,QAAsB,UAAtB;AAEA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,SAAS,GAAC,CAAjC,EAAmC;AAClC,QAAMC,WAAW,GAAGJ,OAAO,CAACE,IAAD,EAAMC,SAAS,GAAC,CAAhB,CAA3B;AACA,QAAME,IAAI,GAAGR,cAAc,CAACO,WAAD,CAA3B;AACA,QAAME,QAAQ,GAAGR,eAAe,CAAC,IAAIS,IAAJ,CAASF,IAAI,CAAC,CAAD,CAAb,CAAD,CAAhC,CAHkC,CAGiB;;AACnD,QAAMG,OAAO,GAAGT,aAAa,CAAC,IAAIQ,IAAJ,CAASF,IAAI,CAACA,IAAI,CAACI,MAAL,GAAY,CAAb,CAAb,CAAD,CAA7B,CAJkC,CAI0B;;AAC5D,SAAO;AACHL,IAAAA,WADG;AACSC,IAAAA,IADT;AACcC,IAAAA,QADd;AACuBE,IAAAA;AADvB,GAAP;AAGH;AAEL,MAAME,YAAY,GAAG,EACnB,GAAGT,OAAO,CAAC,IAAIM,IAAJ,EAAD,CADS;AAEnBI,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,MAAMC,aAAa,GAAGhB,WAAW,CAAC;AAChCiB,EAAAA,IAAI,EAAE,UAD0B;AAEhCH,EAAAA,YAFgC;AAGhCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAM;AAAEX,QAAAA,QAAF;AAAYE,QAAAA,OAAZ;AAAqBH,QAAAA,IAArB;AAA2BM,QAAAA;AAA3B,UAAsCM,MAAM,CAACC,OAAnD;AACAF,MAAAA,KAAK,GAAG;AAAEV,QAAAA,QAAF;AAAYE,QAAAA,OAAZ;AAAqBH,QAAAA,IAArB;AAA2BM,QAAAA;AAA3B,OAAR;AACD;;AAJO;AAHsB,CAAD,CAAjC;;AAWA,MAAMQ,SAAS,GAAG,CAACH,KAAD,EAAOI,QAAP,KAAkB,CAEnC,CAFD;;AAIA,eAAeR,aAAa,CAACS,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport {weekContaining,setTimeDayStart,setTimeDayEnd} from \"../../utilities/dateUtilities\";\nimport {addDays} from \"date-fns\";\n\nexport function getWeek(date, increment=0){\n        const currentDate = addDays(date,increment*7)\n        const days = weekContaining(currentDate)\n        const firstDay = setTimeDayStart(new Date(days[0]))//TODO\n        const lastDay = setTimeDayEnd(new Date(days[days.length-1]))//TODO\n        return {\n            currentDate,days,firstDay,lastDay\n        }\n    }\n\nconst initialState = {\n  ...getWeek(new Date()),\n  events: [],\n};\n\nconst calendarSlice = createSlice({\n  name: \"calendar\",\n  initialState,\n  reducers: {\n    dataLoaded(state, action) {\n      const { firstDay, lastDay, days, events } = action.payload;\n      state = { firstDay, lastDay, days, events };\n    },\n  },\n});\n\nconst fetchData = (state,dispatch)=>{\n\n}\n\nexport default calendarSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}