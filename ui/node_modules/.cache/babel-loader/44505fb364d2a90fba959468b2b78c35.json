{"ast":null,"code":"'use strict';\n\nconst assert = require('assert');\n\nmodule.exports = function castDate(value) {\n  // Support empty string because of empty form values. Originally introduced\n  // in https://github.com/Automattic/mongoose/commit/efc72a1898fc3c33a319d915b8c5463a22938dfe\n  if (value == null || value === '') {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    assert.ok(!isNaN(value.valueOf()));\n    return value;\n  }\n\n  let date;\n  assert.ok(typeof value !== 'boolean');\n\n  if (value instanceof Number || typeof value === 'number') {\n    date = new Date(value);\n  } else if (typeof value === 'string' && !isNaN(Number(value)) && (Number(value) >= 275761 || Number(value) < -271820)) {\n    // string representation of milliseconds take this path\n    date = new Date(Number(value));\n  } else if (typeof value.valueOf === 'function') {\n    // support for moment.js. This is also the path strings will take because\n    // strings have a `valueOf()`\n    date = new Date(value.valueOf());\n  } else {\n    // fallback\n    date = new Date(value);\n  }\n\n  if (!isNaN(date.valueOf())) {\n    return date;\n  }\n\n  assert.ok(false);\n};","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/cast/date.js"],"names":["assert","require","module","exports","castDate","value","Date","ok","isNaN","valueOf","date","Number"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxC;AACA;AACA,MAAIA,KAAK,IAAI,IAAT,IAAiBA,KAAK,KAAK,EAA/B,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,MAAIA,KAAK,YAAYC,IAArB,EAA2B;AACzBN,IAAAA,MAAM,CAACO,EAAP,CAAU,CAACC,KAAK,CAACH,KAAK,CAACI,OAAN,EAAD,CAAhB;AAEA,WAAOJ,KAAP;AACD;;AAED,MAAIK,IAAJ;AAEAV,EAAAA,MAAM,CAACO,EAAP,CAAU,OAAOF,KAAP,KAAiB,SAA3B;;AAEA,MAAIA,KAAK,YAAYM,MAAjB,IAA2B,OAAON,KAAP,KAAiB,QAAhD,EAA0D;AACxDK,IAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASD,KAAT,CAAP;AACD,GAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAACG,KAAK,CAACG,MAAM,CAACN,KAAD,CAAP,CAAnC,KAAuDM,MAAM,CAACN,KAAD,CAAN,IAAiB,MAAjB,IAA2BM,MAAM,CAACN,KAAD,CAAN,GAAgB,CAAC,MAAnG,CAAJ,EAAgH;AACrH;AACAK,IAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASK,MAAM,CAACN,KAAD,CAAf,CAAP;AACD,GAHM,MAGA,IAAI,OAAOA,KAAK,CAACI,OAAb,KAAyB,UAA7B,EAAyC;AAC9C;AACA;AACAC,IAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASD,KAAK,CAACI,OAAN,EAAT,CAAP;AACD,GAJM,MAIA;AACL;AACAC,IAAAA,IAAI,GAAG,IAAIJ,IAAJ,CAASD,KAAT,CAAP;AACD;;AAED,MAAI,CAACG,KAAK,CAACE,IAAI,CAACD,OAAL,EAAD,CAAV,EAA4B;AAC1B,WAAOC,IAAP;AACD;;AAEDV,EAAAA,MAAM,CAACO,EAAP,CAAU,KAAV;AACD,CApCD","sourcesContent":["'use strict';\n\nconst assert = require('assert');\n\nmodule.exports = function castDate(value) {\n  // Support empty string because of empty form values. Originally introduced\n  // in https://github.com/Automattic/mongoose/commit/efc72a1898fc3c33a319d915b8c5463a22938dfe\n  if (value == null || value === '') {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    assert.ok(!isNaN(value.valueOf()));\n\n    return value;\n  }\n\n  let date;\n\n  assert.ok(typeof value !== 'boolean');\n\n  if (value instanceof Number || typeof value === 'number') {\n    date = new Date(value);\n  } else if (typeof value === 'string' && !isNaN(Number(value)) && (Number(value) >= 275761 || Number(value) < -271820)) {\n    // string representation of milliseconds take this path\n    date = new Date(Number(value));\n  } else if (typeof value.valueOf === 'function') {\n    // support for moment.js. This is also the path strings will take because\n    // strings have a `valueOf()`\n    date = new Date(value.valueOf());\n  } else {\n    // fallback\n    date = new Date(value);\n  }\n\n  if (!isNaN(date.valueOf())) {\n    return date;\n  }\n\n  assert.ok(false);\n};"]},"metadata":{},"sourceType":"script"}