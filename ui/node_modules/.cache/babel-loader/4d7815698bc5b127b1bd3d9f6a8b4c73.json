{"ast":null,"code":"var _jsxFileName = \"/home/gregorian/calendar-ui/ui/src/components/Events.js\",\n    _s = $RefreshSig$();\n\nimport Event from './Event';\nimport GcalEvent from \"./gcalEvent\";\nimport { configure } from \"../eventGeometry/eventGeometry\";\nimport React from \"react\";\nimport settingsContext from \"./Contexts\";\nimport { batchProcess } from \"../utilities/batchProcess\";\nimport { createElement as _createElement } from \"react\";\nexport default function Events({\n  gcalEvents,\n  events,\n  updateEvent,\n  updateDisplayEvent\n}) {\n  _s();\n\n  const {\n    hourHeight\n  } = React.useContext(settingsContext);\n  const eventsGeometry = configure(hourHeight, 0); //TODO was initially counting border width into calculation but using\n  //border box it doesnt mater consider refactor\n  //TODO super confusing changing this function up chain consider refactor\n\n  /* const updateEventWithIdF = (id) => (\n       (top, bottom) => {\n           let start = getTime(getNumPixels(top), hourHeight * 24)\n           let end = getTime(hourHeight * 24 - getNumPixels(bottom), hourHeight * 24)\n           updateEvent(id, {start, end})\n       }\n   )*/\n\n  const [eventsProcessed, gcalProcessed] = batchProcess(events, gcalEvents, eventsGeometry);\n  return (\n    /* eventsGeometry(events)*/\n    [...eventsProcessed.map((evnt, i) => {\n      return /*#__PURE__*/_createElement(Event, { ...evnt,\n        key: evnt._id,\n        updateEvent: updateEvent,\n        updateDisplayEvent: updateDisplayEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }\n      });\n    }), ...gcalProcessed.map((evnt, i) => {\n      return /*#__PURE__*/_createElement(GcalEvent, { ...evnt,\n        key: evnt.id,\n        updateEvent: updateEvent,\n        updateDisplayEvent: updateDisplayEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }\n      });\n    })]\n  );\n}\n\n_s(Events, \"6hcEp54YmEzcsdgWo6gw7EV2F8o=\");\n\n_c = Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/home/gregorian/calendar-ui/ui/src/components/Events.js"],"names":["Event","GcalEvent","configure","React","settingsContext","batchProcess","Events","gcalEvents","events","updateEvent","updateDisplayEvent","hourHeight","useContext","eventsGeometry","eventsProcessed","gcalProcessed","map","evnt","i","_id","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,SAAQC,SAAR,QAAwB,gCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,SAAQC,YAAR,QAA2B,2BAA3B;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA,UAAD;AAAYC,EAAAA,MAAZ;AAAmBC,EAAAA,WAAnB;AAA+BC,EAAAA;AAA/B,CAAhB,EAAoE;AAAA;;AAC/E,QAAM;AAACC,IAAAA;AAAD,MAAaR,KAAK,CAACS,UAAN,CAAiBR,eAAjB,CAAnB;AACA,QAAMS,cAAc,GAAGX,SAAS,CAACS,UAAD,EAAa,CAAb,CAAhC,CAF+E,CAG3E;AACJ;AAEA;;AACD;AACH;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAM,CAACG,eAAD,EAAiBC,aAAjB,IAAkCV,YAAY,CAACG,MAAD,EAAQD,UAAR,EAAmBM,cAAnB,CAApD;AAEA;AACG;AACK,KAAC,GAAGC,eAAe,CAClBE,GADG,CAEA,CAACC,IAAD,EAAOC,CAAP,KAAa;AACT,0BAAO,eAAC,KAAD,OACCD,IADD;AAEH,QAAA,GAAG,EAAEA,IAAI,CAACE,GAFP;AAGH,QAAA,WAAW,EAAEV,WAHV;AAIH,QAAA,kBAAkB,EAAEC,kBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMH,KATD,CAAJ,EAWI,GAAGK,aAAa,CAACC,GAAd,CACH,CAACC,IAAD,EAAOC,CAAP,KAAa;AACT,0BAAO,eAAC,SAAD,OACCD,IADD;AAEH,QAAA,GAAG,EAAEA,IAAI,CAACG,EAFP;AAGH,QAAA,WAAW,EAAEX,WAHV;AAIH,QAAA,kBAAkB,EAAEC,kBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAMH,KARE,CAXP;AAFR;AAyBH;;GA1CuBJ,M;;KAAAA,M","sourcesContent":["import Event from './Event'\nimport GcalEvent from \"./gcalEvent\";\n\n\n\nimport {configure} from \"../eventGeometry/eventGeometry\";\nimport React from \"react\";\nimport settingsContext from \"./Contexts\";\nimport {batchProcess} from \"../utilities/batchProcess\";\n\nexport default function Events({gcalEvents,events,updateEvent,updateDisplayEvent}) {\n    const {hourHeight}=React.useContext(settingsContext)\n    const eventsGeometry = configure(hourHeight, 0)\n        //TODO was initially counting border width into calculation but using\n    //border box it doesnt mater consider refactor\n\n    //TODO super confusing changing this function up chain consider refactor\n   /* const updateEventWithIdF = (id) => (\n        (top, bottom) => {\n            let start = getTime(getNumPixels(top), hourHeight * 24)\n            let end = getTime(hourHeight * 24 - getNumPixels(bottom), hourHeight * 24)\n            updateEvent(id, {start, end})\n        }\n    )*/\n\n    const [eventsProcessed,gcalProcessed] = batchProcess(events,gcalEvents,eventsGeometry)\n\n    return (\n       /* eventsGeometry(events)*/\n            [...eventsProcessed\n            .map(\n                (evnt, i) => {\n                    return <Event\n                        {...evnt}\n                        key={evnt._id}\n                        updateEvent={updateEvent}\n                        updateDisplayEvent={updateDisplayEvent}\n                    />\n                }\n            ),\n                ...gcalProcessed.map(\n                (evnt, i) => {\n                    return <GcalEvent\n                        {...evnt}\n                        key={evnt.id}\n                        updateEvent={updateEvent}\n                        updateDisplayEvent={updateDisplayEvent}\n                    />\n                }\n            )\n            ]\n    )\n}\n"]},"metadata":{},"sourceType":"module"}