{"ast":null,"code":"'use strict';\n/*!\n * Simplified lodash.get to work around the annoying null quirk. See:\n * https://github.com/lodash/lodash/issues/3659\n */\n\nmodule.exports = function get(obj, path, def) {\n  let parts;\n  let isPathArray = false;\n\n  if (typeof path === 'string') {\n    if (path.indexOf('.') === -1) {\n      const _v = getProperty(obj, path);\n\n      if (_v == null) {\n        return def;\n      }\n\n      return _v;\n    }\n\n    parts = path.split('.');\n  } else {\n    isPathArray = true;\n    parts = path;\n\n    if (parts.length === 1) {\n      const _v = getProperty(obj, parts[0]);\n\n      if (_v == null) {\n        return def;\n      }\n\n      return _v;\n    }\n  }\n\n  let rest = path;\n  let cur = obj;\n\n  for (const part of parts) {\n    if (cur == null) {\n      return def;\n    } // `lib/cast.js` depends on being able to get dotted paths in updates,\n    // like `{ $set: { 'a.b': 42 } }`\n\n\n    if (!isPathArray && cur[rest] != null) {\n      return cur[rest];\n    }\n\n    cur = getProperty(cur, part);\n\n    if (!isPathArray) {\n      rest = rest.substr(part.length + 1);\n    }\n  }\n\n  return cur == null ? def : cur;\n};\n\nfunction getProperty(obj, prop) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Map) {\n    return obj.get(prop);\n  }\n\n  return obj[prop];\n}","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/helpers/get.js"],"names":["module","exports","get","obj","path","def","parts","isPathArray","indexOf","_v","getProperty","split","length","rest","cur","part","substr","prop","Map"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAaC,GAAb,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AAC5C,MAAIC,KAAJ;AACA,MAAIC,WAAW,GAAG,KAAlB;;AACA,MAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAIA,IAAI,CAACI,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;AAC5B,YAAMC,EAAE,GAAGC,WAAW,CAACP,GAAD,EAAMC,IAAN,CAAtB;;AACA,UAAIK,EAAE,IAAI,IAAV,EAAgB;AACd,eAAOJ,GAAP;AACD;;AACD,aAAOI,EAAP;AACD;;AAEDH,IAAAA,KAAK,GAAGF,IAAI,CAACO,KAAL,CAAW,GAAX,CAAR;AACD,GAVD,MAUO;AACLJ,IAAAA,WAAW,GAAG,IAAd;AACAD,IAAAA,KAAK,GAAGF,IAAR;;AAEA,QAAIE,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAMH,EAAE,GAAGC,WAAW,CAACP,GAAD,EAAMG,KAAK,CAAC,CAAD,CAAX,CAAtB;;AACA,UAAIG,EAAE,IAAI,IAAV,EAAgB;AACd,eAAOJ,GAAP;AACD;;AACD,aAAOI,EAAP;AACD;AACF;;AACD,MAAII,IAAI,GAAGT,IAAX;AACA,MAAIU,GAAG,GAAGX,GAAV;;AACA,OAAK,MAAMY,IAAX,IAAmBT,KAAnB,EAA0B;AACxB,QAAIQ,GAAG,IAAI,IAAX,EAAiB;AACf,aAAOT,GAAP;AACD,KAHuB,CAKxB;AACA;;;AACA,QAAI,CAACE,WAAD,IAAgBO,GAAG,CAACD,IAAD,CAAH,IAAa,IAAjC,EAAuC;AACrC,aAAOC,GAAG,CAACD,IAAD,CAAV;AACD;;AAEDC,IAAAA,GAAG,GAAGJ,WAAW,CAACI,GAAD,EAAMC,IAAN,CAAjB;;AAEA,QAAI,CAACR,WAAL,EAAkB;AAChBM,MAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAYD,IAAI,CAACH,MAAL,GAAc,CAA1B,CAAP;AACD;AACF;;AAED,SAAOE,GAAG,IAAI,IAAP,GAAcT,GAAd,GAAoBS,GAA3B;AACD,CA9CD;;AAgDA,SAASJ,WAAT,CAAqBP,GAArB,EAA0Bc,IAA1B,EAAgC;AAC9B,MAAId,GAAG,IAAI,IAAX,EAAiB;AACf,WAAOA,GAAP;AACD;;AACD,MAAIA,GAAG,YAAYe,GAAnB,EAAwB;AACtB,WAAOf,GAAG,CAACD,GAAJ,CAAQe,IAAR,CAAP;AACD;;AACD,SAAOd,GAAG,CAACc,IAAD,CAAV;AACD","sourcesContent":["'use strict';\n\n/*!\n * Simplified lodash.get to work around the annoying null quirk. See:\n * https://github.com/lodash/lodash/issues/3659\n */\n\nmodule.exports = function get(obj, path, def) {\n  let parts;\n  let isPathArray = false;\n  if (typeof path === 'string') {\n    if (path.indexOf('.') === -1) {\n      const _v = getProperty(obj, path);\n      if (_v == null) {\n        return def;\n      }\n      return _v;\n    }\n\n    parts = path.split('.');\n  } else {\n    isPathArray = true;\n    parts = path;\n\n    if (parts.length === 1) {\n      const _v = getProperty(obj, parts[0]);\n      if (_v == null) {\n        return def;\n      }\n      return _v;\n    }\n  }\n  let rest = path;\n  let cur = obj;\n  for (const part of parts) {\n    if (cur == null) {\n      return def;\n    }\n\n    // `lib/cast.js` depends on being able to get dotted paths in updates,\n    // like `{ $set: { 'a.b': 42 } }`\n    if (!isPathArray && cur[rest] != null) {\n      return cur[rest];\n    }\n\n    cur = getProperty(cur, part);\n\n    if (!isPathArray) {\n      rest = rest.substr(part.length + 1);\n    }\n  }\n\n  return cur == null ? def : cur;\n};\n\nfunction getProperty(obj, prop) {\n  if (obj == null) {\n    return obj;\n  }\n  if (obj instanceof Map) {\n    return obj.get(prop);\n  }\n  return obj[prop];\n}"]},"metadata":{},"sourceType":"script"}