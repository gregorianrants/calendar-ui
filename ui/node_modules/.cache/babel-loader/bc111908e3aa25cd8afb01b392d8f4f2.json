{"ast":null,"code":"/*!\n * Module requirements\n */\n'use strict';\n\nconst MongooseError = require('./mongooseError');\n\nconst getConstructorName = require('../helpers/getConstructorName');\n\nconst util = require('util');\n\nclass ValidationError extends MongooseError {\n  /**\n   * Document Validation Error\n   *\n   * @api private\n   * @param {Document} [instance]\n   * @inherits MongooseError\n   */\n  constructor(instance) {\n    let _message;\n\n    if (getConstructorName(instance) === 'model') {\n      _message = instance.constructor.modelName + ' validation failed';\n    } else {\n      _message = 'Validation failed';\n    }\n\n    super(_message);\n    this.errors = {};\n    this._message = _message;\n\n    if (instance) {\n      instance.$errors = this.errors;\n    }\n  }\n  /**\n   * Console.log helper\n   */\n\n\n  toString() {\n    return this.name + ': ' + _generateMessage(this);\n  }\n  /*!\n   * inspect helper\n   */\n\n\n  inspect() {\n    return Object.assign(new Error(this.message), this);\n  }\n  /*!\n  * add message\n  */\n\n\n  addError(path, error) {\n    this.errors[path] = error;\n    this.message = this._message + ': ' + _generateMessage(this);\n  }\n\n}\n\nif (util.inspect.custom) {\n  /*!\n  * Avoid Node deprecation warning DEP0079\n  */\n  ValidationError.prototype[util.inspect.custom] = ValidationError.prototype.inspect;\n}\n/*!\n * Helper for JSON.stringify\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\n */\n\n\nObject.defineProperty(ValidationError.prototype, 'toJSON', {\n  enumerable: false,\n  writable: false,\n  configurable: true,\n  value: function () {\n    return Object.assign({}, this, {\n      name: this.name,\n      message: this.message\n    });\n  }\n});\nObject.defineProperty(ValidationError.prototype, 'name', {\n  value: 'ValidationError'\n});\n/*!\n * ignore\n */\n\nfunction _generateMessage(err) {\n  const keys = Object.keys(err.errors || {});\n  const len = keys.length;\n  const msgs = [];\n  let key;\n\n  for (let i = 0; i < len; ++i) {\n    key = keys[i];\n\n    if (err === err.errors[key]) {\n      continue;\n    }\n\n    msgs.push(key + ': ' + err.errors[key].message);\n  }\n\n  return msgs.join(', ');\n}\n/*!\n * Module exports\n */\n\n\nmodule.exports = ValidationError;","map":{"version":3,"sources":["/home/gregorian/calendar-ui/node_modules/mongoose/lib/error/validation.js"],"names":["MongooseError","require","getConstructorName","util","ValidationError","constructor","instance","_message","modelName","errors","$errors","toString","name","_generateMessage","inspect","Object","assign","Error","message","addError","path","error","custom","prototype","defineProperty","enumerable","writable","configurable","value","err","keys","len","length","msgs","key","i","push","join","module","exports"],"mappings":"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","sourcesContent":["/*!\n * Module requirements\n */\n\n'use strict';\n\nconst MongooseError = require('./mongooseError');\nconst getConstructorName = require('../helpers/getConstructorName');\nconst util = require('util');\n\nclass ValidationError extends MongooseError {\n  /**\n   * Document Validation Error\n   *\n   * @api private\n   * @param {Document} [instance]\n   * @inherits MongooseError\n   */\n  constructor(instance) {\n    let _message;\n    if (getConstructorName(instance) === 'model') {\n      _message = instance.constructor.modelName + ' validation failed';\n    } else {\n      _message = 'Validation failed';\n    }\n\n    super(_message);\n\n    this.errors = {};\n    this._message = _message;\n\n    if (instance) {\n      instance.$errors = this.errors;\n    }\n  }\n\n  /**\n   * Console.log helper\n   */\n  toString() {\n    return this.name + ': ' + _generateMessage(this);\n  }\n\n  /*!\n   * inspect helper\n   */\n  inspect() {\n    return Object.assign(new Error(this.message), this);\n  }\n\n  /*!\n  * add message\n  */\n  addError(path, error) {\n    this.errors[path] = error;\n    this.message = this._message + ': ' + _generateMessage(this);\n  }\n}\n\n\nif (util.inspect.custom) {\n  /*!\n  * Avoid Node deprecation warning DEP0079\n  */\n\n  ValidationError.prototype[util.inspect.custom] = ValidationError.prototype.inspect;\n}\n\n/*!\n * Helper for JSON.stringify\n * Ensure `name` and `message` show up in toJSON output re: gh-9847\n */\nObject.defineProperty(ValidationError.prototype, 'toJSON', {\n  enumerable: false,\n  writable: false,\n  configurable: true,\n  value: function() {\n    return Object.assign({}, this, { name: this.name, message: this.message });\n  }\n});\n\n\nObject.defineProperty(ValidationError.prototype, 'name', {\n  value: 'ValidationError'\n});\n\n/*!\n * ignore\n */\n\nfunction _generateMessage(err) {\n  const keys = Object.keys(err.errors || {});\n  const len = keys.length;\n  const msgs = [];\n  let key;\n\n  for (let i = 0; i < len; ++i) {\n    key = keys[i];\n    if (err === err.errors[key]) {\n      continue;\n    }\n    msgs.push(key + ': ' + err.errors[key].message);\n  }\n\n  return msgs.join(', ');\n}\n\n/*!\n * Module exports\n */\n\nmodule.exports = ValidationError;\n"]},"metadata":{},"sourceType":"script"}