[{"/home/gregorian/calendar-ui/ui/src/index.js":"1","/home/gregorian/calendar-ui/ui/src/reportWebVitals.js":"2","/home/gregorian/calendar-ui/ui/src/App.js":"3","/home/gregorian/calendar-ui/ui/src/components/Contexts.js":"4","/home/gregorian/calendar-ui/ui/src/components/Calendar/Calendar.js":"5","/home/gregorian/calendar-ui/ui/src/utilities/dateUtilities.js":"6","/home/gregorian/calendar-ui/ui/src/components/Week.js":"7","/home/gregorian/calendar-ui/ui/src/components/DayLabels.js":"8","/home/gregorian/calendar-ui/ui/src/components/Header.js":"9","/home/gregorian/calendar-ui/ui/src/components/HourTicks.js":"10","/home/gregorian/calendar-ui/ui/src/components/Calendar/reducer.js":"11","/home/gregorian/calendar-ui/ui/src/components/forms/NewJobModal.js":"12","/home/gregorian/calendar-ui/ui/src/components/forms/JobModal.js":"13","/home/gregorian/calendar-ui/ui/src/Model/Jobs.js":"14","/home/gregorian/calendar-ui/ui/src/useGapi/useGapi.js":"15","/home/gregorian/calendar-ui/ui/src/components/Day.js":"16","/home/gregorian/calendar-ui/ui/src/components/forms/Modal.js":"17","/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js":"18","/home/gregorian/calendar-ui/ui/src/useGapi/constants.js":"19","/home/gregorian/calendar-ui/ui/src/useGapi/reshape.js":"20","/home/gregorian/calendar-ui/ui/src/useGapi/eventType.js":"21","/home/gregorian/calendar-ui/ui/src/components/Events.js":"22","/home/gregorian/calendar-ui/ui/src/components/Hours.js":"23","/home/gregorian/calendar-ui/ui/src/components/forms/StartEndInput.js":"24","/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js":"25","/home/gregorian/calendar-ui/ui/src/components/forms/reducer.js":"26","/home/gregorian/calendar-ui/ui/src/components/hooks/useInput.js":"27","/home/gregorian/calendar-ui/ui/src/components/hooks/useArray.js":"28","/home/gregorian/calendar-ui/ui/src/utilities/batchProcess.js":"29","/home/gregorian/calendar-ui/ui/src/eventGeometry/eventGeometry.js":"30","/home/gregorian/calendar-ui/ui/src/utilities/timeConversions.js":"31","/home/gregorian/calendar-ui/ui/src/eventGeometry/groupEvents.js":"32","/home/gregorian/calendar-ui/ui/src/components/Event.js":"33","/home/gregorian/calendar-ui/ui/src/components/gcalEvent.js":"34","/home/gregorian/calendar-ui/ui/src/components/useDetectBottomEdge.js":"35","/home/gregorian/calendar-ui/ui/src/utilities/utilities.js":"36","/home/gregorian/calendar-ui/ui/src/components/useDrag.js":"37","/home/gregorian/calendar-ui/ui/src/utilities/processMongooseError.js":"38","/home/gregorian/calendar-ui/ui/src/app/store.js":"39","/home/gregorian/calendar-ui/ui/src/components/Calendar/calendarSlice.js":"40","/home/gregorian/calendar-ui/ui/src/components/forms/JobDetails.js":"41","/home/gregorian/calendar-ui/ui/src/components/forms/EditJobForm.js":"42","/home/gregorian/calendar-ui/ui/src/components/forms/CreateJobForm.js":"43"},{"size":713,"mtime":1636222402569,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1635084169605,"results":"46","hashOfConfig":"45"},{"size":3163,"mtime":1636487633997,"results":"47","hashOfConfig":"45"},{"size":107,"mtime":1635084169605,"results":"48","hashOfConfig":"45"},{"size":2825,"mtime":1636480277728,"results":"49","hashOfConfig":"45"},{"size":1773,"mtime":1635084169605,"results":"50","hashOfConfig":"45"},{"size":801,"mtime":1636386253501,"results":"51","hashOfConfig":"45"},{"size":1111,"mtime":1635084169605,"results":"52","hashOfConfig":"45"},{"size":825,"mtime":1636484960057,"results":"53","hashOfConfig":"45"},{"size":2226,"mtime":1635084169605,"results":"54","hashOfConfig":"45"},{"size":1633,"mtime":1635084169605,"results":"55","hashOfConfig":"45"},{"size":823,"mtime":1636386112521,"results":"56","hashOfConfig":"45"},{"size":9074,"mtime":1636386362001,"results":"57","hashOfConfig":"45"},{"size":1438,"mtime":1636489773717,"results":"58","hashOfConfig":"45"},{"size":3804,"mtime":1635084169605,"results":"59","hashOfConfig":"45"},{"size":985,"mtime":1636386245491,"results":"60","hashOfConfig":"45"},{"size":504,"mtime":1635084169605,"results":"61","hashOfConfig":"45"},{"size":8686,"mtime":1636487852997,"results":"62","hashOfConfig":"45"},{"size":164,"mtime":1635084169605,"results":"63","hashOfConfig":"45"},{"size":235,"mtime":1635084169605,"results":"64","hashOfConfig":"45"},{"size":6192,"mtime":1635084169605,"results":"65","hashOfConfig":"45"},{"size":1757,"mtime":1636386234501,"results":"66","hashOfConfig":"45"},{"size":1224,"mtime":1636487664647,"results":"67","hashOfConfig":"45"},{"size":1524,"mtime":1635084169605,"results":"68","hashOfConfig":"45"},{"size":3441,"mtime":1636486899537,"results":"69","hashOfConfig":"45"},{"size":256,"mtime":1635084169605,"results":"70","hashOfConfig":"45"},{"size":257,"mtime":1635084169605,"results":"71","hashOfConfig":"45"},{"size":789,"mtime":1635084169605,"results":"72","hashOfConfig":"45"},{"size":825,"mtime":1635084169605,"results":"73","hashOfConfig":"45"},{"size":1673,"mtime":1635084169605,"results":"74","hashOfConfig":"45"},{"size":608,"mtime":1635084169605,"results":"75","hashOfConfig":"45"},{"size":2578,"mtime":1635084169605,"results":"76","hashOfConfig":"45"},{"size":3919,"mtime":1636449209079,"results":"77","hashOfConfig":"45"},{"size":1243,"mtime":1635084169605,"results":"78","hashOfConfig":"45"},{"size":606,"mtime":1635084169605,"results":"79","hashOfConfig":"45"},{"size":477,"mtime":1635084169605,"results":"80","hashOfConfig":"45"},{"size":4825,"mtime":1635084169605,"results":"81","hashOfConfig":"45"},{"size":975,"mtime":1635536994396,"results":"82","hashOfConfig":"45"},{"size":206,"mtime":1636216760960,"results":"83","hashOfConfig":"45"},{"size":3048,"mtime":1636488634557,"results":"84","hashOfConfig":"45"},{"size":5250,"mtime":1636486242027,"results":"85","hashOfConfig":"45"},{"size":696,"mtime":1636487743297,"results":"86","hashOfConfig":"45"},{"size":1102,"mtime":1636489899337,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"yt6ytb",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gregorian/calendar-ui/ui/src/index.js",[],["182","183"],"/home/gregorian/calendar-ui/ui/src/reportWebVitals.js",[],"/home/gregorian/calendar-ui/ui/src/App.js",["184","185","186"],"/home/gregorian/calendar-ui/ui/src/components/Contexts.js",[],"/home/gregorian/calendar-ui/ui/src/components/Calendar/Calendar.js",["187","188","189"],"/home/gregorian/calendar-ui/ui/src/utilities/dateUtilities.js",[],"/home/gregorian/calendar-ui/ui/src/components/Week.js",[],"/home/gregorian/calendar-ui/ui/src/components/DayLabels.js",[],"/home/gregorian/calendar-ui/ui/src/components/Header.js",["190"],"import { Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\n\nimport { monthAndYear } from \"../utilities/dateUtilities.js\";\n\nimport { useHistory } from \"react-router\";\n\nexport default function Header({\n  currentDate,\n  incrementWeek,\n  decrementWeek,\n  handleShowModal,\n}) {\n  const history = useHistory();\n\n  return (\n    <Toolbar>\n      <Button onClick={decrementWeek}>\n        <ArrowBack />\n      </Button>\n      <Typography variant=\"h4\">{monthAndYear(currentDate)}</Typography>\n\n      <Button onClick={incrementWeek}>\n        <ArrowForward />\n      </Button>\n\n      {/* <Button\n        onClick={() => history.push(\"/calendar/job-form\")}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        new job\n      </Button> */}\n    </Toolbar>\n  );\n}\n","/home/gregorian/calendar-ui/ui/src/components/HourTicks.js",[],"/home/gregorian/calendar-ui/ui/src/components/Calendar/reducer.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/NewJobModal.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/JobModal.js",["191","192","193","194","195","196"],"import Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport JobForm from \"./JobForm\";\nimport { PersonOutline } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontVariant: \"small-caps\",\n    color: \"#324191\",\n  },\n  group: {\n    marginBottom: \"0.5em\",\n  },\n  content: {\n    paddingTop: 0,\n  },\n  li: {\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n  },\n  container: {\n    marginTop: 20,\n    backgroundColor: \"#F3F3FB\",\n  },\n  list: {\n    padding: 0,\n    \"& > li\": {\n      padding: 0,\n    },\n  },\n  pricing: {\n    marginTop: theme.spacing(2), //TODO use row class for top margin\n    textAlign: \"center\",\n  },\n  items: {\n    whiteSpace: \"pre-line\",\n  },\n  row: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function JobModal({ displayEvent, close, updateEvent }) {\n  const classes = useStyles();\n  const [editMode, setEditMode] = React.useState(false);\n\n  const { start, end, customer, charges, operatives, items, addresses } =\n    displayEvent;\n\n  //const { customer } = displayEvent;\n\n  //TODO: map over operatives\n  return (\n    <Modal>\n      {editMode ? (\n        <Card style={{ width: 600, backgroundColor: \"#F3F3FB\" }}>\n          <CardContent>\n            <JobForm\n              title=\"Edit Job\"\n              initialValues={displayEvent}\n              close={close}\n            />\n          </CardContent>\n        </Card>\n      ) : (\n        <>\n          <Card style={{ width: 1200, backgroundColor: \"#F3F3FB\" }}>\n            <CardHeader\n              title={customer.name}\n              action={\n                <>\n                  <IconButton\n                    onClick={() => {\n                      setEditMode(true);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton onClick={close}>\n                    <CloseIcon />\n                  </IconButton>\n                </>\n              }\n            />\n            <CardHeader />\n            <CardContent className={classes.content}>\n              <Grid container spacing={3}>\n                <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Customer Details\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PersonIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.name}\n                            secondary=\"name\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PhoneIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.mobile}\n                            secondary=\"mobile\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <EmailIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.email}\n                            secondary=\"email\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                  <Grid container spacing={1} className={classes.pricing}>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.hourlyRate}\n                          subheader={\"per hour\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.fuelCharge}\n                          subheader={\"fuel charge\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.travelTime}\n                          subheader={\"travel time\"}\n                        />\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <Card>\n                    <CardHeader title={\"Items\"} />\n                    <CardContent className={classes.items}>{items}</CardContent>\n                  </Card>\n                </Grid>\n                {/* <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Removal Operatives\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[0].value}\n                            secondary=\"first man\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[1].value}\n                            secondary=\"second man\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                </Grid> */}\n              </Grid>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </Modal>\n\n    /* editMode\n        ?\n        <EditJobModal data={displayEvent} addToEvents={addToEvents}/>\n            :\n        <Modal\n        open={true}\n        >\n            <Card style={{width: 300}}>\n                <CardHeader\n                    title={summary}\n                    action={\n                        <>\n                            <IconButton>\n                                <EditIcon onClick={()=>{setEditMode(true)}}/>\n                            </IconButton>\n                            <IconButton>\n                                <CloseIcon onClick={close}/>\n                            </IconButton>\n                        </>\n\n                    }\n                />\n                <CardContent className={classes.content}>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            location\n                        </Typography>\n                        <Typography variant='body2'>\n                            {location}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            start\n                        </Typography>\n                        <Typography variant='body1'>\n                            {start.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            end\n                        </Typography>\n                        <Typography variant='body1'>\n                            {end.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            description\n                        </Typography>\n                        <Typography variant='body1'>\n                            {description}\n                        </Typography>\n                    </div>\n\n\n\n\n                    <Typography>\n\n                    </Typography>\n\n\n                </CardContent>\n            </Card>\n        </Modal>*/\n  );\n}\n","/home/gregorian/calendar-ui/ui/src/Model/Jobs.js",["197"],"/home/gregorian/calendar-ui/ui/src/useGapi/useGapi.js",[],"/home/gregorian/calendar-ui/ui/src/components/Day.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/Modal.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js",["198","199","200","201","202","203","204","205","206","207","208"],"/home/gregorian/calendar-ui/ui/src/useGapi/constants.js",[],"/home/gregorian/calendar-ui/ui/src/useGapi/reshape.js",[],"/home/gregorian/calendar-ui/ui/src/useGapi/eventType.js",[],"/home/gregorian/calendar-ui/ui/src/components/Events.js",[],"/home/gregorian/calendar-ui/ui/src/components/Hours.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/StartEndInput.js",["209"],"import { Grid } from \"@material-ui/core\";\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider,\n  TimePicker,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nfunction dateTimeFromInput(date, time) {\n  const hours = time.getHours();\n  const minutes = time.getMinutes();\n  let res = new Date(date);\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  return res;\n}\n\n//export function StartEndInput({startName,endName,startValue,endValue,onStartChange,onEndChange}){\n\nexport function StartEndInput({\n  startName,\n  endName,\n  startValue,\n  endValue,\n  onStartChange,\n  onEndChange,\n  formikProps\n}) {\n  const handleDateChange = (date) => {\n    onStartChange(dateTimeFromInput(date, startValue));\n    onEndChange(dateTimeFromInput(date, endValue));\n  };\n\n \n\n  return (\n    <Container>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DatePicker\n          value={startValue}\n          onChange={handleDateChange}\n          label=\"date\"\n        />\n      </MuiPickersUtilsProvider>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <TimePicker\n          value={startValue}\n          onChange={onStartChange}\n          label=\"start\"\n        />\n      </MuiPickersUtilsProvider>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <TimePicker value={endValue} onChange={onEndChange} label=\"end\" />\n      </MuiPickersUtilsProvider>\n    </Container>\n  );\n}\n",["210","211"],"/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js",["212","213"],"import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Grid,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport HouseIcon from \"@material-ui/icons/House\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport cuid from \"cuid\";\nimport produce from \"immer\";\nimport { PromiseProvider } from \"mongoose\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    inline: {\n      display: \"flex\",\n    },\n  })\n);\n\nexport function ListBuilder({\n  name,\n  value = [],\n  onChange,\n  label,\n  errors,\n  itemName,\n}) {\n  //TODO should maybe be thinking about a shared constructor for this\n  //we are making an object like this on api as well\n\n  function wrap(value) {\n    return {\n      _id: cuid(),\n      value,\n    };\n  }\n\n  const addAddress = (value, address) => {\n    const updatedValue = produce(value, (draft) => {\n      draft.push(wrap(address));\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name,\n      },\n    };\n    onChange(e);\n  };\n\n  const removeAddress = (value, id) => {\n    const updatedValue = produce(value, (draft) => {\n      return draft.filter((el) => el._id !== id);\n    });\n    const e = {\n      target: {\n        value: updatedValue,\n        name: name,\n      },\n    };\n    onChange(e);\n  };\n\n  const [input, setInput] = React.useState(\"\");\n\n  const classes = useStyles();\n\n  function getError(index) {\n    if (errors && errors[index]) {\n      return errors[index].value;\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <List dense>\n        {value &&\n          value.map((a, i) => (\n            <ListItem key={a._id}>\n              <ListItemAvatar>\n                <HouseIcon></HouseIcon>\n              </ListItemAvatar>\n              <ListItemText\n                //className={classes.inline}\n                primary={\n                  <>\n                    <Typography variant={\"body1\"} display=\"inline\">\n                      {a.value}\n                    </Typography>\n                    {getError(i) ? (\n                      <Typography variant=\"caption\" color=\"error\">\n                        {`  - ${getError(i)}`}\n                      </Typography>\n                    ) : (\n                      <Typography variant=\"caption\">\n                        {\" \"}\n                        - {itemName}\n                        {i + 1}\n                      </Typography>\n                    )}\n                  </>\n                }\n                disableTypography\n              />\n              <ListItemSecondaryAction>\n                <CloseIcon\n                  color=\"primary\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    removeAddress(value, a._id);\n                  }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n      </List>\n      <Grid item>\n        <TextField\n          label={label}\n          value={input}\n          fullWidth\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            addAddress(value, input);\n            setInput(\"\");\n          }}\n        >\n          +\n        </button>\n      </Grid>\n    </>\n  );\n}\n","/home/gregorian/calendar-ui/ui/src/components/forms/reducer.js",[],"/home/gregorian/calendar-ui/ui/src/components/hooks/useInput.js",[],"/home/gregorian/calendar-ui/ui/src/components/hooks/useArray.js",[],"/home/gregorian/calendar-ui/ui/src/utilities/batchProcess.js",[],"/home/gregorian/calendar-ui/ui/src/eventGeometry/eventGeometry.js",[],"/home/gregorian/calendar-ui/ui/src/utilities/timeConversions.js",[],"/home/gregorian/calendar-ui/ui/src/eventGeometry/groupEvents.js",[],"/home/gregorian/calendar-ui/ui/src/components/Event.js",[],"/home/gregorian/calendar-ui/ui/src/components/gcalEvent.js",[],"/home/gregorian/calendar-ui/ui/src/components/useDetectBottomEdge.js",[],"/home/gregorian/calendar-ui/ui/src/utilities/utilities.js",[],"/home/gregorian/calendar-ui/ui/src/components/useDrag.js",[],"/home/gregorian/calendar-ui/ui/src/utilities/processMongooseError.js",["214"],"const { get, set } = require(\"lodash\");\n\nfunction convertToLodashDotPath(mongooseDotPath) {\n  return mongooseDotPath.replace(/\\d+/g, (match) => {\n    return `[${match}]`;\n  });\n}\n\nfunction isValidatorError(err) {\n  if (err.name === \"ValidatorError\") return true;\n  return false;\n}\n\nfunction getValidatorMessage(err) {\n  return err.message;\n}\n\nfunction isCastError(err) {\n  if (err.name === \"CastError\") return true;\n  return false;\n}\n\nfunction getCastMessage(err) {\n  return `should be a ${err.kind}`;\n}\n\nfunction processMongooseError(err) {\n  if (!err) return null;\n  const result = {};\n\n  for (let [key, value] of Object.entries(err.errors)) {\n    const path = convertToLodashDotPath(key);\n    console.log(path);\n    if (isCastError(value)) set(result, path, getCastMessage(value));\n    else if (isValidatorError(value)) {\n      set(result, path, getValidatorMessage(value));\n    }\n  }\n  return result;\n}\n\nmodule.exports = { processMongooseError, convertToLodashDotPath };\n","/home/gregorian/calendar-ui/ui/src/app/store.js",[],"/home/gregorian/calendar-ui/ui/src/components/Calendar/calendarSlice.js",["215"],"/home/gregorian/calendar-ui/ui/src/components/forms/JobDetails.js",["216","217","218","219","220","221","222","223","224","225","226"],"import Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport JobForm from \"./JobForm\";\nimport { PersonOutline } from \"@material-ui/icons\";\n\nimport { useParams, useHistory, useRouteMatch } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontVariant: \"small-caps\",\n    color: \"#324191\",\n  },\n  group: {\n    marginBottom: \"0.5em\",\n  },\n  content: {\n    paddingTop: 0,\n  },\n  li: {\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n  },\n  container: {\n    marginTop: 20,\n    backgroundColor: \"#F3F3FB\",\n  },\n  list: {\n    padding: 0,\n    \"& > li\": {\n      padding: 0,\n    },\n  },\n  pricing: {\n    marginTop: theme.spacing(2), //TODO use row class for top margin\n    textAlign: \"center\",\n  },\n  items: {\n    whiteSpace: \"pre-line\",\n  },\n  row: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport function JobDetails({ displayEvent, close, updateEvent }) {\n  const classes = useStyles();\n  const [editMode, setEditMode] = React.useState(false);\n\n  const history = useHistory();\n\n  let { id } = useParams();\n\n  console.log(id);\n\n  let job = useSelector((state) =>\n    state.calendar.events.find((event) => event._id == id)\n  );\n\n  const { start, end, customer, charges, operatives, items, addresses } = job;\n\n  //const { customer } = displayEvent;\n\n  //TODO: map over operatives\n  return (\n    <Modal>\n      <Card style={{ width: 1200, backgroundColor: \"#F3F3FB\" }}>\n        <CardHeader\n          title={customer.name}\n          action={\n            <>\n              <IconButton\n                onClick={() => {\n                  history.push(`/calendar/edit-job-form/${id}`);\n                }}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  history.push(\"/\");\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </>\n          }\n        />\n        <CardHeader />\n        <CardContent className={classes.content}>\n          <Grid container spacing={3}>\n            <Grid item xs={4}>\n              <Card className={classes.card}>\n                <CardHeader title={\"Customer Details\"}></CardHeader>\n                <CardContent>\n                  <List className={classes.list}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <PersonIcon />\n                      </ListItemIcon>\n                      <ListItemText primary={customer.name} secondary=\"name\" />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <PhoneIcon />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={customer.mobile}\n                        secondary=\"mobile\"\n                      />\n                    </ListItem>\n                    <ListItem>\n                      <ListItemIcon>\n                        <EmailIcon />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={customer.email}\n                        secondary=\"email\"\n                      />\n                    </ListItem>\n                  </List>\n                </CardContent>\n              </Card>\n              <Grid container spacing={1} className={classes.pricing}>\n                <Grid item xs={4}>\n                  <Card>\n                    <CardHeader\n                      title={charges.hourlyRate}\n                      subheader={\"per hour\"}\n                    />\n                  </Card>\n                </Grid>\n                <Grid item xs={4}>\n                  <Card>\n                    <CardHeader\n                      title={charges.fuelCharge}\n                      subheader={\"fuel charge\"}\n                    />\n                  </Card>\n                </Grid>\n                <Grid item xs={4}>\n                  <Card>\n                    <CardHeader\n                      title={charges.travelTime}\n                      subheader={\"travel time\"}\n                    />\n                  </Card>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardHeader title={\"Items\"} />\n                <CardContent className={classes.items}>{items}</CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Modal>\n  );\n}\n","/home/gregorian/calendar-ui/ui/src/components/forms/EditJobForm.js",["227","228"],"/home/gregorian/calendar-ui/ui/src/components/forms/CreateJobForm.js",["229","230"],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":19},{"ruleId":"235","severity":1,"message":"239","line":14,"column":8,"nodeType":"237","messageId":"238","endLine":14,"endColumn":15},{"ruleId":"235","severity":1,"message":"240","line":22,"column":3,"nodeType":"237","messageId":"238","endLine":22,"endColumn":7},{"ruleId":"235","severity":1,"message":"241","line":11,"column":10,"nodeType":"237","messageId":"238","endLine":11,"endColumn":19},{"ruleId":"235","severity":1,"message":"242","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":20},{"ruleId":"235","severity":1,"message":"243","line":20,"column":10,"nodeType":"237","messageId":"238","endLine":20,"endColumn":17},{"ruleId":"235","severity":1,"message":"244","line":14,"column":9,"nodeType":"237","messageId":"238","endLine":14,"endColumn":16},{"ruleId":"235","severity":1,"message":"245","line":12,"column":8,"nodeType":"237","messageId":"238","endLine":12,"endColumn":28},{"ruleId":"235","severity":1,"message":"246","line":21,"column":10,"nodeType":"237","messageId":"238","endLine":21,"endColumn":23},{"ruleId":"235","severity":1,"message":"247","line":67,"column":11,"nodeType":"237","messageId":"238","endLine":67,"endColumn":16},{"ruleId":"235","severity":1,"message":"248","line":67,"column":18,"nodeType":"237","messageId":"238","endLine":67,"endColumn":21},{"ruleId":"235","severity":1,"message":"249","line":67,"column":42,"nodeType":"237","messageId":"238","endLine":67,"endColumn":52},{"ruleId":"235","severity":1,"message":"250","line":67,"column":61,"nodeType":"237","messageId":"238","endLine":67,"endColumn":70},{"ruleId":"251","severity":1,"message":"252","line":62,"column":1,"nodeType":"253","endLine":66,"endColumn":3},{"ruleId":"235","severity":1,"message":"254","line":9,"column":21,"nodeType":"237","messageId":"238","endLine":9,"endColumn":25},{"ruleId":"235","severity":1,"message":"255","line":13,"column":10,"nodeType":"237","messageId":"238","endLine":13,"endColumn":22},{"ruleId":"235","severity":1,"message":"256","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":21},{"ruleId":"235","severity":1,"message":"257","line":14,"column":23,"nodeType":"237","messageId":"238","endLine":14,"endColumn":34},{"ruleId":"235","severity":1,"message":"258","line":15,"column":10,"nodeType":"237","messageId":"238","endLine":15,"endColumn":19},{"ruleId":"235","severity":1,"message":"259","line":15,"column":21,"nodeType":"237","messageId":"238","endLine":15,"endColumn":31},{"ruleId":"235","severity":1,"message":"260","line":17,"column":41,"nodeType":"237","messageId":"238","endLine":17,"endColumn":51},{"ruleId":"235","severity":1,"message":"261","line":19,"column":10,"nodeType":"237","messageId":"238","endLine":19,"endColumn":18},{"ruleId":"235","severity":1,"message":"262","line":19,"column":20,"nodeType":"237","messageId":"238","endLine":19,"endColumn":28},{"ruleId":"235","severity":1,"message":"263","line":27,"column":10,"nodeType":"237","messageId":"238","endLine":27,"endColumn":20},{"ruleId":"235","severity":1,"message":"264","line":32,"column":10,"nodeType":"237","messageId":"238","endLine":32,"endColumn":18},{"ruleId":"235","severity":1,"message":"254","line":1,"column":10,"nodeType":"237","messageId":"238","endLine":1,"endColumn":14},{"ruleId":"231","replacedBy":"265"},{"ruleId":"233","replacedBy":"266"},{"ruleId":"235","severity":1,"message":"267","line":18,"column":10,"nodeType":"237","messageId":"238","endLine":18,"endColumn":25},{"ruleId":"235","severity":1,"message":"268","line":74,"column":9,"nodeType":"237","messageId":"238","endLine":74,"endColumn":16},{"ruleId":"235","severity":1,"message":"269","line":1,"column":9,"nodeType":"237","messageId":"238","endLine":1,"endColumn":12},{"ruleId":"270","severity":1,"message":"271","line":51,"column":30,"nodeType":"272","messageId":"273","endLine":51,"endColumn":32},{"ruleId":"235","severity":1,"message":"245","line":12,"column":8,"nodeType":"237","messageId":"238","endLine":12,"endColumn":28},{"ruleId":"235","severity":1,"message":"239","line":20,"column":8,"nodeType":"237","messageId":"238","endLine":20,"endColumn":15},{"ruleId":"235","severity":1,"message":"246","line":21,"column":10,"nodeType":"237","messageId":"238","endLine":21,"endColumn":23},{"ruleId":"235","severity":1,"message":"274","line":23,"column":33,"nodeType":"237","messageId":"238","endLine":23,"endColumn":46},{"ruleId":"235","severity":1,"message":"275","line":68,"column":10,"nodeType":"237","messageId":"238","endLine":68,"endColumn":18},{"ruleId":"235","severity":1,"message":"276","line":68,"column":20,"nodeType":"237","messageId":"238","endLine":68,"endColumn":31},{"ruleId":"270","severity":1,"message":"271","line":77,"column":53,"nodeType":"272","messageId":"273","endLine":77,"endColumn":55},{"ruleId":"235","severity":1,"message":"247","line":80,"column":11,"nodeType":"237","messageId":"238","endLine":80,"endColumn":16},{"ruleId":"235","severity":1,"message":"248","line":80,"column":18,"nodeType":"237","messageId":"238","endLine":80,"endColumn":21},{"ruleId":"235","severity":1,"message":"249","line":80,"column":42,"nodeType":"237","messageId":"238","endLine":80,"endColumn":52},{"ruleId":"235","severity":1,"message":"250","line":80,"column":61,"nodeType":"237","messageId":"238","endLine":80,"endColumn":70},{"ruleId":"235","severity":1,"message":"277","line":4,"column":33,"nodeType":"237","messageId":"238","endLine":4,"endColumn":44},{"ruleId":"270","severity":1,"message":"271","line":13,"column":53,"nodeType":"272","messageId":"273","endLine":13,"endColumn":55},{"ruleId":"235","severity":1,"message":"257","line":3,"column":23,"nodeType":"237","messageId":"238","endLine":3,"endColumn":34},{"ruleId":"235","severity":1,"message":"258","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":19},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"no-unused-vars","'NewJobModal' is defined but never used.","Identifier","unusedVar","'JobForm' is defined but never used.","'Link' is defined but never used.","'fetchDays' is defined but never used.","'fitsInWeek' is defined but never used.","'useWeek' is defined but never used.","'history' is assigned a value but never used.","'AccessibilityNewIcon' is defined but never used.","'PersonOutline' is defined but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'operatives' is assigned a value but never used.","'addresses' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Grid' is defined but never used.","'editJobThunk' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'IconButton' is defined but never used.","'parseISO' is defined but never used.","'setHours' is defined but never used.","'Typography' is defined but never used.","'useQuery' is defined but never used.",["278"],["279"],"'PromiseProvider' is defined but never used.","'classes' is assigned a value but never used.","'get' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRouteMatch' is defined but never used.","'editMode' is assigned a value but never used.","'setEditMode' is assigned a value but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]