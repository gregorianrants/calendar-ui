[{"/home/gregorian/calendar-ui/ui/src/index.js":"1","/home/gregorian/calendar-ui/ui/src/reportWebVitals.js":"2","/home/gregorian/calendar-ui/ui/src/App.js":"3","/home/gregorian/calendar-ui/ui/src/components/Contexts.js":"4","/home/gregorian/calendar-ui/ui/src/components/Calendar/Calendar.js":"5","/home/gregorian/calendar-ui/ui/src/utilities/dateUtilities.js":"6","/home/gregorian/calendar-ui/ui/src/components/Week.js":"7","/home/gregorian/calendar-ui/ui/src/components/DayLabels.js":"8","/home/gregorian/calendar-ui/ui/src/components/Header.js":"9","/home/gregorian/calendar-ui/ui/src/components/HourTicks.js":"10","/home/gregorian/calendar-ui/ui/src/components/Calendar/reducer.js":"11","/home/gregorian/calendar-ui/ui/src/components/forms/NewJobModal.js":"12","/home/gregorian/calendar-ui/ui/src/components/forms/JobModal.js":"13","/home/gregorian/calendar-ui/ui/src/Model/Jobs.js":"14","/home/gregorian/calendar-ui/ui/src/useGapi/useGapi.js":"15","/home/gregorian/calendar-ui/ui/src/components/Day.js":"16","/home/gregorian/calendar-ui/ui/src/components/forms/Modal.js":"17","/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js":"18","/home/gregorian/calendar-ui/ui/src/useGapi/constants.js":"19","/home/gregorian/calendar-ui/ui/src/useGapi/reshape.js":"20","/home/gregorian/calendar-ui/ui/src/useGapi/eventType.js":"21","/home/gregorian/calendar-ui/ui/src/components/Events.js":"22","/home/gregorian/calendar-ui/ui/src/components/Hours.js":"23","/home/gregorian/calendar-ui/ui/src/components/forms/StartEndInput.js":"24","/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js":"25","/home/gregorian/calendar-ui/ui/src/components/forms/reducer.js":"26","/home/gregorian/calendar-ui/ui/src/components/hooks/useInput.js":"27","/home/gregorian/calendar-ui/ui/src/components/hooks/useArray.js":"28","/home/gregorian/calendar-ui/ui/src/utilities/batchProcess.js":"29","/home/gregorian/calendar-ui/ui/src/eventGeometry/eventGeometry.js":"30","/home/gregorian/calendar-ui/ui/src/utilities/timeConversions.js":"31","/home/gregorian/calendar-ui/ui/src/eventGeometry/groupEvents.js":"32","/home/gregorian/calendar-ui/ui/src/components/Event.js":"33","/home/gregorian/calendar-ui/ui/src/components/gcalEvent.js":"34","/home/gregorian/calendar-ui/ui/src/components/useDetectBottomEdge.js":"35","/home/gregorian/calendar-ui/ui/src/utilities/utilities.js":"36","/home/gregorian/calendar-ui/ui/src/components/useDrag.js":"37"},{"size":500,"mtime":1635084169605,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1635084169605,"results":"40","hashOfConfig":"39"},{"size":2646,"mtime":1635084169605,"results":"41","hashOfConfig":"39"},{"size":107,"mtime":1635084169605,"results":"42","hashOfConfig":"39"},{"size":4076,"mtime":1635084169605,"results":"43","hashOfConfig":"39"},{"size":1773,"mtime":1635084169605,"results":"44","hashOfConfig":"39"},{"size":815,"mtime":1635084169605,"results":"45","hashOfConfig":"39"},{"size":1111,"mtime":1635084169605,"results":"46","hashOfConfig":"39"},{"size":854,"mtime":1635084169605,"results":"47","hashOfConfig":"39"},{"size":2226,"mtime":1635084169605,"results":"48","hashOfConfig":"39"},{"size":1633,"mtime":1635084169605,"results":"49","hashOfConfig":"39"},{"size":878,"mtime":1635084169605,"results":"50","hashOfConfig":"39"},{"size":9114,"mtime":1635084169605,"results":"51","hashOfConfig":"39"},{"size":1597,"mtime":1635084169605,"results":"52","hashOfConfig":"39"},{"size":3804,"mtime":1635084169605,"results":"53","hashOfConfig":"39"},{"size":1022,"mtime":1635084169605,"results":"54","hashOfConfig":"39"},{"size":504,"mtime":1635084169605,"results":"55","hashOfConfig":"39"},{"size":8193,"mtime":1635536898126,"results":"56","hashOfConfig":"39"},{"size":164,"mtime":1635084169605,"results":"57","hashOfConfig":"39"},{"size":235,"mtime":1635084169605,"results":"58","hashOfConfig":"39"},{"size":6192,"mtime":1635084169605,"results":"59","hashOfConfig":"39"},{"size":1812,"mtime":1635084169605,"results":"60","hashOfConfig":"39"},{"size":1036,"mtime":1635084169605,"results":"61","hashOfConfig":"39"},{"size":1524,"mtime":1635084169605,"results":"62","hashOfConfig":"39"},{"size":3311,"mtime":1635536898126,"results":"63","hashOfConfig":"39"},{"size":256,"mtime":1635084169605,"results":"64","hashOfConfig":"39"},{"size":257,"mtime":1635084169605,"results":"65","hashOfConfig":"39"},{"size":789,"mtime":1635084169605,"results":"66","hashOfConfig":"39"},{"size":825,"mtime":1635084169605,"results":"67","hashOfConfig":"39"},{"size":1673,"mtime":1635084169605,"results":"68","hashOfConfig":"39"},{"size":608,"mtime":1635084169605,"results":"69","hashOfConfig":"39"},{"size":2578,"mtime":1635084169605,"results":"70","hashOfConfig":"39"},{"size":4024,"mtime":1635084169605,"results":"71","hashOfConfig":"39"},{"size":1243,"mtime":1635084169605,"results":"72","hashOfConfig":"39"},{"size":606,"mtime":1635084169605,"results":"73","hashOfConfig":"39"},{"size":477,"mtime":1635084169605,"results":"74","hashOfConfig":"39"},{"size":4825,"mtime":1635084169605,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"yt6ytb",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/home/gregorian/calendar-ui/ui/src/index.js",[],["155","156"],"/home/gregorian/calendar-ui/ui/src/reportWebVitals.js",[],"/home/gregorian/calendar-ui/ui/src/App.js",["157"],"\nimport './App.css';\nimport Calendar from './components/Calendar/Calendar'\nimport SettingsContext from \"./components/Contexts\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst settingsValue =\n{\n    borderWidth: 1,\n    hourHeight: 30\n}\n\n//TODO will need to read through code at some point and chekc the math, not sure i am accounting for border width when looking\n//at height of each hour/day\n//also need to think about the implciations of the fact that a pixel values in css can be rounded may need to put in some code to account for\n//border width being set by a user to something that gets rounded\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n    <div className=\"App\">\n        <Router>\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            VanCal\n                        </Typography>\n\n                    </Toolbar>\n                </AppBar>\n            </div>\n\n               {/* <div>\n                    <nav>\n                        <ul>\n                            <li>\n                                <Link to='/'>Calendar</Link>\n                            </li>\n                            <li>\n                                <Link to='/table'>Table</Link>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>*/}\n\n            <Switch>\n                <Route path='/table'>\n                    <h1>table goes here</h1>\n                </Route>\n                <Route path='/'>\n                    <SettingsContext.Provider value={settingsValue}>\n                        <Calendar/>\n                    </SettingsContext.Provider>\n                </Route>\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/gregorian/calendar-ui/ui/src/components/Contexts.js",[],"/home/gregorian/calendar-ui/ui/src/components/Calendar/Calendar.js",["158"],"import styled from \"styled-components\";\nimport NewJobModal from \"../forms/NewJobModal\";\n\nimport DayLabels from \"../DayLabels\";\nimport Week from \"../Week\";\nimport HourTicks from \"../HourTicks\";\n\nimport Header from \"../Header\";\nimport settingsContext from \"../Contexts\";\n\nimport { fetchDays } from \"../../Model/Jobs\";\n\nimport React from \"react\";\nimport { fitsInWeek } from \"../../utilities/dateUtilities.js\";\n\nimport JobModal from \"../forms/JobModal\";\n\n//import socketIOClient from \"socket.io-client\";\n\nimport { useWeek } from \"./reducer\";\nimport { useGapi } from \"../../useGapi/useGapi\";\n\nconst CalendarStyled = styled.div`\n  margin: 30px;\n  display: grid;\n  grid-template-rows: 60px 60px ${(props) =>\n      String(props.hourHeight * 24) + \"px\"};\n  grid-template-columns: 60px 1fr;\n`;\n\nexport default function Calendar() {\n  const [daysOnCal, dispatch] = useWeek();\n  const [showNewJobModal, setShowNewJobModal] = React.useState(false);\n  const [displayEvent, setDisplayEvent] = React.useState(null);\n  const [events, setEvents] = React.useState([]);\n  const [gcalEvents, setGcalEvents] = React.useState([]);\n  //TODO have a think about what you are using/nameing current day. what does that mean\n\n  //useGapi also returns a sign out function\n  const { authed, listEvents } = useGapi();\n\n  const { hourHeight } = React.useContext(settingsContext);\n\n  const updateDisplayEvent = (id) => {\n    setDisplayEvent(events.filter((event) => event._id === id)[0]);\n  };\n\n  React.useEffect(() => {\n    fetchDays(daysOnCal.firstDay, daysOnCal.lastDay)\n      .then((data) => {\n        setEvents([...data]); //TODO have a look at what we are doing here what if there is no data\n      })\n      .catch(console.error);\n  }, [daysOnCal]);\n\n  React.useEffect(() => {\n    if (authed) {\n      listEvents(daysOnCal.firstDay, daysOnCal.lastDay) //TODO should technically be a dependancy need to wrap it in useCallback\n        .then(setGcalEvents);\n\n      console.log(\"aggghhhh\");\n    }\n  }, [authed, daysOnCal]); //added in the listEvebts due to a warning in conslol\n\n  /*  React.useEffect(()=>{\n        const socket = socketIOClient('http://localhost:8000');\n        console.log(socket)\n\n        socket.on('message',(msg)=>{\n            fetchWeekContaining(firstDayOfWeek)\n                .then(data=> {\n                    setEvents(data)\n                })\n                .catch(console.error)\n        })\n    },[firstDayOfWeek])*/\n\n  const incrementWeek = () => {\n    dispatch({ type: \"INCREMENT\" });\n  };\n\n  const decrementWeek = () => {\n    dispatch({ type: \"DECREMENT\" });\n  };\n\n  const toggleNewJobModal = () => {\n    setShowNewJobModal((val) => !val);\n  };\n\n  const closeDetailsModal = () => {\n    setDisplayEvent(null);\n  };\n\n  const addToEvents = (event) => {\n    if (fitsInWeek(daysOnCal.firstDay, event.start)) {\n      setEvents((events) => [...events, event]);\n    }\n  };\n\n  const updateEvent = (id, data) => {\n    console.log(data);\n    setEvents((events) => {\n    \n      const remainder = events.filter((event) => event._id !== id);\n     \n      const result = [...remainder, data];\n     \n      return result;\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <CalendarStyled hourHeight={hourHeight}>\n        <div></div>\n        <Header\n          currentDate={daysOnCal.currentDate}\n          incrementWeek={incrementWeek}\n          decrementWeek={decrementWeek}\n          handleShowModal={toggleNewJobModal}\n        />\n        <div></div>\n        <DayLabels days={daysOnCal.days} />\n        <HourTicks />\n        <Week\n          events={events}\n          gcalEvents={gcalEvents}\n          days={daysOnCal.days}\n          updateDisplayEvent={updateDisplayEvent}\n          updateEvent={updateEvent}\n        />\n      </CalendarStyled>\n      {showNewJobModal && (\n        <NewJobModal\n          addToEvents={addToEvents}\n          toggleModal={toggleNewJobModal}\n        />\n      )}\n      {displayEvent && (\n        <JobModal\n          displayEvent={displayEvent}\n          close={closeDetailsModal}\n          updateEvent={updateEvent}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","/home/gregorian/calendar-ui/ui/src/utilities/dateUtilities.js",[],"/home/gregorian/calendar-ui/ui/src/components/Week.js",[],"/home/gregorian/calendar-ui/ui/src/components/DayLabels.js",[],"/home/gregorian/calendar-ui/ui/src/components/Header.js",[],"/home/gregorian/calendar-ui/ui/src/components/HourTicks.js",[],"/home/gregorian/calendar-ui/ui/src/components/Calendar/reducer.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/NewJobModal.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/JobModal.js",["159","160","161","162","163","164"],"import Modal from \"./Modal\";\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport JobForm from \"./JobForm\";\nimport { PersonOutline } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontVariant: \"small-caps\",\n    color: \"#324191\",\n  },\n  group: {\n    marginBottom: \"0.5em\",\n  },\n  content: {\n    paddingTop: 0,\n  },\n  li: {\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n  },\n  container: {\n    marginTop: 20,\n    backgroundColor: \"#F3F3FB\",\n  },\n  list: {\n    padding: 0,\n    \"& > li\": {\n      padding: 0,\n    },\n  },\n  pricing: {\n    marginTop: theme.spacing(2), //TODO use row class for top margin\n    textAlign: \"center\",\n  },\n  items: {\n    whiteSpace: \"pre-line\",\n  },\n  row: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function JobModal({ displayEvent, close, updateEvent }) {\n  const classes = useStyles();\n  const [editMode, setEditMode] = React.useState(false);\n\n  const { start, end, customer, charges, operatives, items, addresses } =\n    displayEvent;\n\n  //const { customer } = displayEvent;\n\n  //TODO: map over operatives\n  return (\n    <Modal>\n      {editMode ? (\n        <Card style={{ width: 600, backgroundColor: \"#F3F3FB\" }}>\n          <CardContent>\n            <JobForm\n              title=\"Edit Job\"\n              initialValues={displayEvent}\n              updateEvent={updateEvent}\n              close={close}\n            />\n          </CardContent>\n        </Card>\n      ) : (\n        <>\n          <Card style={{ width: 1200, backgroundColor: \"#F3F3FB\" }}>\n            <CardHeader\n              title={customer.name}\n              action={\n                <>\n                  <IconButton\n                    onClick={() => {\n                      setEditMode(true);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton onClick={close}>\n                    <CloseIcon />\n                  </IconButton>\n                </>\n              }\n            />\n            <CardHeader />\n            <CardContent className={classes.content}>\n              <Grid container spacing={3}>\n                <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Customer Details\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PersonIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.name}\n                            secondary=\"name\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <PhoneIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.mobile}\n                            secondary=\"mobile\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <EmailIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={customer.email}\n                            secondary=\"email\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                  <Grid container spacing={1} className={classes.pricing}>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.hourlyRate}\n                          subheader={\"per hour\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.fuelCharge}\n                          subheader={\"fuel charge\"}\n                        />\n                      </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Card>\n                        <CardHeader\n                          title={charges.travelTime}\n                          subheader={\"travel time\"}\n                        />\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <Card>\n                    <CardHeader title={\"Items\"} />\n                    <CardContent className={classes.items}>{items}</CardContent>\n                  </Card>\n                </Grid>\n                {/* <Grid item xs={4}>\n                  <Card className={classes.card}>\n                    <CardHeader title={\"Removal Operatives\"}></CardHeader>\n                    <CardContent>\n                      <List className={classes.list}>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[0].value}\n                            secondary=\"first man\"\n                          />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AccessibilityNewIcon />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={operatives[1].value}\n                            secondary=\"second man\"\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                </Grid> */}\n              </Grid>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </Modal>\n\n    /* editMode\n        ?\n        <EditJobModal data={displayEvent} addToEvents={addToEvents}/>\n            :\n        <Modal\n        open={true}\n        >\n            <Card style={{width: 300}}>\n                <CardHeader\n                    title={summary}\n                    action={\n                        <>\n                            <IconButton>\n                                <EditIcon onClick={()=>{setEditMode(true)}}/>\n                            </IconButton>\n                            <IconButton>\n                                <CloseIcon onClick={close}/>\n                            </IconButton>\n                        </>\n\n                    }\n                />\n                <CardContent className={classes.content}>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            location\n                        </Typography>\n                        <Typography variant='body2'>\n                            {location}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            start\n                        </Typography>\n                        <Typography variant='body1'>\n                            {start.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            end\n                        </Typography>\n                        <Typography variant='body1'>\n                            {end.toLocaleString()}\n                        </Typography>\n                    </div>\n                    <div className={classes.group}>\n                        <Typography className={classes.title}>\n                            description\n                        </Typography>\n                        <Typography variant='body1'>\n                            {description}\n                        </Typography>\n                    </div>\n\n\n\n\n                    <Typography>\n\n                    </Typography>\n\n\n                </CardContent>\n            </Card>\n        </Modal>*/\n  );\n}\n","/home/gregorian/calendar-ui/ui/src/Model/Jobs.js",[],"/home/gregorian/calendar-ui/ui/src/useGapi/useGapi.js",[],"/home/gregorian/calendar-ui/ui/src/components/Day.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/Modal.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/JobForm.js",["165","166","167","168","169","170","171","172","173","174","175","176"],"/home/gregorian/calendar-ui/ui/src/useGapi/constants.js",[],"/home/gregorian/calendar-ui/ui/src/useGapi/reshape.js",[],"/home/gregorian/calendar-ui/ui/src/useGapi/eventType.js",[],"/home/gregorian/calendar-ui/ui/src/components/Events.js",[],"/home/gregorian/calendar-ui/ui/src/components/Hours.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/StartEndInput.js",["177"],"import { Grid } from \"@material-ui/core\";\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider,\n  TimePicker,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nfunction dateTimeFromInput(date, time) {\n  const hours = time.getHours();\n  const minutes = time.getMinutes();\n  let res = new Date(date);\n  res.setHours(hours);\n  res.setMinutes(minutes);\n  return res;\n}\n\n//export function StartEndInput({startName,endName,startValue,endValue,onStartChange,onEndChange}){\n\nexport function StartEndInput({\n  startName,\n  endName,\n  startValue,\n  endValue,\n  onStartChange,\n  onEndChange,\n  formikProps\n}) {\n  const handleDateChange = (date) => {\n    onStartChange(dateTimeFromInput(date, startValue));\n    onEndChange(dateTimeFromInput(date, endValue));\n  };\n\n \n\n  return (\n    <Container>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DatePicker\n          value={startValue}\n          onChange={handleDateChange}\n          label=\"date\"\n        />\n      </MuiPickersUtilsProvider>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <TimePicker\n          value={startValue}\n          onChange={onStartChange}\n          label=\"start\"\n        />\n      </MuiPickersUtilsProvider>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <TimePicker value={endValue} onChange={onEndChange} label=\"end\" />\n      </MuiPickersUtilsProvider>\n    </Container>\n  );\n}\n","/home/gregorian/calendar-ui/ui/src/components/forms/AddressInput.js",[],"/home/gregorian/calendar-ui/ui/src/components/forms/reducer.js",[],"/home/gregorian/calendar-ui/ui/src/components/hooks/useInput.js",[],"/home/gregorian/calendar-ui/ui/src/components/hooks/useArray.js",[],"/home/gregorian/calendar-ui/ui/src/utilities/batchProcess.js",[],"/home/gregorian/calendar-ui/ui/src/eventGeometry/eventGeometry.js",[],"/home/gregorian/calendar-ui/ui/src/utilities/timeConversions.js",[],"/home/gregorian/calendar-ui/ui/src/eventGeometry/groupEvents.js",[],"/home/gregorian/calendar-ui/ui/src/components/Event.js",[],"/home/gregorian/calendar-ui/ui/src/components/gcalEvent.js",[],"/home/gregorian/calendar-ui/ui/src/components/useDetectBottomEdge.js",[],"/home/gregorian/calendar-ui/ui/src/utilities/utilities.js",[],"/home/gregorian/calendar-ui/ui/src/components/useDrag.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":16,"column":5,"nodeType":"184","messageId":"185","endLine":16,"endColumn":9},{"ruleId":"186","severity":1,"message":"187","line":63,"column":6,"nodeType":"188","endLine":63,"endColumn":25,"suggestions":"189"},{"ruleId":"182","severity":1,"message":"190","line":12,"column":8,"nodeType":"184","messageId":"185","endLine":12,"endColumn":28},{"ruleId":"182","severity":1,"message":"191","line":21,"column":10,"nodeType":"184","messageId":"185","endLine":21,"endColumn":23},{"ruleId":"182","severity":1,"message":"192","line":67,"column":11,"nodeType":"184","messageId":"185","endLine":67,"endColumn":16},{"ruleId":"182","severity":1,"message":"193","line":67,"column":18,"nodeType":"184","messageId":"185","endLine":67,"endColumn":21},{"ruleId":"182","severity":1,"message":"194","line":67,"column":42,"nodeType":"184","messageId":"185","endLine":67,"endColumn":52},{"ruleId":"182","severity":1,"message":"195","line":67,"column":61,"nodeType":"184","messageId":"185","endLine":67,"endColumn":70},{"ruleId":"182","severity":1,"message":"196","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":27},{"ruleId":"182","severity":1,"message":"197","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":18},{"ruleId":"182","severity":1,"message":"198","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"199","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":24},{"ruleId":"182","severity":1,"message":"200","line":5,"column":26,"nodeType":"184","messageId":"185","endLine":5,"endColumn":39},{"ruleId":"182","severity":1,"message":"201","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":25},{"ruleId":"182","severity":1,"message":"202","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":17},{"ruleId":"182","severity":1,"message":"203","line":10,"column":21,"nodeType":"184","messageId":"185","endLine":10,"endColumn":27},{"ruleId":"182","severity":1,"message":"204","line":10,"column":29,"nodeType":"184","messageId":"185","endLine":10,"endColumn":36},{"ruleId":"182","severity":1,"message":"205","line":15,"column":21,"nodeType":"184","messageId":"185","endLine":15,"endColumn":25},{"ruleId":"182","severity":1,"message":"206","line":19,"column":10,"nodeType":"184","messageId":"185","endLine":19,"endColumn":21},{"ruleId":"182","severity":1,"message":"207","line":28,"column":10,"nodeType":"184","messageId":"185","endLine":28,"endColumn":20},{"ruleId":"182","severity":1,"message":"205","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":14},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'listEvents'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'AccessibilityNewIcon' is defined but never used.","'PersonOutline' is defined but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'operatives' is assigned a value but never used.","'addresses' is assigned a value but never used.","'useReducer' is defined but never used.","'useInput' is defined but never used.","'useArray' is defined but never used.","'startEndChange' is defined but never used.","'StartEndInput' is defined but never used.","'useImmerReducer' is defined but never used.","'camelCase' is defined but never used.","'values' is defined but never used.","'flatten' is defined but never used.","'Grid' is defined but never used.","'rootReducer' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [authed, daysOnCal, listEvents]",{"range":"213","text":"214"},[1968,1987],"[authed, daysOnCal, listEvents]"]